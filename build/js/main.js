function scriptGroupsAnimation(){var t=$(".sidepanel-script-groups");t.hasClass("slideInRight")?($(this).html('<i class="fa fa-arrow-left"></i> Open Script Groups'),t.removeClass("animated slideInRight"),t.addClass("animated slideInLeft")):($(this).html('<i class="fa fa-arrow-right"></i> Close Script Groups'),t.removeClass("animated slideInLeft"),t.addClass("animated slideInRight"))}function errorIndicator(t){var e=$(".error-message");t.siblings(e).removeClass("hidden"),t.addClass("error-indicator"),setTimeout(function(){t.siblings(e).addClass("hidden"),t.removeClass("error-indicator")},3e3)}function saveInputValue(t){var e=$(this).val();$(this).closest("td").hasClass("description-field-column")?$.ajax("ajax.php",{type:"POST",data:{newDescriptionValue:e},success:function(t){console.log("New desc: "+t)}}):$(this).closest("td").hasClass("voice-talent-column")&&$.ajax("ajax.php",{type:"POST",data:{newCampValue:e},success:function(t){console.log("New camp: "+t)}})}function createNewScript(t){t.preventDefault();var e=$(".js_new_script_name"),i=e.val(),n=($(".js_new_script_description").val(),$(this).closest("form"));null!=i&&""!=i?$.ajax(n.attr("action"),{type:n.attr("method"),data:n.serialize(),success:function(t){console.log(t)}}):errorIndicator(e)}function deleteRow(){var t=$(this).closest("tr"),e=t.find("td").first().text(),i=t.data("script-id");return console.log(i),!!confirm("Are you sure you want to delete script?")&&void $.ajax("ajax.php",{type:"POST",data:{action:"delete_script",scriptName:e,scriptId:i},success:function(e){t.remove()}})}if(function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function i(t,e){e=e||et;var i=e.createElement("script");i.text=t,e.head.appendChild(i).parentNode.removeChild(i)}function n(t){var e=!!t&&"length"in t&&t.length,i=pt.type(t);return"function"!==i&&!pt.isWindow(t)&&("array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t)}function s(t,e,i){return pt.isFunction(e)?pt.grep(t,function(t,n){return!!e.call(t,n,t)!==i}):e.nodeType?pt.grep(t,function(t){return t===e!==i}):"string"!=typeof e?pt.grep(t,function(t){return at.call(e,t)>-1!==i}):Ct.test(e)?pt.filter(e,t,i):(e=pt.filter(e,t),pt.grep(t,function(t){return at.call(e,t)>-1!==i&&1===t.nodeType}))}function o(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function a(t){var e={};return pt.each(t.match(It)||[],function(t,i){e[i]=!0}),e}function r(t){return t}function l(t){throw t}function h(t,e,i){var n;try{t&&pt.isFunction(n=t.promise)?n.call(t).done(e).fail(i):t&&pt.isFunction(n=t.then)?n.call(t,e,i):e.call(void 0,t)}catch(t){i.call(void 0,t)}}function c(){et.removeEventListener("DOMContentLoaded",c),t.removeEventListener("load",c),pt.ready()}function u(){this.expando=pt.expando+u.uid++}function d(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Rt.test(t)?JSON.parse(t):t)}function f(t,e,i){var n;if(void 0===i&&1===t.nodeType)if(n="data-"+e.replace(Ft,"-$&").toLowerCase(),i=t.getAttribute(n),"string"==typeof i){try{i=d(i)}catch(s){}Lt.set(t,e,i)}else i=void 0;return i}function p(t,e,i,n){var s,o=1,a=20,r=n?function(){return n.cur()}:function(){return pt.css(t,e,"")},l=r(),h=i&&i[3]||(pt.cssNumber[e]?"":"px"),c=(pt.cssNumber[e]||"px"!==h&&+l)&&$t.exec(pt.css(t,e));if(c&&c[3]!==h){h=h||c[3],i=i||[],c=+l||1;do o=o||".5",c/=o,pt.style(t,e,c+h);while(o!==(o=r()/l)&&1!==o&&--a)}return i&&(c=+c||+l||0,s=i[1]?c+(i[1]+1)*i[2]:+i[2],n&&(n.unit=h,n.start=c,n.end=s)),s}function m(t){var e,i=t.ownerDocument,n=t.nodeName,s=Bt[n];return s?s:(e=i.body.appendChild(i.createElement(n)),s=pt.css(e,"display"),e.parentNode.removeChild(e),"none"===s&&(s="block"),Bt[n]=s,s)}function g(t,e){for(var i,n,s=[],o=0,a=t.length;o<a;o++)n=t[o],n.style&&(i=n.style.display,e?("none"===i&&(s[o]=Nt.get(n,"display")||null,s[o]||(n.style.display="")),""===n.style.display&&jt(n)&&(s[o]=m(n))):"none"!==i&&(s[o]="none",Nt.set(n,"display",i)));for(o=0;o<a;o++)null!=s[o]&&(t[o].style.display=s[o]);return t}function v(t,e){var i;return i="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&pt.nodeName(t,e)?pt.merge([t],i):i}function b(t,e){for(var i=0,n=t.length;i<n;i++)Nt.set(t[i],"globalEval",!e||Nt.get(e[i],"globalEval"))}function y(t,e,i,n,s){for(var o,a,r,l,h,c,u=e.createDocumentFragment(),d=[],f=0,p=t.length;f<p;f++)if(o=t[f],o||0===o)if("object"===pt.type(o))pt.merge(d,o.nodeType?[o]:o);else if(Xt.test(o)){for(a=a||u.appendChild(e.createElement("div")),r=(Ut.exec(o)||["",""])[1].toLowerCase(),l=Gt[r]||Gt._default,a.innerHTML=l[1]+pt.htmlPrefilter(o)+l[2],c=l[0];c--;)a=a.lastChild;pt.merge(d,a.childNodes),a=u.firstChild,a.textContent=""}else d.push(e.createTextNode(o));for(u.textContent="",f=0;o=d[f++];)if(n&&pt.inArray(o,n)>-1)s&&s.push(o);else if(h=pt.contains(o.ownerDocument,o),a=v(u.appendChild(o),"script"),h&&b(a),i)for(c=0;o=a[c++];)Vt.test(o.type||"")&&i.push(o);return u}function _(){return!0}function w(){return!1}function x(){try{return et.activeElement}catch(t){}}function D(t,e,i,n,s,o){var a,r;if("object"==typeof e){"string"!=typeof i&&(n=n||i,i=void 0);for(r in e)D(t,r,i,n,e[r],o);return t}if(null==n&&null==s?(s=i,n=i=void 0):null==s&&("string"==typeof i?(s=n,n=void 0):(s=n,n=i,i=void 0)),s===!1)s=w;else if(!s)return t;return 1===o&&(a=s,s=function(t){return pt().off(t),a.apply(this,arguments)},s.guid=a.guid||(a.guid=pt.guid++)),t.each(function(){pt.event.add(this,e,s,n,i)})}function C(t,e){return pt.nodeName(t,"table")&&pt.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t:t}function S(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function T(t){var e=ne.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function k(t,e){var i,n,s,o,a,r,l,h;if(1===e.nodeType){if(Nt.hasData(t)&&(o=Nt.access(t),a=Nt.set(e,o),h=o.events)){delete a.handle,a.events={};for(s in h)for(i=0,n=h[s].length;i<n;i++)pt.event.add(e,s,h[s][i])}Lt.hasData(t)&&(r=Lt.access(t),l=pt.extend({},r),Lt.set(e,l))}}function E(t,e){var i=e.nodeName.toLowerCase();"input"===i&&qt.test(t.type)?e.checked=t.checked:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}function M(t,e,n,s){e=st.apply([],e);var o,a,r,l,h,c,u=0,d=t.length,f=d-1,p=e[0],m=pt.isFunction(p);if(m||d>1&&"string"==typeof p&&!dt.checkClone&&ie.test(p))return t.each(function(i){var o=t.eq(i);m&&(e[0]=p.call(this,i,o.html())),M(o,e,n,s)});if(d&&(o=y(e,t[0].ownerDocument,!1,t,s),a=o.firstChild,1===o.childNodes.length&&(o=a),a||s)){for(r=pt.map(v(o,"script"),S),l=r.length;u<d;u++)h=o,u!==f&&(h=pt.clone(h,!0,!0),l&&pt.merge(r,v(h,"script"))),n.call(t[u],h,u);if(l)for(c=r[r.length-1].ownerDocument,pt.map(r,T),u=0;u<l;u++)h=r[u],Vt.test(h.type||"")&&!Nt.access(h,"globalEval")&&pt.contains(c,h)&&(h.src?pt._evalUrl&&pt._evalUrl(h.src):i(h.textContent.replace(se,""),c))}return t}function I(t,e,i){for(var n,s=e?pt.filter(e,t):t,o=0;null!=(n=s[o]);o++)i||1!==n.nodeType||pt.cleanData(v(n)),n.parentNode&&(i&&pt.contains(n.ownerDocument,n)&&b(v(n,"script")),n.parentNode.removeChild(n));return t}function A(t,e,i){var n,s,o,a,r=t.style;return i=i||re(t),i&&(a=i.getPropertyValue(e)||i[e],""!==a||pt.contains(t.ownerDocument,t)||(a=pt.style(t,e)),!dt.pixelMarginRight()&&ae.test(a)&&oe.test(e)&&(n=r.width,s=r.minWidth,o=r.maxWidth,r.minWidth=r.maxWidth=r.width=a,a=i.width,r.width=n,r.minWidth=s,r.maxWidth=o)),void 0!==a?a+"":a}function P(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function H(t){if(t in de)return t;for(var e=t[0].toUpperCase()+t.slice(1),i=ue.length;i--;)if(t=ue[i]+e,t in de)return t}function O(t,e,i){var n=$t.exec(e);return n?Math.max(0,n[2]-(i||0))+(n[3]||"px"):e}function N(t,e,i,n,s){var o,a=0;for(o=i===(n?"border":"content")?4:"width"===e?1:0;o<4;o+=2)"margin"===i&&(a+=pt.css(t,i+Wt[o],!0,s)),n?("content"===i&&(a-=pt.css(t,"padding"+Wt[o],!0,s)),"margin"!==i&&(a-=pt.css(t,"border"+Wt[o]+"Width",!0,s))):(a+=pt.css(t,"padding"+Wt[o],!0,s),"padding"!==i&&(a+=pt.css(t,"border"+Wt[o]+"Width",!0,s)));return a}function L(t,e,i){var n,s=!0,o=re(t),a="border-box"===pt.css(t,"boxSizing",!1,o);if(t.getClientRects().length&&(n=t.getBoundingClientRect()[e]),n<=0||null==n){if(n=A(t,e,o),(n<0||null==n)&&(n=t.style[e]),ae.test(n))return n;s=a&&(dt.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+N(t,e,i||(a?"border":"content"),s,o)+"px"}function R(t,e,i,n,s){return new R.prototype.init(t,e,i,n,s)}function F(){pe&&(t.requestAnimationFrame(F),pt.fx.tick())}function z(){return t.setTimeout(function(){fe=void 0}),fe=pt.now()}function $(t,e){var i,n=0,s={height:t};for(e=e?1:0;n<4;n+=2-e)i=Wt[n],s["margin"+i]=s["padding"+i]=t;return e&&(s.opacity=s.width=t),s}function W(t,e,i){for(var n,s=(B.tweeners[e]||[]).concat(B.tweeners["*"]),o=0,a=s.length;o<a;o++)if(n=s[o].call(i,e,t))return n}function j(t,e,i){var n,s,o,a,r,l,h,c,u="width"in e||"height"in e,d=this,f={},p=t.style,m=t.nodeType&&jt(t),v=Nt.get(t,"fxshow");i.queue||(a=pt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,r=a.empty.fire,a.empty.fire=function(){a.unqueued||r()}),a.unqueued++,d.always(function(){d.always(function(){a.unqueued--,pt.queue(t,"fx").length||a.empty.fire()})}));for(n in e)if(s=e[n],me.test(s)){if(delete e[n],o=o||"toggle"===s,s===(m?"hide":"show")){if("show"!==s||!v||void 0===v[n])continue;m=!0}f[n]=v&&v[n]||pt.style(t,n)}if(l=!pt.isEmptyObject(e),l||!pt.isEmptyObject(f)){u&&1===t.nodeType&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],h=v&&v.display,null==h&&(h=Nt.get(t,"display")),c=pt.css(t,"display"),"none"===c&&(h?c=h:(g([t],!0),h=t.style.display||h,c=pt.css(t,"display"),g([t]))),("inline"===c||"inline-block"===c&&null!=h)&&"none"===pt.css(t,"float")&&(l||(d.done(function(){p.display=h}),null==h&&(c=p.display,h="none"===c?"":c)),p.display="inline-block")),i.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]})),l=!1;for(n in f)l||(v?"hidden"in v&&(m=v.hidden):v=Nt.access(t,"fxshow",{display:h}),o&&(v.hidden=!m),m&&g([t],!0),d.done(function(){m||g([t]),Nt.remove(t,"fxshow");for(n in f)pt.style(t,n,f[n])})),l=W(m?v[n]:0,n,d),n in v||(v[n]=l.start,m&&(l.end=l.start,l.start=0))}}function Y(t,e){var i,n,s,o,a;for(i in t)if(n=pt.camelCase(i),s=e[n],o=t[i],pt.isArray(o)&&(s=o[1],o=t[i]=o[0]),i!==n&&(t[n]=o,delete t[i]),a=pt.cssHooks[n],a&&"expand"in a){o=a.expand(o),delete t[n];for(i in o)i in t||(t[i]=o[i],e[i]=s)}else e[n]=s}function B(t,e,i){var n,s,o=0,a=B.prefilters.length,r=pt.Deferred().always(function(){delete l.elem}),l=function(){if(s)return!1;for(var e=fe||z(),i=Math.max(0,h.startTime+h.duration-e),n=i/h.duration||0,o=1-n,a=0,l=h.tweens.length;a<l;a++)h.tweens[a].run(o);return r.notifyWith(t,[h,o,i]),o<1&&l?i:(r.resolveWith(t,[h]),!1)},h=r.promise({elem:t,props:pt.extend({},e),opts:pt.extend(!0,{specialEasing:{},easing:pt.easing._default},i),originalProperties:e,originalOptions:i,startTime:fe||z(),duration:i.duration,tweens:[],createTween:function(e,i){var n=pt.Tween(t,h.opts,e,i,h.opts.specialEasing[e]||h.opts.easing);return h.tweens.push(n),n},stop:function(e){var i=0,n=e?h.tweens.length:0;if(s)return this;for(s=!0;i<n;i++)h.tweens[i].run(1);return e?(r.notifyWith(t,[h,1,0]),r.resolveWith(t,[h,e])):r.rejectWith(t,[h,e]),this}}),c=h.props;for(Y(c,h.opts.specialEasing);o<a;o++)if(n=B.prefilters[o].call(h,t,c,h.opts))return pt.isFunction(n.stop)&&(pt._queueHooks(h.elem,h.opts.queue).stop=pt.proxy(n.stop,n)),n;return pt.map(c,W,h),pt.isFunction(h.opts.start)&&h.opts.start.call(t,h),pt.fx.timer(pt.extend(l,{elem:t,anim:h,queue:h.opts.queue})),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always)}function q(t){var e=t.match(It)||[];return e.join(" ")}function U(t){return t.getAttribute&&t.getAttribute("class")||""}function V(t,e,i,n){var s;if(pt.isArray(e))pt.each(e,function(e,s){i||Te.test(t)?n(t,s):V(t+"["+("object"==typeof s&&null!=s?e:"")+"]",s,i,n)});else if(i||"object"!==pt.type(e))n(t,e);else for(s in e)V(t+"["+s+"]",e[s],i,n)}function G(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var n,s=0,o=e.toLowerCase().match(It)||[];if(pt.isFunction(i))for(;n=o[s++];)"+"===n[0]?(n=n.slice(1)||"*",(t[n]=t[n]||[]).unshift(i)):(t[n]=t[n]||[]).push(i)}}function X(t,e,i,n){function s(r){var l;return o[r]=!0,pt.each(t[r]||[],function(t,r){var h=r(e,i,n);return"string"!=typeof h||a||o[h]?a?!(l=h):void 0:(e.dataTypes.unshift(h),s(h),!1)}),l}var o={},a=t===Fe;return s(e.dataTypes[0])||!o["*"]&&s("*")}function Z(t,e){var i,n,s=pt.ajaxSettings.flatOptions||{};for(i in e)void 0!==e[i]&&((s[i]?t:n||(n={}))[i]=e[i]);return n&&pt.extend(!0,t,n),t}function K(t,e,i){for(var n,s,o,a,r=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in r)if(r[s]&&r[s].test(n)){l.unshift(s);break}if(l[0]in i)o=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){o=s;break}a||(a=s)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),i[o]}function J(t,e,i,n){var s,o,a,r,l,h={},c=t.dataTypes.slice();if(c[1])for(a in t.converters)h[a.toLowerCase()]=t.converters[a];for(o=c.shift();o;)if(t.responseFields[o]&&(i[t.responseFields[o]]=e),!l&&n&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=h[l+" "+o]||h["* "+o],!a)for(s in h)if(r=s.split(" "),r[1]===o&&(a=h[l+" "+r[0]]||h["* "+r[0]])){a===!0?a=h[s]:h[s]!==!0&&(o=r[0],c.unshift(r[1]));break}if(a!==!0)if(a&&t["throws"])e=a(e);else try{e=a(e)}catch(u){return{state:"parsererror",error:a?u:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}function Q(t){return pt.isWindow(t)?t:9===t.nodeType&&t.defaultView}var tt=[],et=t.document,it=Object.getPrototypeOf,nt=tt.slice,st=tt.concat,ot=tt.push,at=tt.indexOf,rt={},lt=rt.toString,ht=rt.hasOwnProperty,ct=ht.toString,ut=ct.call(Object),dt={},ft="3.1.1",pt=function(t,e){return new pt.fn.init(t,e)},mt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,gt=/^-ms-/,vt=/-([a-z])/g,bt=function(t,e){return e.toUpperCase()};pt.fn=pt.prototype={jquery:ft,constructor:pt,length:0,toArray:function(){return nt.call(this)},get:function(t){return null==t?nt.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=pt.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return pt.each(this,t)},map:function(t){return this.pushStack(pt.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(nt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(t<0?e:0);return this.pushStack(i>=0&&i<e?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:ot,sort:tt.sort,splice:tt.splice},pt.extend=pt.fn.extend=function(){var t,e,i,n,s,o,a=arguments[0]||{},r=1,l=arguments.length,h=!1;for("boolean"==typeof a&&(h=a,a=arguments[r]||{},r++),"object"==typeof a||pt.isFunction(a)||(a={}),r===l&&(a=this,r--);r<l;r++)if(null!=(t=arguments[r]))for(e in t)i=a[e],n=t[e],a!==n&&(h&&n&&(pt.isPlainObject(n)||(s=pt.isArray(n)))?(s?(s=!1,o=i&&pt.isArray(i)?i:[]):o=i&&pt.isPlainObject(i)?i:{},a[e]=pt.extend(h,o,n)):void 0!==n&&(a[e]=n));return a},pt.extend({expando:"jQuery"+(ft+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===pt.type(t)},isArray:Array.isArray,isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=pt.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,i;return!(!t||"[object Object]"!==lt.call(t))&&(!(e=it(t))||(i=ht.call(e,"constructor")&&e.constructor,"function"==typeof i&&ct.call(i)===ut))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?rt[lt.call(t)]||"object":typeof t},globalEval:function(t){i(t)},camelCase:function(t){return t.replace(gt,"ms-").replace(vt,bt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var i,s=0;if(n(t))for(i=t.length;s<i&&e.call(t[s],s,t[s])!==!1;s++);else for(s in t)if(e.call(t[s],s,t[s])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(mt,"")},makeArray:function(t,e){var i=e||[];return null!=t&&(n(Object(t))?pt.merge(i,"string"==typeof t?[t]:t):ot.call(i,t)),i},inArray:function(t,e,i){return null==e?-1:at.call(e,t,i)},merge:function(t,e){for(var i=+e.length,n=0,s=t.length;n<i;n++)t[s++]=e[n];return t.length=s,t},grep:function(t,e,i){for(var n,s=[],o=0,a=t.length,r=!i;o<a;o++)n=!e(t[o],o),n!==r&&s.push(t[o]);return s},map:function(t,e,i){var s,o,a=0,r=[];if(n(t))for(s=t.length;a<s;a++)o=e(t[a],a,i),null!=o&&r.push(o);else for(a in t)o=e(t[a],a,i),null!=o&&r.push(o);return st.apply([],r)},guid:1,proxy:function(t,e){var i,n,s;if("string"==typeof e&&(i=t[e],e=t,t=i),pt.isFunction(t))return n=nt.call(arguments,2),s=function(){return t.apply(e||this,n.concat(nt.call(arguments)))},s.guid=t.guid=t.guid||pt.guid++,s},now:Date.now,support:dt}),"function"==typeof Symbol&&(pt.fn[Symbol.iterator]=tt[Symbol.iterator]),pt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){rt["[object "+e+"]"]=e.toLowerCase()});var yt=function(t){function e(t,e,i,n){var s,o,a,r,l,h,c,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return i;if(!n&&((e?e.ownerDocument||e:W)!==H&&P(e),e=e||H,N)){if(11!==p&&(l=vt.exec(t)))if(s=l[1]){if(9===p){if(!(a=e.getElementById(s)))return i;if(a.id===s)return i.push(a),i}else if(d&&(a=d.getElementById(s))&&z(e,a)&&a.id===s)return i.push(a),i}else{if(l[2])return J.apply(i,e.getElementsByTagName(t)),i;if((s=l[3])&&x.getElementsByClassName&&e.getElementsByClassName)return J.apply(i,e.getElementsByClassName(s)),i}if(x.qsa&&!U[t+" "]&&(!L||!L.test(t))){if(1!==p)d=e,c=t;else if("object"!==e.nodeName.toLowerCase()){for((r=e.getAttribute("id"))?r=r.replace(wt,xt):e.setAttribute("id",r=$),h=T(t),o=h.length;o--;)h[o]="#"+r+" "+f(h[o]);c=h.join(","),d=bt.test(t)&&u(e.parentNode)||e}if(c)try{return J.apply(i,d.querySelectorAll(c)),i}catch(m){}finally{r===$&&e.removeAttribute("id")}}}return E(t.replace(rt,"$1"),e,i,n)}function i(){function t(i,n){return e.push(i+" ")>D.cacheLength&&delete t[e.shift()],t[i+" "]=n}var e=[];return t}function n(t){return t[$]=!0,t}function s(t){var e=H.createElement("fieldset");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var i=t.split("|"),n=i.length;n--;)D.attrHandle[i[n]]=e}function a(t,e){var i=e&&t,n=i&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(n)return n;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function r(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function h(t){return function(e){return"form"in e?e.parentNode&&e.disabled===!1?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&Ct(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function c(t){return n(function(e){return e=+e,n(function(i,n){for(var s,o=t([],i.length,e),a=o.length;a--;)i[s=o[a]]&&(i[s]=!(n[s]=i[s]))})})}function u(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function d(){}function f(t){for(var e=0,i=t.length,n="";e<i;e++)n+=t[e].value;return n}function p(t,e,i){var n=e.dir,s=e.next,o=s||n,a=i&&"parentNode"===o,r=Y++;return e.first?function(e,i,s){for(;e=e[n];)if(1===e.nodeType||a)return t(e,i,s);return!1}:function(e,i,l){var h,c,u,d=[j,r];if(l){for(;e=e[n];)if((1===e.nodeType||a)&&t(e,i,l))return!0}else for(;e=e[n];)if(1===e.nodeType||a)if(u=e[$]||(e[$]={}),c=u[e.uniqueID]||(u[e.uniqueID]={}),s&&s===e.nodeName.toLowerCase())e=e[n]||e;else{if((h=c[o])&&h[0]===j&&h[1]===r)return d[2]=h[2];if(c[o]=d,d[2]=t(e,i,l))return!0}return!1}}function m(t){return t.length>1?function(e,i,n){for(var s=t.length;s--;)if(!t[s](e,i,n))return!1;return!0}:t[0]}function g(t,i,n){for(var s=0,o=i.length;s<o;s++)e(t,i[s],n);return n}function v(t,e,i,n,s){for(var o,a=[],r=0,l=t.length,h=null!=e;r<l;r++)(o=t[r])&&(i&&!i(o,n,s)||(a.push(o),h&&e.push(r)));return a}function b(t,e,i,s,o,a){return s&&!s[$]&&(s=b(s)),o&&!o[$]&&(o=b(o,a)),n(function(n,a,r,l){var h,c,u,d=[],f=[],p=a.length,m=n||g(e||"*",r.nodeType?[r]:r,[]),b=!t||!n&&e?m:v(m,d,t,r,l),y=i?o||(n?t:p||s)?[]:a:b;if(i&&i(b,y,r,l),s)for(h=v(y,f),s(h,[],r,l),c=h.length;c--;)(u=h[c])&&(y[f[c]]=!(b[f[c]]=u));if(n){if(o||t){if(o){for(h=[],c=y.length;c--;)(u=y[c])&&h.push(b[c]=u);o(null,y=[],h,l)}for(c=y.length;c--;)(u=y[c])&&(h=o?tt(n,u):d[c])>-1&&(n[h]=!(a[h]=u))}}else y=v(y===a?y.splice(p,y.length):y),o?o(null,a,y,l):J.apply(a,y)})}function y(t){for(var e,i,n,s=t.length,o=D.relative[t[0].type],a=o||D.relative[" "],r=o?1:0,l=p(function(t){return t===e},a,!0),h=p(function(t){return tt(e,t)>-1},a,!0),c=[function(t,i,n){var s=!o&&(n||i!==M)||((e=i).nodeType?l(t,i,n):h(t,i,n));return e=null,s}];r<s;r++)if(i=D.relative[t[r].type])c=[p(m(c),i)];else{if(i=D.filter[t[r].type].apply(null,t[r].matches),i[$]){for(n=++r;n<s&&!D.relative[t[n].type];n++);return b(r>1&&m(c),r>1&&f(t.slice(0,r-1).concat({value:" "===t[r-2].type?"*":""})).replace(rt,"$1"),i,r<n&&y(t.slice(r,n)),n<s&&y(t=t.slice(n)),n<s&&f(t))}c.push(i)}return m(c)}function _(t,i){var s=i.length>0,o=t.length>0,a=function(n,a,r,l,h){var c,u,d,f=0,p="0",m=n&&[],g=[],b=M,y=n||o&&D.find.TAG("*",h),_=j+=null==b?1:Math.random()||.1,w=y.length;for(h&&(M=a===H||a||h);p!==w&&null!=(c=y[p]);p++){if(o&&c){for(u=0,a||c.ownerDocument===H||(P(c),r=!N);d=t[u++];)if(d(c,a||H,r)){l.push(c);break}h&&(j=_)}s&&((c=!d&&c)&&f--,n&&m.push(c))}if(f+=p,s&&p!==f){for(u=0;d=i[u++];)d(m,g,a,r);if(n){if(f>0)for(;p--;)m[p]||g[p]||(g[p]=Z.call(l));g=v(g)}J.apply(l,g),h&&!n&&g.length>0&&f+i.length>1&&e.uniqueSort(l)}return h&&(j=_,M=b),m};return s?n(a):a}var w,x,D,C,S,T,k,E,M,I,A,P,H,O,N,L,R,F,z,$="sizzle"+1*new Date,W=t.document,j=0,Y=0,B=i(),q=i(),U=i(),V=function(t,e){return t===e&&(A=!0),0},G={}.hasOwnProperty,X=[],Z=X.pop,K=X.push,J=X.push,Q=X.slice,tt=function(t,e){for(var i=0,n=t.length;i<n;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",nt="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",st="\\["+it+"*("+nt+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+nt+"))|)"+it+"*\\]",ot=":("+nt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+st+")*)|.*)\\)|)",at=new RegExp(it+"+","g"),rt=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ht=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ct=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ut=new RegExp(ot),dt=new RegExp("^"+nt+"$"),ft={ID:new RegExp("^#("+nt+")"),CLASS:new RegExp("^\\.("+nt+")"),TAG:new RegExp("^("+nt+"|[*])"),ATTR:new RegExp("^"+st),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,gt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,bt=/[+~]/,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),_t=function(t,e,i){var n="0x"+e-65536;return n!==n||i?e:n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320)},wt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,xt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},Dt=function(){P()},Ct=p(function(t){return t.disabled===!0&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{J.apply(X=Q.call(W.childNodes),W.childNodes),X[W.childNodes.length].nodeType}catch(St){J={apply:X.length?function(t,e){K.apply(t,Q.call(e))}:function(t,e){for(var i=t.length,n=0;t[i++]=e[n++];);t.length=i-1}}}x=e.support={},S=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},P=e.setDocument=function(t){var e,i,n=t?t.ownerDocument||t:W;return n!==H&&9===n.nodeType&&n.documentElement?(H=n,O=H.documentElement,N=!S(H),W!==H&&(i=H.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",Dt,!1):i.attachEvent&&i.attachEvent("onunload",Dt)),x.attributes=s(function(t){return t.className="i",!t.getAttribute("className")}),x.getElementsByTagName=s(function(t){return t.appendChild(H.createComment("")),!t.getElementsByTagName("*").length}),x.getElementsByClassName=gt.test(H.getElementsByClassName),x.getById=s(function(t){return O.appendChild(t).id=$,!H.getElementsByName||!H.getElementsByName($).length}),x.getById?(D.filter.ID=function(t){var e=t.replace(yt,_t);return function(t){return t.getAttribute("id")===e}},D.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&N){var i=e.getElementById(t);return i?[i]:[]}}):(D.filter.ID=function(t){var e=t.replace(yt,_t);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}},D.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&N){var i,n,s,o=e.getElementById(t);if(o){if(i=o.getAttributeNode("id"),i&&i.value===t)return[o];for(s=e.getElementsByName(t),n=0;o=s[n++];)if(i=o.getAttributeNode("id"),i&&i.value===t)return[o]}return[]}}),D.find.TAG=x.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):x.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,n=[],s=0,o=e.getElementsByTagName(t);if("*"===t){for(;i=o[s++];)1===i.nodeType&&n.push(i);return n}return o},D.find.CLASS=x.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&N)return e.getElementsByClassName(t)},R=[],L=[],(x.qsa=gt.test(H.querySelectorAll))&&(s(function(t){O.appendChild(t).innerHTML="<a id='"+$+"'></a><select id='"+$+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&L.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||L.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+$+"-]").length||L.push("~="),t.querySelectorAll(":checked").length||L.push(":checked"),t.querySelectorAll("a#"+$+"+*").length||L.push(".#.+[+~]")}),s(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=H.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&L.push("name"+it+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&L.push(":enabled",":disabled"),O.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&L.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),L.push(",.*:")})),(x.matchesSelector=gt.test(F=O.matches||O.webkitMatchesSelector||O.mozMatchesSelector||O.oMatchesSelector||O.msMatchesSelector))&&s(function(t){x.disconnectedMatch=F.call(t,"*"),F.call(t,"[s!='']:x"),R.push("!=",ot)}),L=L.length&&new RegExp(L.join("|")),R=R.length&&new RegExp(R.join("|")),e=gt.test(O.compareDocumentPosition),z=e||gt.test(O.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,n=e&&e.parentNode;return t===n||!(!n||1!==n.nodeType||!(i.contains?i.contains(n):t.compareDocumentPosition&&16&t.compareDocumentPosition(n)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},V=e?function(t,e){if(t===e)return A=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!x.sortDetached&&e.compareDocumentPosition(t)===i?t===H||t.ownerDocument===W&&z(W,t)?-1:e===H||e.ownerDocument===W&&z(W,e)?1:I?tt(I,t)-tt(I,e):0:4&i?-1:1)}:function(t,e){if(t===e)return A=!0,0;var i,n=0,s=t.parentNode,o=e.parentNode,r=[t],l=[e];if(!s||!o)return t===H?-1:e===H?1:s?-1:o?1:I?tt(I,t)-tt(I,e):0;if(s===o)return a(t,e);for(i=t;i=i.parentNode;)r.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;r[n]===l[n];)n++;return n?a(r[n],l[n]):r[n]===W?-1:l[n]===W?1:0},H):H},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==H&&P(t),i=i.replace(ct,"='$1']"),x.matchesSelector&&N&&!U[i+" "]&&(!R||!R.test(i))&&(!L||!L.test(i)))try{var n=F.call(t,i);if(n||x.disconnectedMatch||t.document&&11!==t.document.nodeType)return n}catch(s){}return e(i,H,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==H&&P(t),z(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==H&&P(t);var i=D.attrHandle[e.toLowerCase()],n=i&&G.call(D.attrHandle,e.toLowerCase())?i(t,e,!N):void 0;return void 0!==n?n:x.attributes||!N?t.getAttribute(e):(n=t.getAttributeNode(e))&&n.specified?n.value:null},e.escape=function(t){return(t+"").replace(wt,xt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],n=0,s=0;if(A=!x.detectDuplicates,I=!x.sortStable&&t.slice(0),t.sort(V),A){for(;e=t[s++];)e===t[s]&&(n=i.push(s));for(;n--;)t.splice(i[n],1)}return I=null,t},C=e.getText=function(t){var e,i="",n=0,s=t.nodeType;if(s){if(1===s||9===s||11===s){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=C(t)}else if(3===s||4===s)return t.nodeValue}else for(;e=t[n++];)i+=C(e);return i},D=e.selectors={cacheLength:50,createPseudo:n,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,_t),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,_t),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ut.test(i)&&(e=T(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,_t).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=B[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&B(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,n){return function(s){var o=e.attr(s,t);return null==o?"!="===i:!i||(o+="","="===i?o===n:"!="===i?o!==n:"^="===i?n&&0===o.indexOf(n):"*="===i?n&&o.indexOf(n)>-1:"$="===i?n&&o.slice(-n.length)===n:"~="===i?(" "+o.replace(at," ")+" ").indexOf(n)>-1:"|="===i&&(o===n||o.slice(0,n.length+1)===n+"-"))}},CHILD:function(t,e,i,n,s){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),r="of-type"===e;return 1===n&&0===s?function(t){return!!t.parentNode}:function(e,i,l){var h,c,u,d,f,p,m=o!==a?"nextSibling":"previousSibling",g=e.parentNode,v=r&&e.nodeName.toLowerCase(),b=!l&&!r,y=!1;if(g){if(o){for(;m;){for(d=e;d=d[m];)if(r?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=m="only"===t&&!p&&"nextSibling"}return!0}if(p=[a?g.firstChild:g.lastChild],
a&&b){for(d=g,u=d[$]||(d[$]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),h=c[t]||[],f=h[0]===j&&h[1],y=f&&h[2],d=f&&g.childNodes[f];d=++f&&d&&d[m]||(y=f=0)||p.pop();)if(1===d.nodeType&&++y&&d===e){c[t]=[j,f,y];break}}else if(b&&(d=e,u=d[$]||(d[$]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),h=c[t]||[],f=h[0]===j&&h[1],y=f),y===!1)for(;(d=++f&&d&&d[m]||(y=f=0)||p.pop())&&((r?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++y||(b&&(u=d[$]||(d[$]={}),c=u[d.uniqueID]||(u[d.uniqueID]={}),c[t]=[j,y]),d!==e)););return y-=s,y===n||y%n===0&&y/n>=0}}},PSEUDO:function(t,i){var s,o=D.pseudos[t]||D.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[$]?o(i):o.length>1?(s=[t,t,"",i],D.setFilters.hasOwnProperty(t.toLowerCase())?n(function(t,e){for(var n,s=o(t,i),a=s.length;a--;)n=tt(t,s[a]),t[n]=!(e[n]=s[a])}):function(t){return o(t,0,s)}):o}},pseudos:{not:n(function(t){var e=[],i=[],s=k(t.replace(rt,"$1"));return s[$]?n(function(t,e,i,n){for(var o,a=s(t,null,n,[]),r=t.length;r--;)(o=a[r])&&(t[r]=!(e[r]=o))}):function(t,n,o){return e[0]=t,s(e,null,o,i),e[0]=null,!i.pop()}}),has:n(function(t){return function(i){return e(t,i).length>0}}),contains:n(function(t){return t=t.replace(yt,_t),function(e){return(e.textContent||e.innerText||C(e)).indexOf(t)>-1}}),lang:n(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,_t).toLowerCase(),function(e){var i;do if(i=N?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===O},focus:function(t){return t===H.activeElement&&(!H.hasFocus||H.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:h(!1),disabled:h(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!D.pseudos.empty(t)},header:function(t){return mt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,i){return[i<0?i+e:i]}),even:c(function(t,e){for(var i=0;i<e;i+=2)t.push(i);return t}),odd:c(function(t,e){for(var i=1;i<e;i+=2)t.push(i);return t}),lt:c(function(t,e,i){for(var n=i<0?i+e:i;--n>=0;)t.push(n);return t}),gt:c(function(t,e,i){for(var n=i<0?i+e:i;++n<e;)t.push(n);return t})}},D.pseudos.nth=D.pseudos.eq;for(w in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})D.pseudos[w]=r(w);for(w in{submit:!0,reset:!0})D.pseudos[w]=l(w);return d.prototype=D.filters=D.pseudos,D.setFilters=new d,T=e.tokenize=function(t,i){var n,s,o,a,r,l,h,c=q[t+" "];if(c)return i?0:c.slice(0);for(r=t,l=[],h=D.preFilter;r;){n&&!(s=lt.exec(r))||(s&&(r=r.slice(s[0].length)||r),l.push(o=[])),n=!1,(s=ht.exec(r))&&(n=s.shift(),o.push({value:n,type:s[0].replace(rt," ")}),r=r.slice(n.length));for(a in D.filter)!(s=ft[a].exec(r))||h[a]&&!(s=h[a](s))||(n=s.shift(),o.push({value:n,type:a,matches:s}),r=r.slice(n.length));if(!n)break}return i?r.length:r?e.error(t):q(t,l).slice(0)},k=e.compile=function(t,e){var i,n=[],s=[],o=U[t+" "];if(!o){for(e||(e=T(t)),i=e.length;i--;)o=y(e[i]),o[$]?n.push(o):s.push(o);o=U(t,_(s,n)),o.selector=t}return o},E=e.select=function(t,e,i,n){var s,o,a,r,l,h="function"==typeof t&&t,c=!n&&T(t=h.selector||t);if(i=i||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&9===e.nodeType&&N&&D.relative[o[1].type]){if(e=(D.find.ID(a.matches[0].replace(yt,_t),e)||[])[0],!e)return i;h&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(s=ft.needsContext.test(t)?0:o.length;s--&&(a=o[s],!D.relative[r=a.type]);)if((l=D.find[r])&&(n=l(a.matches[0].replace(yt,_t),bt.test(o[0].type)&&u(e.parentNode)||e))){if(o.splice(s,1),t=n.length&&f(o),!t)return J.apply(i,n),i;break}}return(h||k(t,c))(n,e,!N,i,!e||bt.test(t)&&u(e.parentNode)||e),i},x.sortStable=$.split("").sort(V).join("")===$,x.detectDuplicates=!!A,P(),x.sortDetached=s(function(t){return 1&t.compareDocumentPosition(H.createElement("fieldset"))}),s(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,i){if(!i)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),x.attributes&&s(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,i){if(!i&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),s(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,i){var n;if(!i)return t[e]===!0?e.toLowerCase():(n=t.getAttributeNode(e))&&n.specified?n.value:null}),e}(t);pt.find=yt,pt.expr=yt.selectors,pt.expr[":"]=pt.expr.pseudos,pt.uniqueSort=pt.unique=yt.uniqueSort,pt.text=yt.getText,pt.isXMLDoc=yt.isXML,pt.contains=yt.contains,pt.escapeSelector=yt.escape;var _t=function(t,e,i){for(var n=[],s=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(s&&pt(t).is(i))break;n.push(t)}return n},wt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},xt=pt.expr.match.needsContext,Dt=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,Ct=/^.[^:#\[\.,]*$/;pt.filter=function(t,e,i){var n=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===n.nodeType?pt.find.matchesSelector(n,t)?[n]:[]:pt.find.matches(t,pt.grep(e,function(t){return 1===t.nodeType}))},pt.fn.extend({find:function(t){var e,i,n=this.length,s=this;if("string"!=typeof t)return this.pushStack(pt(t).filter(function(){for(e=0;e<n;e++)if(pt.contains(s[e],this))return!0}));for(i=this.pushStack([]),e=0;e<n;e++)pt.find(t,s[e],i);return n>1?pt.uniqueSort(i):i},filter:function(t){return this.pushStack(s(this,t||[],!1))},not:function(t){return this.pushStack(s(this,t||[],!0))},is:function(t){return!!s(this,"string"==typeof t&&xt.test(t)?pt(t):t||[],!1).length}});var St,Tt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,kt=pt.fn.init=function(t,e,i){var n,s;if(!t)return this;if(i=i||St,"string"==typeof t){if(n="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:Tt.exec(t),!n||!n[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(n[1]){if(e=e instanceof pt?e[0]:e,pt.merge(this,pt.parseHTML(n[1],e&&e.nodeType?e.ownerDocument||e:et,!0)),Dt.test(n[1])&&pt.isPlainObject(e))for(n in e)pt.isFunction(this[n])?this[n](e[n]):this.attr(n,e[n]);return this}return s=et.getElementById(n[2]),s&&(this[0]=s,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):pt.isFunction(t)?void 0!==i.ready?i.ready(t):t(pt):pt.makeArray(t,this)};kt.prototype=pt.fn,St=pt(et);var Et=/^(?:parents|prev(?:Until|All))/,Mt={children:!0,contents:!0,next:!0,prev:!0};pt.fn.extend({has:function(t){var e=pt(t,this),i=e.length;return this.filter(function(){for(var t=0;t<i;t++)if(pt.contains(this,e[t]))return!0})},closest:function(t,e){var i,n=0,s=this.length,o=[],a="string"!=typeof t&&pt(t);if(!xt.test(t))for(;n<s;n++)for(i=this[n];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(a?a.index(i)>-1:1===i.nodeType&&pt.find.matchesSelector(i,t))){o.push(i);break}return this.pushStack(o.length>1?pt.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?at.call(pt(t),this[0]):at.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(pt.uniqueSort(pt.merge(this.get(),pt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),pt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return _t(t,"parentNode")},parentsUntil:function(t,e,i){return _t(t,"parentNode",i)},next:function(t){return o(t,"nextSibling")},prev:function(t){return o(t,"previousSibling")},nextAll:function(t){return _t(t,"nextSibling")},prevAll:function(t){return _t(t,"previousSibling")},nextUntil:function(t,e,i){return _t(t,"nextSibling",i)},prevUntil:function(t,e,i){return _t(t,"previousSibling",i)},siblings:function(t){return wt((t.parentNode||{}).firstChild,t)},children:function(t){return wt(t.firstChild)},contents:function(t){return t.contentDocument||pt.merge([],t.childNodes)}},function(t,e){pt.fn[t]=function(i,n){var s=pt.map(this,e,i);return"Until"!==t.slice(-5)&&(n=i),n&&"string"==typeof n&&(s=pt.filter(n,s)),this.length>1&&(Mt[t]||pt.uniqueSort(s),Et.test(t)&&s.reverse()),this.pushStack(s)}});var It=/[^\x20\t\r\n\f]+/g;pt.Callbacks=function(t){t="string"==typeof t?a(t):pt.extend({},t);var e,i,n,s,o=[],r=[],l=-1,h=function(){for(s=t.once,n=e=!0;r.length;l=-1)for(i=r.shift();++l<o.length;)o[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=o.length,i=!1);t.memory||(i=!1),e=!1,s&&(o=i?[]:"")},c={add:function(){return o&&(i&&!e&&(l=o.length-1,r.push(i)),function n(e){pt.each(e,function(e,i){pt.isFunction(i)?t.unique&&c.has(i)||o.push(i):i&&i.length&&"string"!==pt.type(i)&&n(i)})}(arguments),i&&!e&&h()),this},remove:function(){return pt.each(arguments,function(t,e){for(var i;(i=pt.inArray(e,o,i))>-1;)o.splice(i,1),i<=l&&l--}),this},has:function(t){return t?pt.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return s=r=[],o=i="",this},disabled:function(){return!o},lock:function(){return s=r=[],i||e||(o=i=""),this},locked:function(){return!!s},fireWith:function(t,i){return s||(i=i||[],i=[t,i.slice?i.slice():i],r.push(i),e||h()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!n}};return c},pt.extend({Deferred:function(e){var i=[["notify","progress",pt.Callbacks("memory"),pt.Callbacks("memory"),2],["resolve","done",pt.Callbacks("once memory"),pt.Callbacks("once memory"),0,"resolved"],["reject","fail",pt.Callbacks("once memory"),pt.Callbacks("once memory"),1,"rejected"]],n="pending",s={state:function(){return n},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(t){return s.then(null,t)},pipe:function(){var t=arguments;return pt.Deferred(function(e){pt.each(i,function(i,n){var s=pt.isFunction(t[n[4]])&&t[n[4]];o[n[1]](function(){var t=s&&s.apply(this,arguments);t&&pt.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[n[0]+"With"](this,s?[t]:arguments)})}),t=null}).promise()},then:function(e,n,s){function o(e,i,n,s){return function(){var h=this,c=arguments,u=function(){var t,u;if(!(e<a)){if(t=n.apply(h,c),t===i.promise())throw new TypeError("Thenable self-resolution");u=t&&("object"==typeof t||"function"==typeof t)&&t.then,pt.isFunction(u)?s?u.call(t,o(a,i,r,s),o(a,i,l,s)):(a++,u.call(t,o(a,i,r,s),o(a,i,l,s),o(a,i,r,i.notifyWith))):(n!==r&&(h=void 0,c=[t]),(s||i.resolveWith)(h,c))}},d=s?u:function(){try{u()}catch(t){pt.Deferred.exceptionHook&&pt.Deferred.exceptionHook(t,d.stackTrace),e+1>=a&&(n!==l&&(h=void 0,c=[t]),i.rejectWith(h,c))}};e?d():(pt.Deferred.getStackHook&&(d.stackTrace=pt.Deferred.getStackHook()),t.setTimeout(d))}}var a=0;return pt.Deferred(function(t){i[0][3].add(o(0,t,pt.isFunction(s)?s:r,t.notifyWith)),i[1][3].add(o(0,t,pt.isFunction(e)?e:r)),i[2][3].add(o(0,t,pt.isFunction(n)?n:l))}).promise()},promise:function(t){return null!=t?pt.extend(t,s):s}},o={};return pt.each(i,function(t,e){var a=e[2],r=e[5];s[e[1]]=a.add,r&&a.add(function(){n=r},i[3-t][2].disable,i[0][2].lock),a.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=a.fireWith}),s.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,i=e,n=Array(i),s=nt.call(arguments),o=pt.Deferred(),a=function(t){return function(i){n[t]=this,s[t]=arguments.length>1?nt.call(arguments):i,--e||o.resolveWith(n,s)}};if(e<=1&&(h(t,o.done(a(i)).resolve,o.reject),"pending"===o.state()||pt.isFunction(s[i]&&s[i].then)))return o.then();for(;i--;)h(s[i],a(i),o.reject);return o.promise()}});var At=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;pt.Deferred.exceptionHook=function(e,i){t.console&&t.console.warn&&e&&At.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,i)},pt.readyException=function(e){t.setTimeout(function(){throw e})};var Pt=pt.Deferred();pt.fn.ready=function(t){return Pt.then(t)["catch"](function(t){pt.readyException(t)}),this},pt.extend({isReady:!1,readyWait:1,holdReady:function(t){t?pt.readyWait++:pt.ready(!0)},ready:function(t){(t===!0?--pt.readyWait:pt.isReady)||(pt.isReady=!0,t!==!0&&--pt.readyWait>0||Pt.resolveWith(et,[pt]))}}),pt.ready.then=Pt.then,"complete"===et.readyState||"loading"!==et.readyState&&!et.documentElement.doScroll?t.setTimeout(pt.ready):(et.addEventListener("DOMContentLoaded",c),t.addEventListener("load",c));var Ht=function(t,e,i,n,s,o,a){var r=0,l=t.length,h=null==i;if("object"===pt.type(i)){s=!0;for(r in i)Ht(t,e,r,i[r],!0,o,a)}else if(void 0!==n&&(s=!0,pt.isFunction(n)||(a=!0),h&&(a?(e.call(t,n),e=null):(h=e,e=function(t,e,i){return h.call(pt(t),i)})),e))for(;r<l;r++)e(t[r],i,a?n:n.call(t[r],r,e(t[r],i)));return s?t:h?e.call(t):l?e(t[0],i):o},Ot=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};u.uid=1,u.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Ot(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,i){var n,s=this.cache(t);if("string"==typeof e)s[pt.camelCase(e)]=i;else for(n in e)s[pt.camelCase(n)]=e[n];return s},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][pt.camelCase(e)]},access:function(t,e,i){return void 0===e||e&&"string"==typeof e&&void 0===i?this.get(t,e):(this.set(t,e,i),void 0!==i?i:e)},remove:function(t,e){var i,n=t[this.expando];if(void 0!==n){if(void 0!==e){pt.isArray(e)?e=e.map(pt.camelCase):(e=pt.camelCase(e),e=e in n?[e]:e.match(It)||[]),i=e.length;for(;i--;)delete n[e[i]]}(void 0===e||pt.isEmptyObject(n))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!pt.isEmptyObject(e)}};var Nt=new u,Lt=new u,Rt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Ft=/[A-Z]/g;pt.extend({hasData:function(t){return Lt.hasData(t)||Nt.hasData(t)},data:function(t,e,i){return Lt.access(t,e,i)},removeData:function(t,e){Lt.remove(t,e)},_data:function(t,e,i){return Nt.access(t,e,i)},_removeData:function(t,e){Nt.remove(t,e)}}),pt.fn.extend({data:function(t,e){var i,n,s,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(s=Lt.get(o),1===o.nodeType&&!Nt.get(o,"hasDataAttrs"))){for(i=a.length;i--;)a[i]&&(n=a[i].name,0===n.indexOf("data-")&&(n=pt.camelCase(n.slice(5)),f(o,n,s[n])));Nt.set(o,"hasDataAttrs",!0)}return s}return"object"==typeof t?this.each(function(){Lt.set(this,t)}):Ht(this,function(e){var i;if(o&&void 0===e){if(i=Lt.get(o,t),void 0!==i)return i;if(i=f(o,t),void 0!==i)return i}else this.each(function(){Lt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Lt.remove(this,t)})}}),pt.extend({queue:function(t,e,i){var n;if(t)return e=(e||"fx")+"queue",n=Nt.get(t,e),i&&(!n||pt.isArray(i)?n=Nt.access(t,e,pt.makeArray(i)):n.push(i)),n||[]},dequeue:function(t,e){e=e||"fx";var i=pt.queue(t,e),n=i.length,s=i.shift(),o=pt._queueHooks(t,e),a=function(){pt.dequeue(t,e)};"inprogress"===s&&(s=i.shift(),n--),s&&("fx"===e&&i.unshift("inprogress"),delete o.stop,s.call(t,a,o)),!n&&o&&o.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return Nt.get(t,i)||Nt.access(t,i,{empty:pt.Callbacks("once memory").add(function(){Nt.remove(t,[e+"queue",i])})})}}),pt.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?pt.queue(this[0],t):void 0===e?this:this.each(function(){var i=pt.queue(this,t,e);pt._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&pt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){pt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,n=1,s=pt.Deferred(),o=this,a=this.length,r=function(){--n||s.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)i=Nt.get(o[a],t+"queueHooks"),i&&i.empty&&(n++,i.empty.add(r));return r(),s.promise(e)}});var zt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,$t=new RegExp("^(?:([+-])=|)("+zt+")([a-z%]*)$","i"),Wt=["Top","Right","Bottom","Left"],jt=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&pt.contains(t.ownerDocument,t)&&"none"===pt.css(t,"display")},Yt=function(t,e,i,n){var s,o,a={};for(o in e)a[o]=t.style[o],t.style[o]=e[o];s=i.apply(t,n||[]);for(o in e)t.style[o]=a[o];return s},Bt={};pt.fn.extend({show:function(){return g(this,!0)},hide:function(){return g(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){jt(this)?pt(this).show():pt(this).hide()})}});var qt=/^(?:checkbox|radio)$/i,Ut=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Vt=/^$|\/(?:java|ecma)script/i,Gt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Gt.optgroup=Gt.option,Gt.tbody=Gt.tfoot=Gt.colgroup=Gt.caption=Gt.thead,Gt.th=Gt.td;var Xt=/<|&#?\w+;/;!function(){var t=et.createDocumentFragment(),e=t.appendChild(et.createElement("div")),i=et.createElement("input");i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),e.appendChild(i),dt.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",dt.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Zt=et.documentElement,Kt=/^key/,Jt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Qt=/^([^.]*)(?:\.(.+)|)/;pt.event={global:{},add:function(t,e,i,n,s){var o,a,r,l,h,c,u,d,f,p,m,g=Nt.get(t);if(g)for(i.handler&&(o=i,i=o.handler,s=o.selector),s&&pt.find.matchesSelector(Zt,s),i.guid||(i.guid=pt.guid++),(l=g.events)||(l=g.events={}),(a=g.handle)||(a=g.handle=function(e){return"undefined"!=typeof pt&&pt.event.triggered!==e.type?pt.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(It)||[""],h=e.length;h--;)r=Qt.exec(e[h])||[],f=m=r[1],p=(r[2]||"").split(".").sort(),f&&(u=pt.event.special[f]||{},f=(s?u.delegateType:u.bindType)||f,u=pt.event.special[f]||{},c=pt.extend({type:f,origType:m,data:n,handler:i,guid:i.guid,selector:s,needsContext:s&&pt.expr.match.needsContext.test(s),namespace:p.join(".")},o),(d=l[f])||(d=l[f]=[],d.delegateCount=0,u.setup&&u.setup.call(t,n,p,a)!==!1||t.addEventListener&&t.addEventListener(f,a)),u.add&&(u.add.call(t,c),c.handler.guid||(c.handler.guid=i.guid)),s?d.splice(d.delegateCount++,0,c):d.push(c),pt.event.global[f]=!0)},remove:function(t,e,i,n,s){var o,a,r,l,h,c,u,d,f,p,m,g=Nt.hasData(t)&&Nt.get(t);if(g&&(l=g.events)){for(e=(e||"").match(It)||[""],h=e.length;h--;)if(r=Qt.exec(e[h])||[],f=m=r[1],p=(r[2]||"").split(".").sort(),f){for(u=pt.event.special[f]||{},f=(n?u.delegateType:u.bindType)||f,d=l[f]||[],r=r[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=d.length;o--;)c=d[o],!s&&m!==c.origType||i&&i.guid!==c.guid||r&&!r.test(c.namespace)||n&&n!==c.selector&&("**"!==n||!c.selector)||(d.splice(o,1),c.selector&&d.delegateCount--,u.remove&&u.remove.call(t,c));a&&!d.length&&(u.teardown&&u.teardown.call(t,p,g.handle)!==!1||pt.removeEvent(t,f,g.handle),delete l[f])}else for(f in l)pt.event.remove(t,f+e[h],i,n,!0);pt.isEmptyObject(l)&&Nt.remove(t,"handle events")}},dispatch:function(t){var e,i,n,s,o,a,r=pt.event.fix(t),l=new Array(arguments.length),h=(Nt.get(this,"events")||{})[r.type]||[],c=pt.event.special[r.type]||{};for(l[0]=r,e=1;e<arguments.length;e++)l[e]=arguments[e];if(r.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,r)!==!1){for(a=pt.event.handlers.call(this,r,h),e=0;(s=a[e++])&&!r.isPropagationStopped();)for(r.currentTarget=s.elem,i=0;(o=s.handlers[i++])&&!r.isImmediatePropagationStopped();)r.rnamespace&&!r.rnamespace.test(o.namespace)||(r.handleObj=o,r.data=o.data,n=((pt.event.special[o.origType]||{}).handle||o.handler).apply(s.elem,l),void 0!==n&&(r.result=n)===!1&&(r.preventDefault(),r.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,r),r.result}},handlers:function(t,e){var i,n,s,o,a,r=[],l=e.delegateCount,h=t.target;if(l&&h.nodeType&&!("click"===t.type&&t.button>=1))for(;h!==this;h=h.parentNode||this)if(1===h.nodeType&&("click"!==t.type||h.disabled!==!0)){for(o=[],a={},i=0;i<l;i++)n=e[i],s=n.selector+" ",void 0===a[s]&&(a[s]=n.needsContext?pt(s,this).index(h)>-1:pt.find(s,this,null,[h]).length),a[s]&&o.push(n);o.length&&r.push({elem:h,handlers:o})}return h=this,l<e.length&&r.push({elem:h,handlers:e.slice(l)}),r},addProp:function(t,e){Object.defineProperty(pt.Event.prototype,t,{enumerable:!0,configurable:!0,get:pt.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[pt.expando]?t:new pt.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==x()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===x()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&pt.nodeName(this,"input"))return this.click(),!1},_default:function(t){return pt.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},pt.removeEvent=function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)},pt.Event=function(t,e){return this instanceof pt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?_:w,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&pt.extend(this,e),this.timeStamp=t&&t.timeStamp||pt.now(),void(this[pt.expando]=!0)):new pt.Event(t,e)},pt.Event.prototype={constructor:pt.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=_,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=_,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=_,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},pt.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Kt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Jt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},pt.event.addProp),pt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){pt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,n=this,s=t.relatedTarget,o=t.handleObj;return s&&(s===n||pt.contains(n,s))||(t.type=o.origType,i=o.handler.apply(this,arguments),t.type=e),i}}}),pt.fn.extend({on:function(t,e,i,n){return D(this,t,e,i,n)},one:function(t,e,i,n){return D(this,t,e,i,n,1)},off:function(t,e,i){var n,s;if(t&&t.preventDefault&&t.handleObj)return n=t.handleObj,pt(t.delegateTarget).off(n.namespace?n.origType+"."+n.namespace:n.origType,n.selector,n.handler),this;if("object"==typeof t){for(s in t)this.off(s,e,t[s]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=w),this.each(function(){pt.event.remove(this,t,i,e)})}});var te=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,ee=/<script|<style|<link/i,ie=/checked\s*(?:[^=]|=\s*.checked.)/i,ne=/^true\/(.*)/,se=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;pt.extend({htmlPrefilter:function(t){return t.replace(te,"<$1></$2>")},clone:function(t,e,i){var n,s,o,a,r=t.cloneNode(!0),l=pt.contains(t.ownerDocument,t);if(!(dt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||pt.isXMLDoc(t)))for(a=v(r),o=v(t),n=0,s=o.length;n<s;n++)E(o[n],a[n]);if(e)if(i)for(o=o||v(t),a=a||v(r),n=0,s=o.length;n<s;n++)k(o[n],a[n]);else k(t,r);return a=v(r,"script"),a.length>0&&b(a,!l&&v(t,"script")),r},cleanData:function(t){for(var e,i,n,s=pt.event.special,o=0;void 0!==(i=t[o]);o++)if(Ot(i)){if(e=i[Nt.expando]){if(e.events)for(n in e.events)s[n]?pt.event.remove(i,n):pt.removeEvent(i,n,e.handle);i[Nt.expando]=void 0}i[Lt.expando]&&(i[Lt.expando]=void 0)}}}),pt.fn.extend({detach:function(t){return I(this,t,!0)},remove:function(t){return I(this,t)},text:function(t){return Ht(this,function(t){return void 0===t?pt.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return M(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=C(this,t);e.appendChild(t)}})},prepend:function(){return M(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=C(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return M(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return M(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(pt.cleanData(v(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return pt.clone(this,t,e)})},html:function(t){return Ht(this,function(t){var e=this[0]||{},i=0,n=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!ee.test(t)&&!Gt[(Ut.exec(t)||["",""])[1].toLowerCase()]){t=pt.htmlPrefilter(t);try{for(;i<n;i++)e=this[i]||{},1===e.nodeType&&(pt.cleanData(v(e,!1)),e.innerHTML=t);e=0}catch(s){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return M(this,arguments,function(e){var i=this.parentNode;pt.inArray(this,t)<0&&(pt.cleanData(v(this)),i&&i.replaceChild(e,this))},t)}}),pt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){pt.fn[t]=function(t){for(var i,n=[],s=pt(t),o=s.length-1,a=0;a<=o;a++)i=a===o?this:this.clone(!0),pt(s[a])[e](i),ot.apply(n,i.get());return this.pushStack(n)}});var oe=/^margin/,ae=new RegExp("^("+zt+")(?!px)[a-z%]+$","i"),re=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)};!function(){function e(){if(r){r.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",r.innerHTML="",Zt.appendChild(a);var e=t.getComputedStyle(r);i="1%"!==e.top,o="2px"===e.marginLeft,n="4px"===e.width,r.style.marginRight="50%",s="4px"===e.marginRight,Zt.removeChild(a),r=null}}var i,n,s,o,a=et.createElement("div"),r=et.createElement("div");r.style&&(r.style.backgroundClip="content-box",r.cloneNode(!0).style.backgroundClip="",dt.clearCloneStyle="content-box"===r.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(r),pt.extend(dt,{pixelPosition:function(){return e(),i},boxSizingReliable:function(){return e(),n},pixelMarginRight:function(){return e(),s},reliableMarginLeft:function(){return e(),o}}))}();var le=/^(none|table(?!-c[ea]).+)/,he={position:"absolute",visibility:"hidden",display:"block"},ce={letterSpacing:"0",fontWeight:"400"},ue=["Webkit","Moz","ms"],de=et.createElement("div").style;pt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=A(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,e,i,n){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var s,o,a,r=pt.camelCase(e),l=t.style;return e=pt.cssProps[r]||(pt.cssProps[r]=H(r)||r),a=pt.cssHooks[e]||pt.cssHooks[r],void 0===i?a&&"get"in a&&void 0!==(s=a.get(t,!1,n))?s:l[e]:(o=typeof i,"string"===o&&(s=$t.exec(i))&&s[1]&&(i=p(t,e,s),o="number"),null!=i&&i===i&&("number"===o&&(i+=s&&s[3]||(pt.cssNumber[r]?"":"px")),dt.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),a&&"set"in a&&void 0===(i=a.set(t,i,n))||(l[e]=i)),void 0)}},css:function(t,e,i,n){var s,o,a,r=pt.camelCase(e);return e=pt.cssProps[r]||(pt.cssProps[r]=H(r)||r),a=pt.cssHooks[e]||pt.cssHooks[r],a&&"get"in a&&(s=a.get(t,!0,i)),void 0===s&&(s=A(t,e,n)),"normal"===s&&e in ce&&(s=ce[e]),""===i||i?(o=parseFloat(s),i===!0||isFinite(o)?o||0:s):s}}),pt.each(["height","width"],function(t,e){pt.cssHooks[e]={get:function(t,i,n){if(i)return!le.test(pt.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?L(t,e,n):Yt(t,he,function(){return L(t,e,n)})},set:function(t,i,n){var s,o=n&&re(t),a=n&&N(t,e,n,"border-box"===pt.css(t,"boxSizing",!1,o),o);return a&&(s=$t.exec(i))&&"px"!==(s[3]||"px")&&(t.style[e]=i,i=pt.css(t,e)),O(t,i,a)}}}),pt.cssHooks.marginLeft=P(dt.reliableMarginLeft,function(t,e){if(e)return(parseFloat(A(t,"marginLeft"))||t.getBoundingClientRect().left-Yt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),pt.each({margin:"",padding:"",border:"Width"},function(t,e){pt.cssHooks[t+e]={expand:function(i){for(var n=0,s={},o="string"==typeof i?i.split(" "):[i];n<4;n++)s[t+Wt[n]+e]=o[n]||o[n-2]||o[0];return s}},oe.test(t)||(pt.cssHooks[t+e].set=O)}),pt.fn.extend({css:function(t,e){return Ht(this,function(t,e,i){var n,s,o={},a=0;if(pt.isArray(e)){for(n=re(t),s=e.length;a<s;a++)o[e[a]]=pt.css(t,e[a],!1,n);return o}return void 0!==i?pt.style(t,e,i):pt.css(t,e)},t,e,arguments.length>1)}}),pt.Tween=R,R.prototype={constructor:R,init:function(t,e,i,n,s,o){this.elem=t,this.prop=i,this.easing=s||pt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=n,this.unit=o||(pt.cssNumber[i]?"":"px")},cur:function(){var t=R.propHooks[this.prop];return t&&t.get?t.get(this):R.propHooks._default.get(this)},run:function(t){var e,i=R.propHooks[this.prop];return this.options.duration?this.pos=e=pt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):R.propHooks._default.set(this),this}},R.prototype.init.prototype=R.prototype,R.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=pt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){pt.fx.step[t.prop]?pt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[pt.cssProps[t.prop]]&&!pt.cssHooks[t.prop]?t.elem[t.prop]=t.now:pt.style(t.elem,t.prop,t.now+t.unit)}}},R.propHooks.scrollTop=R.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},pt.easing={linear:function(t){return t},swing:function(t){
return.5-Math.cos(t*Math.PI)/2},_default:"swing"},pt.fx=R.prototype.init,pt.fx.step={};var fe,pe,me=/^(?:toggle|show|hide)$/,ge=/queueHooks$/;pt.Animation=pt.extend(B,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return p(i.elem,t,$t.exec(e),i),i}]},tweener:function(t,e){pt.isFunction(t)?(e=t,t=["*"]):t=t.match(It);for(var i,n=0,s=t.length;n<s;n++)i=t[n],B.tweeners[i]=B.tweeners[i]||[],B.tweeners[i].unshift(e)},prefilters:[j],prefilter:function(t,e){e?B.prefilters.unshift(t):B.prefilters.push(t)}}),pt.speed=function(t,e,i){var n=t&&"object"==typeof t?pt.extend({},t):{complete:i||!i&&e||pt.isFunction(t)&&t,duration:t,easing:i&&e||e&&!pt.isFunction(e)&&e};return pt.fx.off||et.hidden?n.duration=0:"number"!=typeof n.duration&&(n.duration in pt.fx.speeds?n.duration=pt.fx.speeds[n.duration]:n.duration=pt.fx.speeds._default),null!=n.queue&&n.queue!==!0||(n.queue="fx"),n.old=n.complete,n.complete=function(){pt.isFunction(n.old)&&n.old.call(this),n.queue&&pt.dequeue(this,n.queue)},n},pt.fn.extend({fadeTo:function(t,e,i,n){return this.filter(jt).css("opacity",0).show().end().animate({opacity:e},t,i,n)},animate:function(t,e,i,n){var s=pt.isEmptyObject(t),o=pt.speed(e,i,n),a=function(){var e=B(this,pt.extend({},t),o);(s||Nt.get(this,"finish"))&&e.stop(!0)};return a.finish=a,s||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(t,e,i){var n=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,s=null!=t&&t+"queueHooks",o=pt.timers,a=Nt.get(this);if(s)a[s]&&a[s].stop&&n(a[s]);else for(s in a)a[s]&&a[s].stop&&ge.test(s)&&n(a[s]);for(s=o.length;s--;)o[s].elem!==this||null!=t&&o[s].queue!==t||(o[s].anim.stop(i),e=!1,o.splice(s,1));!e&&i||pt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=Nt.get(this),n=i[t+"queue"],s=i[t+"queueHooks"],o=pt.timers,a=n?n.length:0;for(i.finish=!0,pt.queue(this,t,[]),s&&s.stop&&s.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete i.finish})}}),pt.each(["toggle","show","hide"],function(t,e){var i=pt.fn[e];pt.fn[e]=function(t,n,s){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate($(e,!0),t,n,s)}}),pt.each({slideDown:$("show"),slideUp:$("hide"),slideToggle:$("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){pt.fn[t]=function(t,i,n){return this.animate(e,t,i,n)}}),pt.timers=[],pt.fx.tick=function(){var t,e=0,i=pt.timers;for(fe=pt.now();e<i.length;e++)t=i[e],t()||i[e]!==t||i.splice(e--,1);i.length||pt.fx.stop(),fe=void 0},pt.fx.timer=function(t){pt.timers.push(t),t()?pt.fx.start():pt.timers.pop()},pt.fx.interval=13,pt.fx.start=function(){pe||(pe=t.requestAnimationFrame?t.requestAnimationFrame(F):t.setInterval(pt.fx.tick,pt.fx.interval))},pt.fx.stop=function(){t.cancelAnimationFrame?t.cancelAnimationFrame(pe):t.clearInterval(pe),pe=null},pt.fx.speeds={slow:600,fast:200,_default:400},pt.fn.delay=function(e,i){return e=pt.fx?pt.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,n){var s=t.setTimeout(i,e);n.stop=function(){t.clearTimeout(s)}})},function(){var t=et.createElement("input"),e=et.createElement("select"),i=e.appendChild(et.createElement("option"));t.type="checkbox",dt.checkOn=""!==t.value,dt.optSelected=i.selected,t=et.createElement("input"),t.value="t",t.type="radio",dt.radioValue="t"===t.value}();var ve,be=pt.expr.attrHandle;pt.fn.extend({attr:function(t,e){return Ht(this,pt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){pt.removeAttr(this,t)})}}),pt.extend({attr:function(t,e,i){var n,s,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof t.getAttribute?pt.prop(t,e,i):(1===o&&pt.isXMLDoc(t)||(s=pt.attrHooks[e.toLowerCase()]||(pt.expr.match.bool.test(e)?ve:void 0)),void 0!==i?null===i?void pt.removeAttr(t,e):s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:(t.setAttribute(e,i+""),i):s&&"get"in s&&null!==(n=s.get(t,e))?n:(n=pt.find.attr(t,e),null==n?void 0:n))},attrHooks:{type:{set:function(t,e){if(!dt.radioValue&&"radio"===e&&pt.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,n=0,s=e&&e.match(It);if(s&&1===t.nodeType)for(;i=s[n++];)t.removeAttribute(i)}}),ve={set:function(t,e,i){return e===!1?pt.removeAttr(t,i):t.setAttribute(i,i),i}},pt.each(pt.expr.match.bool.source.match(/\w+/g),function(t,e){var i=be[e]||pt.find.attr;be[e]=function(t,e,n){var s,o,a=e.toLowerCase();return n||(o=be[a],be[a]=s,s=null!=i(t,e,n)?a:null,be[a]=o),s}});var ye=/^(?:input|select|textarea|button)$/i,_e=/^(?:a|area)$/i;pt.fn.extend({prop:function(t,e){return Ht(this,pt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[pt.propFix[t]||t]})}}),pt.extend({prop:function(t,e,i){var n,s,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&pt.isXMLDoc(t)||(e=pt.propFix[e]||e,s=pt.propHooks[e]),void 0!==i?s&&"set"in s&&void 0!==(n=s.set(t,i,e))?n:t[e]=i:s&&"get"in s&&null!==(n=s.get(t,e))?n:t[e]},propHooks:{tabIndex:{get:function(t){var e=pt.find.attr(t,"tabindex");return e?parseInt(e,10):ye.test(t.nodeName)||_e.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),dt.optSelected||(pt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),pt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pt.propFix[this.toLowerCase()]=this}),pt.fn.extend({addClass:function(t){var e,i,n,s,o,a,r,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).addClass(t.call(this,e,U(this)))});if("string"==typeof t&&t)for(e=t.match(It)||[];i=this[l++];)if(s=U(i),n=1===i.nodeType&&" "+q(s)+" "){for(a=0;o=e[a++];)n.indexOf(" "+o+" ")<0&&(n+=o+" ");r=q(n),s!==r&&i.setAttribute("class",r)}return this},removeClass:function(t){var e,i,n,s,o,a,r,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).removeClass(t.call(this,e,U(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(It)||[];i=this[l++];)if(s=U(i),n=1===i.nodeType&&" "+q(s)+" "){for(a=0;o=e[a++];)for(;n.indexOf(" "+o+" ")>-1;)n=n.replace(" "+o+" "," ");r=q(n),s!==r&&i.setAttribute("class",r)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):pt.isFunction(t)?this.each(function(i){pt(this).toggleClass(t.call(this,i,U(this),e),e)}):this.each(function(){var e,n,s,o;if("string"===i)for(n=0,s=pt(this),o=t.match(It)||[];e=o[n++];)s.hasClass(e)?s.removeClass(e):s.addClass(e);else void 0!==t&&"boolean"!==i||(e=U(this),e&&Nt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Nt.get(this,"__className__")||""))})},hasClass:function(t){var e,i,n=0;for(e=" "+t+" ";i=this[n++];)if(1===i.nodeType&&(" "+q(U(i))+" ").indexOf(e)>-1)return!0;return!1}});var we=/\r/g;pt.fn.extend({val:function(t){var e,i,n,s=this[0];{if(arguments.length)return n=pt.isFunction(t),this.each(function(i){var s;1===this.nodeType&&(s=n?t.call(this,i,pt(this).val()):t,null==s?s="":"number"==typeof s?s+="":pt.isArray(s)&&(s=pt.map(s,function(t){return null==t?"":t+""})),e=pt.valHooks[this.type]||pt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,s,"value")||(this.value=s))});if(s)return e=pt.valHooks[s.type]||pt.valHooks[s.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(s,"value"))?i:(i=s.value,"string"==typeof i?i.replace(we,""):null==i?"":i)}}}),pt.extend({valHooks:{option:{get:function(t){var e=pt.find.attr(t,"value");return null!=e?e:q(pt.text(t))}},select:{get:function(t){var e,i,n,s=t.options,o=t.selectedIndex,a="select-one"===t.type,r=a?null:[],l=a?o+1:s.length;for(n=o<0?l:a?o:0;n<l;n++)if(i=s[n],(i.selected||n===o)&&!i.disabled&&(!i.parentNode.disabled||!pt.nodeName(i.parentNode,"optgroup"))){if(e=pt(i).val(),a)return e;r.push(e)}return r},set:function(t,e){for(var i,n,s=t.options,o=pt.makeArray(e),a=s.length;a--;)n=s[a],(n.selected=pt.inArray(pt.valHooks.option.get(n),o)>-1)&&(i=!0);return i||(t.selectedIndex=-1),o}}}}),pt.each(["radio","checkbox"],function(){pt.valHooks[this]={set:function(t,e){if(pt.isArray(e))return t.checked=pt.inArray(pt(t).val(),e)>-1}},dt.checkOn||(pt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var xe=/^(?:focusinfocus|focusoutblur)$/;pt.extend(pt.event,{trigger:function(e,i,n,s){var o,a,r,l,h,c,u,d=[n||et],f=ht.call(e,"type")?e.type:e,p=ht.call(e,"namespace")?e.namespace.split("."):[];if(a=r=n=n||et,3!==n.nodeType&&8!==n.nodeType&&!xe.test(f+pt.event.triggered)&&(f.indexOf(".")>-1&&(p=f.split("."),f=p.shift(),p.sort()),h=f.indexOf(":")<0&&"on"+f,e=e[pt.expando]?e:new pt.Event(f,"object"==typeof e&&e),e.isTrigger=s?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),i=null==i?[e]:pt.makeArray(i,[e]),u=pt.event.special[f]||{},s||!u.trigger||u.trigger.apply(n,i)!==!1)){if(!s&&!u.noBubble&&!pt.isWindow(n)){for(l=u.delegateType||f,xe.test(l+f)||(a=a.parentNode);a;a=a.parentNode)d.push(a),r=a;r===(n.ownerDocument||et)&&d.push(r.defaultView||r.parentWindow||t)}for(o=0;(a=d[o++])&&!e.isPropagationStopped();)e.type=o>1?l:u.bindType||f,c=(Nt.get(a,"events")||{})[e.type]&&Nt.get(a,"handle"),c&&c.apply(a,i),c=h&&a[h],c&&c.apply&&Ot(a)&&(e.result=c.apply(a,i),e.result===!1&&e.preventDefault());return e.type=f,s||e.isDefaultPrevented()||u._default&&u._default.apply(d.pop(),i)!==!1||!Ot(n)||h&&pt.isFunction(n[f])&&!pt.isWindow(n)&&(r=n[h],r&&(n[h]=null),pt.event.triggered=f,n[f](),pt.event.triggered=void 0,r&&(n[h]=r)),e.result}},simulate:function(t,e,i){var n=pt.extend(new pt.Event,i,{type:t,isSimulated:!0});pt.event.trigger(n,null,e)}}),pt.fn.extend({trigger:function(t,e){return this.each(function(){pt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];if(i)return pt.event.trigger(t,e,i,!0)}}),pt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){pt.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),pt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),dt.focusin="onfocusin"in t,dt.focusin||pt.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){pt.event.simulate(e,t.target,pt.event.fix(t))};pt.event.special[e]={setup:function(){var n=this.ownerDocument||this,s=Nt.access(n,e);s||n.addEventListener(t,i,!0),Nt.access(n,e,(s||0)+1)},teardown:function(){var n=this.ownerDocument||this,s=Nt.access(n,e)-1;s?Nt.access(n,e,s):(n.removeEventListener(t,i,!0),Nt.remove(n,e))}}});var De=t.location,Ce=pt.now(),Se=/\?/;pt.parseXML=function(e){var i;if(!e||"string"!=typeof e)return null;try{i=(new t.DOMParser).parseFromString(e,"text/xml")}catch(n){i=void 0}return i&&!i.getElementsByTagName("parsererror").length||pt.error("Invalid XML: "+e),i};var Te=/\[\]$/,ke=/\r?\n/g,Ee=/^(?:submit|button|image|reset|file)$/i,Me=/^(?:input|select|textarea|keygen)/i;pt.param=function(t,e){var i,n=[],s=function(t,e){var i=pt.isFunction(e)?e():e;n[n.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==i?"":i)};if(pt.isArray(t)||t.jquery&&!pt.isPlainObject(t))pt.each(t,function(){s(this.name,this.value)});else for(i in t)V(i,t[i],e,s);return n.join("&")},pt.fn.extend({serialize:function(){return pt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=pt.prop(this,"elements");return t?pt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!pt(this).is(":disabled")&&Me.test(this.nodeName)&&!Ee.test(t)&&(this.checked||!qt.test(t))}).map(function(t,e){var i=pt(this).val();return null==i?null:pt.isArray(i)?pt.map(i,function(t){return{name:e.name,value:t.replace(ke,"\r\n")}}):{name:e.name,value:i.replace(ke,"\r\n")}}).get()}});var Ie=/%20/g,Ae=/#.*$/,Pe=/([?&])_=[^&]*/,He=/^(.*?):[ \t]*([^\r\n]*)$/gm,Oe=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ne=/^(?:GET|HEAD)$/,Le=/^\/\//,Re={},Fe={},ze="*/".concat("*"),$e=et.createElement("a");$e.href=De.href,pt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:De.href,type:"GET",isLocal:Oe.test(De.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":ze,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":pt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Z(Z(t,pt.ajaxSettings),e):Z(pt.ajaxSettings,t)},ajaxPrefilter:G(Re),ajaxTransport:G(Fe),ajax:function(e,i){function n(e,i,n,r){var h,d,f,_,w,x=i;c||(c=!0,l&&t.clearTimeout(l),s=void 0,a=r||"",D.readyState=e>0?4:0,h=e>=200&&e<300||304===e,n&&(_=K(p,D,n)),_=J(p,_,D,h),h?(p.ifModified&&(w=D.getResponseHeader("Last-Modified"),w&&(pt.lastModified[o]=w),w=D.getResponseHeader("etag"),w&&(pt.etag[o]=w)),204===e||"HEAD"===p.type?x="nocontent":304===e?x="notmodified":(x=_.state,d=_.data,f=_.error,h=!f)):(f=x,!e&&x||(x="error",e<0&&(e=0))),D.status=e,D.statusText=(i||x)+"",h?v.resolveWith(m,[d,x,D]):v.rejectWith(m,[D,x,f]),D.statusCode(y),y=void 0,u&&g.trigger(h?"ajaxSuccess":"ajaxError",[D,p,h?d:f]),b.fireWith(m,[D,x]),u&&(g.trigger("ajaxComplete",[D,p]),--pt.active||pt.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var s,o,a,r,l,h,c,u,d,f,p=pt.ajaxSetup({},i),m=p.context||p,g=p.context&&(m.nodeType||m.jquery)?pt(m):pt.event,v=pt.Deferred(),b=pt.Callbacks("once memory"),y=p.statusCode||{},_={},w={},x="canceled",D={readyState:0,getResponseHeader:function(t){var e;if(c){if(!r)for(r={};e=He.exec(a);)r[e[1].toLowerCase()]=e[2];e=r[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(t,e){return null==c&&(t=w[t.toLowerCase()]=w[t.toLowerCase()]||t,_[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)D.always(t[D.status]);else for(e in t)y[e]=[y[e],t[e]];return this},abort:function(t){var e=t||x;return s&&s.abort(e),n(0,e),this}};if(v.promise(D),p.url=((e||p.url||De.href)+"").replace(Le,De.protocol+"//"),p.type=i.method||i.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(It)||[""],null==p.crossDomain){h=et.createElement("a");try{h.href=p.url,h.href=h.href,p.crossDomain=$e.protocol+"//"+$e.host!=h.protocol+"//"+h.host}catch(C){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=pt.param(p.data,p.traditional)),X(Re,p,i,D),c)return D;u=pt.event&&p.global,u&&0===pt.active++&&pt.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Ne.test(p.type),o=p.url.replace(Ae,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Ie,"+")):(f=p.url.slice(o.length),p.data&&(o+=(Se.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(o=o.replace(Pe,"$1"),f=(Se.test(o)?"&":"?")+"_="+Ce++ +f),p.url=o+f),p.ifModified&&(pt.lastModified[o]&&D.setRequestHeader("If-Modified-Since",pt.lastModified[o]),pt.etag[o]&&D.setRequestHeader("If-None-Match",pt.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||i.contentType)&&D.setRequestHeader("Content-Type",p.contentType),D.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+ze+"; q=0.01":""):p.accepts["*"]);for(d in p.headers)D.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(p.beforeSend.call(m,D,p)===!1||c))return D.abort();if(x="abort",b.add(p.complete),D.done(p.success),D.fail(p.error),s=X(Fe,p,i,D)){if(D.readyState=1,u&&g.trigger("ajaxSend",[D,p]),c)return D;p.async&&p.timeout>0&&(l=t.setTimeout(function(){D.abort("timeout")},p.timeout));try{c=!1,s.send(_,n)}catch(C){if(c)throw C;n(-1,C)}}else n(-1,"No Transport");return D},getJSON:function(t,e,i){return pt.get(t,e,i,"json")},getScript:function(t,e){return pt.get(t,void 0,e,"script")}}),pt.each(["get","post"],function(t,e){pt[e]=function(t,i,n,s){return pt.isFunction(i)&&(s=s||n,n=i,i=void 0),pt.ajax(pt.extend({url:t,type:e,dataType:s,data:i,success:n},pt.isPlainObject(t)&&t))}}),pt._evalUrl=function(t){return pt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pt.fn.extend({wrapAll:function(t){var e;return this[0]&&(pt.isFunction(t)&&(t=t.call(this[0])),e=pt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return pt.isFunction(t)?this.each(function(e){pt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=pt(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=pt.isFunction(t);return this.each(function(i){pt(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){pt(this).replaceWith(this.childNodes)}),this}}),pt.expr.pseudos.hidden=function(t){return!pt.expr.pseudos.visible(t)},pt.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},pt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var We={0:200,1223:204},je=pt.ajaxSettings.xhr();dt.cors=!!je&&"withCredentials"in je,dt.ajax=je=!!je,pt.ajaxTransport(function(e){var i,n;if(dt.cors||je&&!e.crossDomain)return{send:function(s,o){var a,r=e.xhr();if(r.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)r[a]=e.xhrFields[a];e.mimeType&&r.overrideMimeType&&r.overrideMimeType(e.mimeType),e.crossDomain||s["X-Requested-With"]||(s["X-Requested-With"]="XMLHttpRequest");for(a in s)r.setRequestHeader(a,s[a]);i=function(t){return function(){i&&(i=n=r.onload=r.onerror=r.onabort=r.onreadystatechange=null,"abort"===t?r.abort():"error"===t?"number"!=typeof r.status?o(0,"error"):o(r.status,r.statusText):o(We[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=i(),n=r.onerror=i("error"),void 0!==r.onabort?r.onabort=n:r.onreadystatechange=function(){4===r.readyState&&t.setTimeout(function(){i&&n()})},i=i("abort");try{r.send(e.hasContent&&e.data||null)}catch(l){if(i)throw l}},abort:function(){i&&i()}}}),pt.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),pt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return pt.globalEval(t),t}}}),pt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),pt.ajaxTransport("script",function(t){if(t.crossDomain){var e,i;return{send:function(n,s){e=pt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",i=function(t){e.remove(),i=null,t&&s("error"===t.type?404:200,t.type)}),et.head.appendChild(e[0])},abort:function(){i&&i()}}}});var Ye=[],Be=/(=)\?(?=&|$)|\?\?/;pt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ye.pop()||pt.expando+"_"+Ce++;return this[t]=!0,t}}),pt.ajaxPrefilter("json jsonp",function(e,i,n){var s,o,a,r=e.jsonp!==!1&&(Be.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Be.test(e.data)&&"data");if(r||"jsonp"===e.dataTypes[0])return s=e.jsonpCallback=pt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,r?e[r]=e[r].replace(Be,"$1"+s):e.jsonp!==!1&&(e.url+=(Se.test(e.url)?"&":"?")+e.jsonp+"="+s),e.converters["script json"]=function(){return a||pt.error(s+" was not called"),a[0]},e.dataTypes[0]="json",o=t[s],t[s]=function(){a=arguments},n.always(function(){void 0===o?pt(t).removeProp(s):t[s]=o,e[s]&&(e.jsonpCallback=i.jsonpCallback,Ye.push(s)),a&&pt.isFunction(o)&&o(a[0]),a=o=void 0}),"script"}),dt.createHTMLDocument=function(){var t=et.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),pt.parseHTML=function(t,e,i){if("string"!=typeof t)return[];"boolean"==typeof e&&(i=e,e=!1);var n,s,o;return e||(dt.createHTMLDocument?(e=et.implementation.createHTMLDocument(""),n=e.createElement("base"),n.href=et.location.href,e.head.appendChild(n)):e=et),s=Dt.exec(t),o=!i&&[],s?[e.createElement(s[1])]:(s=y([t],e,o),o&&o.length&&pt(o).remove(),pt.merge([],s.childNodes))},pt.fn.load=function(t,e,i){var n,s,o,a=this,r=t.indexOf(" ");return r>-1&&(n=q(t.slice(r)),t=t.slice(0,r)),pt.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(s="POST"),a.length>0&&pt.ajax({url:t,type:s||"GET",dataType:"html",data:e}).done(function(t){o=arguments,a.html(n?pt("<div>").append(pt.parseHTML(t)).find(n):t)}).always(i&&function(t,e){a.each(function(){i.apply(this,o||[t.responseText,e,t])})}),this},pt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){pt.fn[e]=function(t){return this.on(e,t)}}),pt.expr.pseudos.animated=function(t){return pt.grep(pt.timers,function(e){return t===e.elem}).length},pt.offset={setOffset:function(t,e,i){var n,s,o,a,r,l,h,c=pt.css(t,"position"),u=pt(t),d={};"static"===c&&(t.style.position="relative"),r=u.offset(),o=pt.css(t,"top"),l=pt.css(t,"left"),h=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,h?(n=u.position(),a=n.top,s=n.left):(a=parseFloat(o)||0,s=parseFloat(l)||0),pt.isFunction(e)&&(e=e.call(t,i,pt.extend({},r))),null!=e.top&&(d.top=e.top-r.top+a),null!=e.left&&(d.left=e.left-r.left+s),"using"in e?e.using.call(t,d):u.css(d)}},pt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){pt.offset.setOffset(this,t,e)});var e,i,n,s,o=this[0];if(o)return o.getClientRects().length?(n=o.getBoundingClientRect(),n.width||n.height?(s=o.ownerDocument,i=Q(s),e=s.documentElement,{top:n.top+i.pageYOffset-e.clientTop,left:n.left+i.pageXOffset-e.clientLeft}):n):{top:0,left:0}},position:function(){if(this[0]){var t,e,i=this[0],n={top:0,left:0};return"fixed"===pt.css(i,"position")?e=i.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),pt.nodeName(t[0],"html")||(n=t.offset()),n={top:n.top+pt.css(t[0],"borderTopWidth",!0),left:n.left+pt.css(t[0],"borderLeftWidth",!0)}),{top:e.top-n.top-pt.css(i,"marginTop",!0),left:e.left-n.left-pt.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===pt.css(t,"position");)t=t.offsetParent;return t||Zt})}}),pt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i="pageYOffset"===e;pt.fn[t]=function(n){return Ht(this,function(t,n,s){var o=Q(t);return void 0===s?o?o[e]:t[n]:void(o?o.scrollTo(i?o.pageXOffset:s,i?s:o.pageYOffset):t[n]=s)},t,n,arguments.length)}}),pt.each(["top","left"],function(t,e){pt.cssHooks[e]=P(dt.pixelPosition,function(t,i){if(i)return i=A(t,e),ae.test(i)?pt(t).position()[e]+"px":i})}),pt.each({Height:"height",Width:"width"},function(t,e){pt.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,n){pt.fn[n]=function(s,o){var a=arguments.length&&(i||"boolean"!=typeof s),r=i||(s===!0||o===!0?"margin":"border");return Ht(this,function(e,i,s){var o;return pt.isWindow(e)?0===n.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===s?pt.css(e,i,r):pt.style(e,i,s,r)},e,a?s:void 0,a)}})}),pt.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,n){return this.on(e,t,i,n)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),pt.parseJSON=JSON.parse,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pt});var qe=t.jQuery,Ue=t.$;return pt.noConflict=function(e){return t.$===pt&&(t.$=Ue),e&&t.jQuery===pt&&(t.jQuery=qe),pt},e||(t.jQuery=t.$=pt),pt}),function(t){"function"==typeof define&&define.amd?define(["jquery"],t):t(jQuery)}(function(t){function e(e,n){var s,o,a,r=e.nodeName.toLowerCase();return"area"===r?(s=e.parentNode,o=s.name,!(!e.href||!o||"map"!==s.nodeName.toLowerCase())&&(a=t("img[usemap='#"+o+"']")[0],!!a&&i(a))):(/^(input|select|textarea|button|object)$/.test(r)?!e.disabled:"a"===r?e.href||n:n)&&i(e)}function i(e){return t.expr.filters.visible(e)&&!t(e).parents().addBack().filter(function(){return"hidden"===t.css(this,"visibility")}).length}function n(t){for(var e,i;t.length&&t[0]!==document;){if(e=t.css("position"),("absolute"===e||"relative"===e||"fixed"===e)&&(i=parseInt(t.css("zIndex"),10),!isNaN(i)&&0!==i))return i;t=t.parent()}return 0}function s(){this._curInst=null,this._keyEvent=!1,this._disabledInputs=[],this._datepickerShowing=!1,this._inDialog=!1,this._mainDivId="ui-datepicker-div",this._inlineClass="ui-datepicker-inline",this._appendClass="ui-datepicker-append",this._triggerClass="ui-datepicker-trigger",this._dialogClass="ui-datepicker-dialog",this._disableClass="ui-datepicker-disabled",this._unselectableClass="ui-datepicker-unselectable",this._currentClass="ui-datepicker-current-day",this._dayOverClass="ui-datepicker-days-cell-over",this.regional=[],this.regional[""]={closeText:"Done",prevText:"Prev",nextText:"Next",currentText:"Today",monthNames:["January","February","March","April","May","June","July","August","September","October","November","December"],monthNamesShort:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],dayNames:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],dayNamesShort:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],dayNamesMin:["Su","Mo","Tu","We","Th","Fr","Sa"],weekHeader:"Wk",dateFormat:"mm/dd/yy",firstDay:0,isRTL:!1,showMonthAfterYear:!1,yearSuffix:""},this._defaults={showOn:"focus",showAnim:"fadeIn",showOptions:{},defaultDate:null,appendText:"",buttonText:"...",buttonImage:"",buttonImageOnly:!1,hideIfNoPrevNext:!1,navigationAsDateFormat:!1,gotoCurrent:!1,changeMonth:!1,changeYear:!1,yearRange:"c-10:c+10",showOtherMonths:!1,selectOtherMonths:!1,showWeek:!1,calculateWeek:this.iso8601Week,shortYearCutoff:"+10",minDate:null,maxDate:null,duration:"fast",beforeShowDay:null,beforeShow:null,onSelect:null,onChangeMonthYear:null,onClose:null,numberOfMonths:1,showCurrentAtPos:0,stepMonths:1,stepBigMonths:12,altField:"",altFormat:"",constrainInput:!0,showButtonPanel:!1,autoSize:!1,disabled:!1},t.extend(this._defaults,this.regional[""]),this.regional.en=t.extend(!0,{},this.regional[""]),this.regional["en-US"]=t.extend(!0,{},this.regional.en),this.dpDiv=o(t("<div id='"+this._mainDivId+"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))}function o(e){var i="button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";return e.delegate(i,"mouseout",function(){t(this).removeClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).removeClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).removeClass("ui-datepicker-next-hover")}).delegate(i,"mouseover",a)}function a(){t.datepicker._isDisabledDatepicker(v.inline?v.dpDiv.parent()[0]:v.input[0])||(t(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"),t(this).addClass("ui-state-hover"),-1!==this.className.indexOf("ui-datepicker-prev")&&t(this).addClass("ui-datepicker-prev-hover"),-1!==this.className.indexOf("ui-datepicker-next")&&t(this).addClass("ui-datepicker-next-hover"))}function r(e,i){t.extend(e,i);for(var n in i)null==i[n]&&(e[n]=i[n]);return e}function l(t){return function(){var e=this.element.val();t.apply(this,arguments),this._refresh(),e!==this.element.val()&&this._trigger("change")}}t.ui=t.ui||{},t.extend(t.ui,{version:"1.11.4",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),t.fn.extend({scrollParent:function(e){var i=this.css("position"),n="absolute"===i,s=e?/(auto|scroll|hidden)/:/(auto|scroll)/,o=this.parents().filter(function(){var e=t(this);return(!n||"static"!==e.css("position"))&&s.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&o.length?o:t(this[0].ownerDocument||document)},uniqueId:function(){var t=0;return function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++t)})}}(),removeUniqueId:function(){return this.each(function(){/^ui-id-\d+$/.test(this.id)&&t(this).removeAttr("id")})}}),t.extend(t.expr[":"],{data:t.expr.createPseudo?t.expr.createPseudo(function(e){return function(i){return!!t.data(i,e)}}):function(e,i,n){return!!t.data(e,n[3])},focusable:function(i){return e(i,!isNaN(t.attr(i,"tabindex")))},tabbable:function(i){var n=t.attr(i,"tabindex"),s=isNaN(n);return(s||n>=0)&&e(i,!s)}}),t("<a>").outerWidth(1).jquery||t.each(["Width","Height"],function(e,i){function n(e,i,n,o){return t.each(s,function(){i-=parseFloat(t.css(e,"padding"+this))||0,n&&(i-=parseFloat(t.css(e,"border"+this+"Width"))||0),o&&(i-=parseFloat(t.css(e,"margin"+this))||0)}),i}var s="Width"===i?["Left","Right"]:["Top","Bottom"],o=i.toLowerCase(),a={innerWidth:t.fn.innerWidth,innerHeight:t.fn.innerHeight,outerWidth:t.fn.outerWidth,outerHeight:t.fn.outerHeight};t.fn["inner"+i]=function(e){return void 0===e?a["inner"+i].call(this):this.each(function(){t(this).css(o,n(this,e)+"px")})},t.fn["outer"+i]=function(e,s){return"number"!=typeof e?a["outer"+i].call(this,e):this.each(function(){t(this).css(o,n(this,e,!0,s)+"px")})}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t("<a>").data("a-b","a").removeData("a-b").data("a-b")&&(t.fn.removeData=function(e){return function(i){return arguments.length?e.call(this,t.camelCase(i)):e.call(this)}}(t.fn.removeData)),t.ui.ie=!!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),t.fn.extend({focus:function(e){return function(i,n){return"number"==typeof i?this.each(function(){var e=this;setTimeout(function(){t(e).focus(),n&&n.call(e)},i)}):e.apply(this,arguments)}}(t.fn.focus),disableSelection:function(){var t="onselectstart"in document.createElement("div")?"selectstart":"mousedown";return function(){return this.bind(t+".ui-disableSelection",function(t){t.preventDefault()})}}(),enableSelection:function(){return this.unbind(".ui-disableSelection")},zIndex:function(e){if(void 0!==e)return this.css("zIndex",e);if(this.length)for(var i,n,s=t(this[0]);s.length&&s[0]!==document;){if(i=s.css("position"),("absolute"===i||"relative"===i||"fixed"===i)&&(n=parseInt(s.css("zIndex"),10),!isNaN(n)&&0!==n))return n;s=s.parent()}return 0}}),t.ui.plugin={add:function(e,i,n){var s,o=t.ui[e].prototype;for(s in n)o.plugins[s]=o.plugins[s]||[],o.plugins[s].push([i,n[s]])},call:function(t,e,i,n){var s,o=t.plugins[e];if(o&&(n||t.element[0].parentNode&&11!==t.element[0].parentNode.nodeType))for(s=0;o.length>s;s++)t.options[o[s][0]]&&o[s][1].apply(t.element,i)}};var h=0,c=Array.prototype.slice;t.cleanData=function(e){return function(i){var n,s,o;for(o=0;null!=(s=i[o]);o++)try{n=t._data(s,"events"),n&&n.remove&&t(s).triggerHandler("remove")}catch(a){}
e(i)}}(t.cleanData),t.widget=function(e,i,n){var s,o,a,r,l={},h=e.split(".")[0];return e=e.split(".")[1],s=h+"-"+e,n||(n=i,i=t.Widget),t.expr[":"][s.toLowerCase()]=function(e){return!!t.data(e,s)},t[h]=t[h]||{},o=t[h][e],a=t[h][e]=function(t,e){return this._createWidget?void(arguments.length&&this._createWidget(t,e)):new a(t,e)},t.extend(a,o,{version:n.version,_proto:t.extend({},n),_childConstructors:[]}),r=new i,r.options=t.widget.extend({},r.options),t.each(n,function(e,n){return t.isFunction(n)?void(l[e]=function(){var t=function(){return i.prototype[e].apply(this,arguments)},s=function(t){return i.prototype[e].apply(this,t)};return function(){var e,i=this._super,o=this._superApply;return this._super=t,this._superApply=s,e=n.apply(this,arguments),this._super=i,this._superApply=o,e}}()):void(l[e]=n)}),a.prototype=t.widget.extend(r,{widgetEventPrefix:o?r.widgetEventPrefix||e:e},l,{constructor:a,namespace:h,widgetName:e,widgetFullName:s}),o?(t.each(o._childConstructors,function(e,i){var n=i.prototype;t.widget(n.namespace+"."+n.widgetName,a,i._proto)}),delete o._childConstructors):i._childConstructors.push(a),t.widget.bridge(e,a),a},t.widget.extend=function(e){for(var i,n,s=c.call(arguments,1),o=0,a=s.length;a>o;o++)for(i in s[o])n=s[o][i],s[o].hasOwnProperty(i)&&void 0!==n&&(e[i]=t.isPlainObject(n)?t.isPlainObject(e[i])?t.widget.extend({},e[i],n):t.widget.extend({},n):n);return e},t.widget.bridge=function(e,i){var n=i.prototype.widgetFullName||e;t.fn[e]=function(s){var o="string"==typeof s,a=c.call(arguments,1),r=this;return o?this.each(function(){var i,o=t.data(this,n);return"instance"===s?(r=o,!1):o?t.isFunction(o[s])&&"_"!==s.charAt(0)?(i=o[s].apply(o,a),i!==o&&void 0!==i?(r=i&&i.jquery?r.pushStack(i.get()):i,!1):void 0):t.error("no such method '"+s+"' for "+e+" widget instance"):t.error("cannot call methods on "+e+" prior to initialization; attempted to call method '"+s+"'")}):(a.length&&(s=t.widget.extend.apply(null,[s].concat(a))),this.each(function(){var e=t.data(this,n);e?(e.option(s||{}),e._init&&e._init()):t.data(this,n,new i(s,this))})),r}},t.Widget=function(){},t.Widget._childConstructors=[],t.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(e,i){i=t(i||this.defaultElement||this)[0],this.element=t(i),this.uuid=h++,this.eventNamespace="."+this.widgetName+this.uuid,this.bindings=t(),this.hoverable=t(),this.focusable=t(),i!==this&&(t.data(i,this.widgetFullName,this),this._on(!0,this.element,{remove:function(t){t.target===i&&this.destroy()}}),this.document=t(i.style?i.ownerDocument:i.document||i),this.window=t(this.document[0].defaultView||this.document[0].parentWindow)),this.options=t.widget.extend({},this.options,this._getCreateOptions(),e),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:t.noop,_getCreateEventData:t.noop,_create:t.noop,_init:t.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(t.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:t.noop,widget:function(){return this.element},option:function(e,i){var n,s,o,a=e;if(0===arguments.length)return t.widget.extend({},this.options);if("string"==typeof e)if(a={},n=e.split("."),e=n.shift(),n.length){for(s=a[e]=t.widget.extend({},this.options[e]),o=0;n.length-1>o;o++)s[n[o]]=s[n[o]]||{},s=s[n[o]];if(e=n.pop(),1===arguments.length)return void 0===s[e]?null:s[e];s[e]=i}else{if(1===arguments.length)return void 0===this.options[e]?null:this.options[e];a[e]=i}return this._setOptions(a),this},_setOptions:function(t){var e;for(e in t)this._setOption(e,t[e]);return this},_setOption:function(t,e){return this.options[t]=e,"disabled"===t&&(this.widget().toggleClass(this.widgetFullName+"-disabled",!!e),e&&(this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus"))),this},enable:function(){return this._setOptions({disabled:!1})},disable:function(){return this._setOptions({disabled:!0})},_on:function(e,i,n){var s,o=this;"boolean"!=typeof e&&(n=i,i=e,e=!1),n?(i=s=t(i),this.bindings=this.bindings.add(i)):(n=i,i=this.element,s=this.widget()),t.each(n,function(n,a){function r(){return e||o.options.disabled!==!0&&!t(this).hasClass("ui-state-disabled")?("string"==typeof a?o[a]:a).apply(o,arguments):void 0}"string"!=typeof a&&(r.guid=a.guid=a.guid||r.guid||t.guid++);var l=n.match(/^([\w:-]*)\s*(.*)$/),h=l[1]+o.eventNamespace,c=l[2];c?s.delegate(c,h,r):i.bind(h,r)})},_off:function(e,i){i=(i||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(i).undelegate(i),this.bindings=t(this.bindings.not(e).get()),this.focusable=t(this.focusable.not(e).get()),this.hoverable=t(this.hoverable.not(e).get())},_delay:function(t,e){function i(){return("string"==typeof t?n[t]:t).apply(n,arguments)}var n=this;return setTimeout(i,e||0)},_hoverable:function(e){this.hoverable=this.hoverable.add(e),this._on(e,{mouseenter:function(e){t(e.currentTarget).addClass("ui-state-hover")},mouseleave:function(e){t(e.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(e){this.focusable=this.focusable.add(e),this._on(e,{focusin:function(e){t(e.currentTarget).addClass("ui-state-focus")},focusout:function(e){t(e.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(e,i,n){var s,o,a=this.options[e];if(n=n||{},i=t.Event(i),i.type=(e===this.widgetEventPrefix?e:this.widgetEventPrefix+e).toLowerCase(),i.target=this.element[0],o=i.originalEvent)for(s in o)s in i||(i[s]=o[s]);return this.element.trigger(i,n),!(t.isFunction(a)&&a.apply(this.element[0],[i].concat(n))===!1||i.isDefaultPrevented())}},t.each({show:"fadeIn",hide:"fadeOut"},function(e,i){t.Widget.prototype["_"+e]=function(n,s,o){"string"==typeof s&&(s={effect:s});var a,r=s?s===!0||"number"==typeof s?i:s.effect||i:e;s=s||{},"number"==typeof s&&(s={duration:s}),a=!t.isEmptyObject(s),s.complete=o,s.delay&&n.delay(s.delay),a&&t.effects&&t.effects.effect[r]?n[e](s):r!==e&&n[r]?n[r](s.duration,s.easing,o):n.queue(function(i){t(this)[e](),o&&o.call(n[0]),i()})}}),t.widget;var u=!1;t(document).mouseup(function(){u=!1}),t.widget("ui.mouse",{version:"1.11.4",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var e=this;this.element.bind("mousedown."+this.widgetName,function(t){return e._mouseDown(t)}).bind("click."+this.widgetName,function(i){return!0===t.data(i.target,e.widgetName+".preventClickEvent")?(t.removeData(i.target,e.widgetName+".preventClickEvent"),i.stopImmediatePropagation(),!1):void 0}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(e){if(!u){this._mouseMoved=!1,this._mouseStarted&&this._mouseUp(e),this._mouseDownEvent=e;var i=this,n=1===e.which,s=!("string"!=typeof this.options.cancel||!e.target.nodeName)&&t(e.target).closest(this.options.cancel).length;return!(n&&!s&&this._mouseCapture(e))||(this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){i.mouseDelayMet=!0},this.options.delay)),this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(e)!==!1,!this._mouseStarted)?(e.preventDefault(),!0):(!0===t.data(e.target,this.widgetName+".preventClickEvent")&&t.removeData(e.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(t){return i._mouseMove(t)},this._mouseUpDelegate=function(t){return i._mouseUp(t)},this.document.bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),e.preventDefault(),u=!0,!0))}},_mouseMove:function(e){if(this._mouseMoved){if(t.ui.ie&&(!document.documentMode||9>document.documentMode)&&!e.button)return this._mouseUp(e);if(!e.which)return this._mouseUp(e)}return(e.which||e.button)&&(this._mouseMoved=!0),this._mouseStarted?(this._mouseDrag(e),e.preventDefault()):(this._mouseDistanceMet(e)&&this._mouseDelayMet(e)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,e)!==!1,this._mouseStarted?this._mouseDrag(e):this._mouseUp(e)),!this._mouseStarted)},_mouseUp:function(e){return this.document.unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,e.target===this._mouseDownEvent.target&&t.data(e.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(e)),u=!1,!1},_mouseDistanceMet:function(t){return Math.max(Math.abs(this._mouseDownEvent.pageX-t.pageX),Math.abs(this._mouseDownEvent.pageY-t.pageY))>=this.options.distance},_mouseDelayMet:function(){return this.mouseDelayMet},_mouseStart:function(){},_mouseDrag:function(){},_mouseStop:function(){},_mouseCapture:function(){return!0}}),function(){function e(t,e,i){return[parseFloat(t[0])*(f.test(t[0])?e/100:1),parseFloat(t[1])*(f.test(t[1])?i/100:1)]}function i(e,i){return parseInt(t.css(e,i),10)||0}function n(e){var i=e[0];return 9===i.nodeType?{width:e.width(),height:e.height(),offset:{top:0,left:0}}:t.isWindow(i)?{width:e.width(),height:e.height(),offset:{top:e.scrollTop(),left:e.scrollLeft()}}:i.preventDefault?{width:0,height:0,offset:{top:i.pageY,left:i.pageX}}:{width:e.outerWidth(),height:e.outerHeight(),offset:e.offset()}}t.ui=t.ui||{};var s,o,a=Math.max,r=Math.abs,l=Math.round,h=/left|center|right/,c=/top|center|bottom/,u=/[\+\-]\d+(\.[\d]+)?%?/,d=/^\w+/,f=/%$/,p=t.fn.position;t.position={scrollbarWidth:function(){if(void 0!==s)return s;var e,i,n=t("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),o=n.children()[0];return t("body").append(n),e=o.offsetWidth,n.css("overflow","scroll"),i=o.offsetWidth,e===i&&(i=n[0].clientWidth),n.remove(),s=e-i},getScrollInfo:function(e){var i=e.isWindow||e.isDocument?"":e.element.css("overflow-x"),n=e.isWindow||e.isDocument?"":e.element.css("overflow-y"),s="scroll"===i||"auto"===i&&e.width<e.element[0].scrollWidth,o="scroll"===n||"auto"===n&&e.height<e.element[0].scrollHeight;return{width:o?t.position.scrollbarWidth():0,height:s?t.position.scrollbarWidth():0}},getWithinInfo:function(e){var i=t(e||window),n=t.isWindow(i[0]),s=!!i[0]&&9===i[0].nodeType;return{element:i,isWindow:n,isDocument:s,offset:i.offset()||{left:0,top:0},scrollLeft:i.scrollLeft(),scrollTop:i.scrollTop(),width:n||s?i.width():i.outerWidth(),height:n||s?i.height():i.outerHeight()}}},t.fn.position=function(s){if(!s||!s.of)return p.apply(this,arguments);s=t.extend({},s);var f,m,g,v,b,y,_=t(s.of),w=t.position.getWithinInfo(s.within),x=t.position.getScrollInfo(w),D=(s.collision||"flip").split(" "),C={};return y=n(_),_[0].preventDefault&&(s.at="left top"),m=y.width,g=y.height,v=y.offset,b=t.extend({},v),t.each(["my","at"],function(){var t,e,i=(s[this]||"").split(" ");1===i.length&&(i=h.test(i[0])?i.concat(["center"]):c.test(i[0])?["center"].concat(i):["center","center"]),i[0]=h.test(i[0])?i[0]:"center",i[1]=c.test(i[1])?i[1]:"center",t=u.exec(i[0]),e=u.exec(i[1]),C[this]=[t?t[0]:0,e?e[0]:0],s[this]=[d.exec(i[0])[0],d.exec(i[1])[0]]}),1===D.length&&(D[1]=D[0]),"right"===s.at[0]?b.left+=m:"center"===s.at[0]&&(b.left+=m/2),"bottom"===s.at[1]?b.top+=g:"center"===s.at[1]&&(b.top+=g/2),f=e(C.at,m,g),b.left+=f[0],b.top+=f[1],this.each(function(){var n,h,c=t(this),u=c.outerWidth(),d=c.outerHeight(),p=i(this,"marginLeft"),y=i(this,"marginTop"),S=u+p+i(this,"marginRight")+x.width,T=d+y+i(this,"marginBottom")+x.height,k=t.extend({},b),E=e(C.my,c.outerWidth(),c.outerHeight());"right"===s.my[0]?k.left-=u:"center"===s.my[0]&&(k.left-=u/2),"bottom"===s.my[1]?k.top-=d:"center"===s.my[1]&&(k.top-=d/2),k.left+=E[0],k.top+=E[1],o||(k.left=l(k.left),k.top=l(k.top)),n={marginLeft:p,marginTop:y},t.each(["left","top"],function(e,i){t.ui.position[D[e]]&&t.ui.position[D[e]][i](k,{targetWidth:m,targetHeight:g,elemWidth:u,elemHeight:d,collisionPosition:n,collisionWidth:S,collisionHeight:T,offset:[f[0]+E[0],f[1]+E[1]],my:s.my,at:s.at,within:w,elem:c})}),s.using&&(h=function(t){var e=v.left-k.left,i=e+m-u,n=v.top-k.top,o=n+g-d,l={target:{element:_,left:v.left,top:v.top,width:m,height:g},element:{element:c,left:k.left,top:k.top,width:u,height:d},horizontal:0>i?"left":e>0?"right":"center",vertical:0>o?"top":n>0?"bottom":"middle"};u>m&&m>r(e+i)&&(l.horizontal="center"),d>g&&g>r(n+o)&&(l.vertical="middle"),l.important=a(r(e),r(i))>a(r(n),r(o))?"horizontal":"vertical",s.using.call(this,t,l)}),c.offset(t.extend(k,{using:h}))})},t.ui.position={fit:{left:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollLeft:n.offset.left,o=n.width,r=t.left-e.collisionPosition.marginLeft,l=s-r,h=r+e.collisionWidth-o-s;e.collisionWidth>o?l>0&&0>=h?(i=t.left+l+e.collisionWidth-o-s,t.left+=l-i):t.left=h>0&&0>=l?s:l>h?s+o-e.collisionWidth:s:l>0?t.left+=l:h>0?t.left-=h:t.left=a(t.left-r,t.left)},top:function(t,e){var i,n=e.within,s=n.isWindow?n.scrollTop:n.offset.top,o=e.within.height,r=t.top-e.collisionPosition.marginTop,l=s-r,h=r+e.collisionHeight-o-s;e.collisionHeight>o?l>0&&0>=h?(i=t.top+l+e.collisionHeight-o-s,t.top+=l-i):t.top=h>0&&0>=l?s:l>h?s+o-e.collisionHeight:s:l>0?t.top+=l:h>0?t.top-=h:t.top=a(t.top-r,t.top)}},flip:{left:function(t,e){var i,n,s=e.within,o=s.offset.left+s.scrollLeft,a=s.width,l=s.isWindow?s.scrollLeft:s.offset.left,h=t.left-e.collisionPosition.marginLeft,c=h-l,u=h+e.collisionWidth-a-l,d="left"===e.my[0]?-e.elemWidth:"right"===e.my[0]?e.elemWidth:0,f="left"===e.at[0]?e.targetWidth:"right"===e.at[0]?-e.targetWidth:0,p=-2*e.offset[0];0>c?(i=t.left+d+f+p+e.collisionWidth-a-o,(0>i||r(c)>i)&&(t.left+=d+f+p)):u>0&&(n=t.left-e.collisionPosition.marginLeft+d+f+p-l,(n>0||u>r(n))&&(t.left+=d+f+p))},top:function(t,e){var i,n,s=e.within,o=s.offset.top+s.scrollTop,a=s.height,l=s.isWindow?s.scrollTop:s.offset.top,h=t.top-e.collisionPosition.marginTop,c=h-l,u=h+e.collisionHeight-a-l,d="top"===e.my[1],f=d?-e.elemHeight:"bottom"===e.my[1]?e.elemHeight:0,p="top"===e.at[1]?e.targetHeight:"bottom"===e.at[1]?-e.targetHeight:0,m=-2*e.offset[1];0>c?(n=t.top+f+p+m+e.collisionHeight-a-o,(0>n||r(c)>n)&&(t.top+=f+p+m)):u>0&&(i=t.top-e.collisionPosition.marginTop+f+p+m-l,(i>0||u>r(i))&&(t.top+=f+p+m))}},flipfit:{left:function(){t.ui.position.flip.left.apply(this,arguments),t.ui.position.fit.left.apply(this,arguments)},top:function(){t.ui.position.flip.top.apply(this,arguments),t.ui.position.fit.top.apply(this,arguments)}}},function(){var e,i,n,s,a,r=document.getElementsByTagName("body")[0],l=document.createElement("div");e=document.createElement(r?"div":"body"),n={visibility:"hidden",width:0,height:0,border:0,margin:0,background:"none"},r&&t.extend(n,{position:"absolute",left:"-1000px",top:"-1000px"});for(a in n)e.style[a]=n[a];e.appendChild(l),i=r||document.documentElement,i.insertBefore(e,i.firstChild),l.style.cssText="position: absolute; left: 10.7432222px;",s=t(l).offset().left,o=s>10&&11>s,e.innerHTML="",i.removeChild(e)}()}(),t.ui.position,t.widget("ui.accordion",{version:"1.11.4",options:{active:0,animate:{},collapsible:!1,event:"click",header:"> li > :first-child,> :not(li):even",heightStyle:"auto",icons:{activeHeader:"ui-icon-triangle-1-s",header:"ui-icon-triangle-1-e"},activate:null,beforeActivate:null},hideProps:{borderTopWidth:"hide",borderBottomWidth:"hide",paddingTop:"hide",paddingBottom:"hide",height:"hide"},showProps:{borderTopWidth:"show",borderBottomWidth:"show",paddingTop:"show",paddingBottom:"show",height:"show"},_create:function(){var e=this.options;this.prevShow=this.prevHide=t(),this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role","tablist"),e.collapsible||e.active!==!1&&null!=e.active||(e.active=0),this._processPanels(),0>e.active&&(e.active+=this.headers.length),this._refresh()},_getCreateEventData:function(){return{header:this.active,panel:this.active.length?this.active.next():t()}},_createIcons:function(){var e=this.options.icons;e&&(t("<span>").addClass("ui-accordion-header-icon ui-icon "+e.header).prependTo(this.headers),this.active.children(".ui-accordion-header-icon").removeClass(e.header).addClass(e.activeHeader),this.headers.addClass("ui-accordion-icons"))},_destroyIcons:function(){this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()},_destroy:function(){var t;this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"),this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(),this._destroyIcons(),t=this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display","").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(),"content"!==this.options.heightStyle&&t.css("height","")},_setOption:function(t,e){return"active"===t?void this._activate(e):("event"===t&&(this.options.event&&this._off(this.headers,this.options.event),this._setupEvents(e)),this._super(t,e),"collapsible"!==t||e||this.options.active!==!1||this._activate(0),"icons"===t&&(this._destroyIcons(),e&&this._createIcons()),void("disabled"===t&&(this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this.headers.add(this.headers.next()).toggleClass("ui-state-disabled",!!e))))},_keydown:function(e){if(!e.altKey&&!e.ctrlKey){var i=t.ui.keyCode,n=this.headers.length,s=this.headers.index(e.target),o=!1;switch(e.keyCode){case i.RIGHT:case i.DOWN:o=this.headers[(s+1)%n];break;case i.LEFT:case i.UP:o=this.headers[(s-1+n)%n];break;case i.SPACE:case i.ENTER:this._eventHandler(e);break;case i.HOME:o=this.headers[0];break;case i.END:o=this.headers[n-1]}o&&(t(e.target).attr("tabIndex",-1),t(o).attr("tabIndex",0),o.focus(),e.preventDefault())}},_panelKeyDown:function(e){e.keyCode===t.ui.keyCode.UP&&e.ctrlKey&&t(e.currentTarget).prev().focus()},refresh:function(){var e=this.options;this._processPanels(),e.active===!1&&e.collapsible===!0||!this.headers.length?(e.active=!1,this.active=t()):e.active===!1?this._activate(0):this.active.length&&!t.contains(this.element[0],this.active[0])?this.headers.length===this.headers.find(".ui-state-disabled").length?(e.active=!1,this.active=t()):this._activate(Math.max(0,e.active-1)):e.active=this.headers.index(this.active),this._destroyIcons(),this._refresh()},_processPanels:function(){var t=this.headers,e=this.panels;this.headers=this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"),this.panels=this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(),e&&(this._off(t.not(this.headers)),this._off(e.not(this.panels)))},_refresh:function(){var e,i=this.options,n=i.heightStyle,s=this.element.parent();this.active=this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"),this.active.next().addClass("ui-accordion-content-active").show(),this.headers.attr("role","tab").each(function(){var e=t(this),i=e.uniqueId().attr("id"),n=e.next(),s=n.uniqueId().attr("id");e.attr("aria-controls",s),n.attr("aria-labelledby",i)}).next().attr("role","tabpanel"),this.headers.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}).next().attr({"aria-hidden":"true"}).hide(),this.active.length?this.active.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}).next().attr({"aria-hidden":"false"}):this.headers.eq(0).attr("tabIndex",0),this._createIcons(),this._setupEvents(i.event),"fill"===n?(e=s.height(),this.element.siblings(":visible").each(function(){var i=t(this),n=i.css("position");"absolute"!==n&&"fixed"!==n&&(e-=i.outerHeight(!0))}),this.headers.each(function(){e-=t(this).outerHeight(!0)}),this.headers.next().each(function(){t(this).height(Math.max(0,e-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===n&&(e=0,this.headers.next().each(function(){e=Math.max(e,t(this).css("height","").height())}).height(e))},_activate:function(e){var i=this._findActive(e)[0];i!==this.active[0]&&(i=i||this.active[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return"number"==typeof e?this.headers.eq(e):t()},_setupEvents:function(e){var i={keydown:"_keydown"};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.headers.add(this.headers.next())),this._on(this.headers,i),this._on(this.headers.next(),{keydown:"_panelKeyDown"}),this._hoverable(this.headers),this._focusable(this.headers)},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),o=s[0]===n[0],a=o&&i.collapsible,r=a?t():s.next(),l=n.next(),h={oldHeader:n,oldPanel:l,newHeader:a?t():s,newPanel:r};e.preventDefault(),o&&!i.collapsible||this._trigger("beforeActivate",e,h)===!1||(i.active=!a&&this.headers.index(s),this.active=o?t():s,this._toggle(h),n.removeClass("ui-accordion-header-active ui-state-active"),i.icons&&n.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header),o||(s.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"),i.icons&&s.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader),s.next().addClass("ui-accordion-content-active")))},_toggle:function(e){var i=e.newPanel,n=this.prevShow.length?this.prevShow:e.oldPanel;this.prevShow.add(this.prevHide).stop(!0,!0),this.prevShow=i,this.prevHide=n,this.options.animate?this._animate(i,n,e):(n.hide(),i.show(),this._toggleComplete(e)),n.attr({"aria-hidden":"true"}),n.prev().attr({"aria-selected":"false","aria-expanded":"false"}),i.length&&n.length?n.prev().attr({tabIndex:-1,"aria-expanded":"false"}):i.length&&this.headers.filter(function(){return 0===parseInt(t(this).attr("tabIndex"),10)}).attr("tabIndex",-1),i.attr("aria-hidden","false").prev().attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_animate:function(t,e,i){var n,s,o,a=this,r=0,l=t.css("box-sizing"),h=t.length&&(!e.length||t.index()<e.index()),c=this.options.animate||{},u=h&&c.down||c,d=function(){a._toggleComplete(i)};return"number"==typeof u&&(o=u),"string"==typeof u&&(s=u),s=s||u.easing||c.easing,o=o||u.duration||c.duration,e.length?t.length?(n=t.show().outerHeight(),e.animate(this.hideProps,{duration:o,easing:s,step:function(t,e){e.now=Math.round(t)}}),void t.hide().animate(this.showProps,{duration:o,easing:s,complete:d,step:function(t,i){i.now=Math.round(t),"height"!==i.prop?"content-box"===l&&(r+=i.now):"content"!==a.options.heightStyle&&(i.now=Math.round(n-e.outerHeight()-r),r=0)}})):e.animate(this.hideProps,o,s,d):t.animate(this.showProps,o,s,d)},_toggleComplete:function(t){var e=t.oldPanel;e.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"),e.length&&(e.parent()[0].className=e.parent()[0].className),this._trigger("activate",null,t)}}),t.widget("ui.menu",{version:"1.11.4",defaultElement:"<ul>",delay:300,options:{icons:{submenu:"ui-icon-carat-1-e"},items:"> *",menus:"ul",position:{my:"left-1 top",at:"right top"},role:"menu",blur:null,focus:null,select:null},_create:function(){this.activeMenu=this.element,this.mouseHandled=!1,this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length).attr({role:this.options.role,tabIndex:0}),this.options.disabled&&this.element.addClass("ui-state-disabled").attr("aria-disabled","true"),this._on({"mousedown .ui-menu-item":function(t){t.preventDefault()},"click .ui-menu-item":function(e){var i=t(e.target);!this.mouseHandled&&i.not(".ui-state-disabled").length&&(this.select(e),e.isPropagationStopped()||(this.mouseHandled=!0),i.has(".ui-menu").length?this.expand(e):!this.element.is(":focus")&&t(this.document[0].activeElement).closest(".ui-menu").length&&(this.element.trigger("focus",[!0]),this.active&&1===this.active.parents(".ui-menu").length&&clearTimeout(this.timer)))},"mouseenter .ui-menu-item":function(e){if(!this.previousFilter){var i=t(e.currentTarget);i.siblings(".ui-state-active").removeClass("ui-state-active"),this.focus(e,i)}},mouseleave:"collapseAll","mouseleave .ui-menu":"collapseAll",focus:function(t,e){var i=this.active||this.element.find(this.options.items).eq(0);e||this.focus(t,i)},blur:function(e){this._delay(function(){t.contains(this.element[0],this.document[0].activeElement)||this.collapseAll(e)})},keydown:"_keydown"}),this.refresh(),this._on(this.document,{click:function(t){this._closeOnDocumentClick(t)&&this.collapseAll(t),this.mouseHandled=!1}})},_destroy:function(){this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(),this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function(){var e=t(this);e.data("ui-menu-submenu-carat")&&e.remove()}),this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")},_keydown:function(e){var i,n,s,o,a=!0;switch(e.keyCode){case t.ui.keyCode.PAGE_UP:this.previousPage(e);break;case t.ui.keyCode.PAGE_DOWN:this.nextPage(e);break;case t.ui.keyCode.HOME:this._move("first","first",e);break;case t.ui.keyCode.END:this._move("last","last",e);break;case t.ui.keyCode.UP:this.previous(e);break;case t.ui.keyCode.DOWN:this.next(e);break;case t.ui.keyCode.LEFT:this.collapse(e);break;case t.ui.keyCode.RIGHT:this.active&&!this.active.is(".ui-state-disabled")&&this.expand(e);break;case t.ui.keyCode.ENTER:case t.ui.keyCode.SPACE:this._activate(e);break;case t.ui.keyCode.ESCAPE:this.collapse(e);break;default:a=!1,n=this.previousFilter||"",s=String.fromCharCode(e.keyCode),o=!1,clearTimeout(this.filterTimer),s===n?o=!0:s=n+s,i=this._filterMenuItems(s),i=o&&-1!==i.index(this.active.next())?this.active.nextAll(".ui-menu-item"):i,i.length||(s=String.fromCharCode(e.keyCode),i=this._filterMenuItems(s)),i.length?(this.focus(e,i),this.previousFilter=s,this.filterTimer=this._delay(function(){delete this.previousFilter},1e3)):delete this.previousFilter}a&&e.preventDefault()},_activate:function(t){this.active.is(".ui-state-disabled")||(this.active.is("[aria-haspopup='true']")?this.expand(t):this.select(t))},refresh:function(){var e,i,n=this,s=this.options.icons.submenu,o=this.element.find(this.options.menus);this.element.toggleClass("ui-menu-icons",!!this.element.find(".ui-icon").length),o.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({role:this.options.role,"aria-hidden":"true","aria-expanded":"false"}).each(function(){var e=t(this),i=e.parent(),n=t("<span>").addClass("ui-menu-icon ui-icon "+s).data("ui-menu-submenu-carat",!0);i.attr("aria-haspopup","true").prepend(n),e.attr("aria-labelledby",i.attr("id"))}),e=o.add(this.element),i=e.find(this.options.items),i.not(".ui-menu-item").each(function(){var e=t(this);n._isDivider(e)&&e.addClass("ui-widget-content ui-menu-divider")}),i.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({tabIndex:-1,role:this._itemRole()}),i.filter(".ui-state-disabled").attr("aria-disabled","true"),this.active&&!t.contains(this.element[0],this.active[0])&&this.blur()},_itemRole:function(){return{menu:"menuitem",listbox:"option"}[this.options.role]},_setOption:function(t,e){"icons"===t&&this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(e.submenu),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this._super(t,e)},focus:function(t,e){var i,n;this.blur(t,t&&"focus"===t.type),this._scrollIntoView(e),this.active=e.first(),n=this.active.addClass("ui-state-focus").removeClass("ui-state-active"),this.options.role&&this.element.attr("aria-activedescendant",n.attr("id")),this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"),t&&"keydown"===t.type?this._close():this.timer=this._delay(function(){this._close()},this.delay),i=e.children(".ui-menu"),i.length&&t&&/^mouse/.test(t.type)&&this._startOpening(i),this.activeMenu=e.parent(),this._trigger("focus",t,{item:e})},_scrollIntoView:function(e){var i,n,s,o,a,r;this._hasScroll()&&(i=parseFloat(t.css(this.activeMenu[0],"borderTopWidth"))||0,n=parseFloat(t.css(this.activeMenu[0],"paddingTop"))||0,s=e.offset().top-this.activeMenu.offset().top-i-n,o=this.activeMenu.scrollTop(),a=this.activeMenu.height(),r=e.outerHeight(),0>s?this.activeMenu.scrollTop(o+s):s+r>a&&this.activeMenu.scrollTop(o+s-a+r))},blur:function(t,e){e||clearTimeout(this.timer),this.active&&(this.active.removeClass("ui-state-focus"),this.active=null,this._trigger("blur",t,{item:this.active}))},_startOpening:function(t){clearTimeout(this.timer),"true"===t.attr("aria-hidden")&&(this.timer=this._delay(function(){this._close(),this._open(t)},this.delay))},_open:function(e){var i=t.extend({of:this.active},this.options.position);clearTimeout(this.timer),this.element.find(".ui-menu").not(e.parents(".ui-menu")).hide().attr("aria-hidden","true"),e.show().removeAttr("aria-hidden").attr("aria-expanded","true").position(i)},collapseAll:function(e,i){clearTimeout(this.timer),this.timer=this._delay(function(){var n=i?this.element:t(e&&e.target).closest(this.element.find(".ui-menu"));n.length||(n=this.element),this._close(n),this.blur(e),this.activeMenu=n},this.delay)},_close:function(t){t||(t=this.active?this.active.parent():this.element),t.find(".ui-menu").hide().attr("aria-hidden","true").attr("aria-expanded","false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active")},_closeOnDocumentClick:function(e){return!t(e.target).closest(".ui-menu").length},_isDivider:function(t){return!/[^\-\u2014\u2013\s]/.test(t.text())},collapse:function(t){var e=this.active&&this.active.parent().closest(".ui-menu-item",this.element);e&&e.length&&(this._close(),this.focus(t,e))},expand:function(t){var e=this.active&&this.active.children(".ui-menu ").find(this.options.items).first();e&&e.length&&(this._open(e.parent()),this._delay(function(){this.focus(t,e)}))},next:function(t){this._move("next","first",t)},previous:function(t){this._move("prev","last",t)},isFirstItem:function(){return this.active&&!this.active.prevAll(".ui-menu-item").length},isLastItem:function(){return this.active&&!this.active.nextAll(".ui-menu-item").length},_move:function(t,e,i){var n;this.active&&(n="first"===t||"last"===t?this.active["first"===t?"prevAll":"nextAll"](".ui-menu-item").eq(-1):this.active[t+"All"](".ui-menu-item").eq(0)),n&&n.length&&this.active||(n=this.activeMenu.find(this.options.items)[e]()),this.focus(i,n)},nextPage:function(e){var i,n,s;return this.active?void(this.isLastItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.nextAll(".ui-menu-item").each(function(){return i=t(this),0>i.offset().top-n-s}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items)[this.active?"last":"first"]()))):void this.next(e)},previousPage:function(e){
var i,n,s;return this.active?void(this.isFirstItem()||(this._hasScroll()?(n=this.active.offset().top,s=this.element.height(),this.active.prevAll(".ui-menu-item").each(function(){return i=t(this),i.offset().top-n+s>0}),this.focus(e,i)):this.focus(e,this.activeMenu.find(this.options.items).first()))):void this.next(e)},_hasScroll:function(){return this.element.outerHeight()<this.element.prop("scrollHeight")},select:function(e){this.active=this.active||t(e.target).closest(".ui-menu-item");var i={item:this.active};this.active.has(".ui-menu").length||this.collapseAll(e,!0),this._trigger("select",e,i)},_filterMenuItems:function(e){var i=e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&"),n=RegExp("^"+i,"i");return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function(){return n.test(t.trim(t(this).text()))})}}),t.widget("ui.autocomplete",{version:"1.11.4",defaultElement:"<input>",options:{appendTo:null,autoFocus:!1,delay:300,minLength:1,position:{my:"left top",at:"left bottom",collision:"none"},source:null,change:null,close:null,focus:null,open:null,response:null,search:null,select:null},requestIndex:0,pending:0,_create:function(){var e,i,n,s=this.element[0].nodeName.toLowerCase(),o="textarea"===s,a="input"===s;this.isMultiLine=!!o||!a&&this.element.prop("isContentEditable"),this.valueMethod=this.element[o||a?"val":"text"],this.isNewMenu=!0,this.element.addClass("ui-autocomplete-input").attr("autocomplete","off"),this._on(this.element,{keydown:function(s){if(this.element.prop("readOnly"))return e=!0,n=!0,void(i=!0);e=!1,n=!1,i=!1;var o=t.ui.keyCode;switch(s.keyCode){case o.PAGE_UP:e=!0,this._move("previousPage",s);break;case o.PAGE_DOWN:e=!0,this._move("nextPage",s);break;case o.UP:e=!0,this._keyEvent("previous",s);break;case o.DOWN:e=!0,this._keyEvent("next",s);break;case o.ENTER:this.menu.active&&(e=!0,s.preventDefault(),this.menu.select(s));break;case o.TAB:this.menu.active&&this.menu.select(s);break;case o.ESCAPE:this.menu.element.is(":visible")&&(this.isMultiLine||this._value(this.term),this.close(s),s.preventDefault());break;default:i=!0,this._searchTimeout(s)}},keypress:function(n){if(e)return e=!1,void((!this.isMultiLine||this.menu.element.is(":visible"))&&n.preventDefault());if(!i){var s=t.ui.keyCode;switch(n.keyCode){case s.PAGE_UP:this._move("previousPage",n);break;case s.PAGE_DOWN:this._move("nextPage",n);break;case s.UP:this._keyEvent("previous",n);break;case s.DOWN:this._keyEvent("next",n)}}},input:function(t){return n?(n=!1,void t.preventDefault()):void this._searchTimeout(t)},focus:function(){this.selectedItem=null,this.previous=this._value()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(clearTimeout(this.searching),this.close(t),void this._change(t))}}),this._initSource(),this.menu=t("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role:null}).hide().menu("instance"),this._on(this.menu.element,{mousedown:function(e){e.preventDefault(),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur});var i=this.menu.element[0];t(e.target).closest(".ui-menu-item").length||this._delay(function(){var e=this;this.document.one("mousedown",function(n){n.target===e.element[0]||n.target===i||t.contains(i,n.target)||e.close()})})},menufocus:function(e,i){var n,s;return this.isNewMenu&&(this.isNewMenu=!1,e.originalEvent&&/^mouse/.test(e.originalEvent.type))?(this.menu.blur(),void this.document.one("mousemove",function(){t(e.target).trigger(e.originalEvent)})):(s=i.item.data("ui-autocomplete-item"),!1!==this._trigger("focus",e,{item:s})&&e.originalEvent&&/^key/.test(e.originalEvent.type)&&this._value(s.value),n=i.item.attr("aria-label")||s.value,void(n&&t.trim(n).length&&(this.liveRegion.children().hide(),t("<div>").text(n).appendTo(this.liveRegion))))},menuselect:function(t,e){var i=e.item.data("ui-autocomplete-item"),n=this.previous;this.element[0]!==this.document[0].activeElement&&(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n,this.selectedItem=i})),!1!==this._trigger("select",t,{item:i})&&this._value(i.value),this.term=this._value(),this.close(t),this.selectedItem=i}}),this.liveRegion=t("<span>",{role:"status","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_destroy:function(){clearTimeout(this.searching),this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"),this.menu.element.remove(),this.liveRegion.remove()},_setOption:function(t,e){this._super(t,e),"source"===t&&this._initSource(),"appendTo"===t&&this.menu.element.appendTo(this._appendTo()),"disabled"===t&&e&&this.xhr&&this.xhr.abort()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front")),e.length||(e=this.document[0].body),e},_initSource:function(){var e,i,n=this;t.isArray(this.options.source)?(e=this.options.source,this.source=function(i,n){n(t.ui.autocomplete.filter(e,i.term))}):"string"==typeof this.options.source?(i=this.options.source,this.source=function(e,s){n.xhr&&n.xhr.abort(),n.xhr=t.ajax({url:i,data:e,dataType:"json",success:function(t){s(t)},error:function(){s([])}})}):this.source=this.options.source},_searchTimeout:function(t){clearTimeout(this.searching),this.searching=this._delay(function(){var e=this.term===this._value(),i=this.menu.element.is(":visible"),n=t.altKey||t.ctrlKey||t.metaKey||t.shiftKey;(!e||e&&!i&&!n)&&(this.selectedItem=null,this.search(null,t))},this.options.delay)},search:function(t,e){return t=null!=t?t:this._value(),this.term=this._value(),t.length<this.options.minLength?this.close(e):this._trigger("search",e)!==!1?this._search(t):void 0},_search:function(t){this.pending++,this.element.addClass("ui-autocomplete-loading"),this.cancelSearch=!1,this.source({term:t},this._response())},_response:function(){var e=++this.requestIndex;return t.proxy(function(t){e===this.requestIndex&&this.__response(t),this.pending--,this.pending||this.element.removeClass("ui-autocomplete-loading")},this)},__response:function(t){t&&(t=this._normalize(t)),this._trigger("response",null,{content:t}),!this.options.disabled&&t&&t.length&&!this.cancelSearch?(this._suggest(t),this._trigger("open")):this._close()},close:function(t){this.cancelSearch=!0,this._close(t)},_close:function(t){this.menu.element.is(":visible")&&(this.menu.element.hide(),this.menu.blur(),this.isNewMenu=!0,this._trigger("close",t))},_change:function(t){this.previous!==this._value()&&this._trigger("change",t,{item:this.selectedItem})},_normalize:function(e){return e.length&&e[0].label&&e[0].value?e:t.map(e,function(e){return"string"==typeof e?{label:e,value:e}:t.extend({},e,{label:e.label||e.value,value:e.value||e.label})})},_suggest:function(e){var i=this.menu.element.empty();this._renderMenu(i,e),this.isNewMenu=!0,this.menu.refresh(),i.show(),this._resizeMenu(),i.position(t.extend({of:this.element},this.options.position)),this.options.autoFocus&&this.menu.next()},_resizeMenu:function(){var t=this.menu.element;t.outerWidth(Math.max(t.width("").outerWidth()+1,this.element.outerWidth()))},_renderMenu:function(e,i){var n=this;t.each(i,function(t,i){n._renderItemData(e,i)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-autocomplete-item",e)},_renderItem:function(e,i){return t("<li>").text(i.label).appendTo(e)},_move:function(t,e){return this.menu.element.is(":visible")?this.menu.isFirstItem()&&/^previous/.test(t)||this.menu.isLastItem()&&/^next/.test(t)?(this.isMultiLine||this._value(this.term),void this.menu.blur()):void this.menu[t](e):void this.search(null,e)},widget:function(){return this.menu.element},_value:function(){return this.valueMethod.apply(this.element,arguments)},_keyEvent:function(t,e){(!this.isMultiLine||this.menu.element.is(":visible"))&&(this._move(t,e),e.preventDefault())}}),t.extend(t.ui.autocomplete,{escapeRegex:function(t){return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},filter:function(e,i){var n=RegExp(t.ui.autocomplete.escapeRegex(i),"i");return t.grep(e,function(t){return n.test(t.label||t.value||t)})}}),t.widget("ui.autocomplete",t.ui.autocomplete,{options:{messages:{noResults:"No search results.",results:function(t){return t+(t>1?" results are":" result is")+" available, use up and down arrow keys to navigate."}}},__response:function(e){var i;this._superApply(arguments),this.options.disabled||this.cancelSearch||(i=e&&e.length?this.options.messages.results(e.length):this.options.messages.noResults,this.liveRegion.children().hide(),t("<div>").text(i).appendTo(this.liveRegion))}}),t.ui.autocomplete;var d,f="ui-button ui-widget ui-state-default ui-corner-all",p="ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",m=function(){var e=t(this);setTimeout(function(){e.find(":ui-button").button("refresh")},1)},g=function(e){var i=e.name,n=e.form,s=t([]);return i&&(i=i.replace(/'/g,"\\'"),s=n?t(n).find("[name='"+i+"'][type=radio]"):t("[name='"+i+"'][type=radio]",e.ownerDocument).filter(function(){return!this.form})),s};t.widget("ui.button",{version:"1.11.4",defaultElement:"<button>",options:{disabled:null,text:!0,label:null,icons:{primary:null,secondary:null}},_create:function(){this.element.closest("form").unbind("reset"+this.eventNamespace).bind("reset"+this.eventNamespace,m),"boolean"!=typeof this.options.disabled?this.options.disabled=!!this.element.prop("disabled"):this.element.prop("disabled",this.options.disabled),this._determineButtonType(),this.hasTitle=!!this.buttonElement.attr("title");var e=this,i=this.options,n="checkbox"===this.type||"radio"===this.type,s=n?"":"ui-state-active";null===i.label&&(i.label="input"===this.type?this.buttonElement.val():this.buttonElement.html()),this._hoverable(this.buttonElement),this.buttonElement.addClass(f).attr("role","button").bind("mouseenter"+this.eventNamespace,function(){i.disabled||this===d&&t(this).addClass("ui-state-active")}).bind("mouseleave"+this.eventNamespace,function(){i.disabled||t(this).removeClass(s)}).bind("click"+this.eventNamespace,function(t){i.disabled&&(t.preventDefault(),t.stopImmediatePropagation())}),this._on({focus:function(){this.buttonElement.addClass("ui-state-focus")},blur:function(){this.buttonElement.removeClass("ui-state-focus")}}),n&&this.element.bind("change"+this.eventNamespace,function(){e.refresh()}),"checkbox"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){return!i.disabled&&void 0}):"radio"===this.type?this.buttonElement.bind("click"+this.eventNamespace,function(){if(i.disabled)return!1;t(this).addClass("ui-state-active"),e.buttonElement.attr("aria-pressed","true");var n=e.element[0];g(n).not(n).map(function(){return t(this).button("widget")[0]}).removeClass("ui-state-active").attr("aria-pressed","false")}):(this.buttonElement.bind("mousedown"+this.eventNamespace,function(){return!i.disabled&&(t(this).addClass("ui-state-active"),d=this,void e.document.one("mouseup",function(){d=null}))}).bind("mouseup"+this.eventNamespace,function(){return!i.disabled&&void t(this).removeClass("ui-state-active")}).bind("keydown"+this.eventNamespace,function(e){return!i.disabled&&void((e.keyCode===t.ui.keyCode.SPACE||e.keyCode===t.ui.keyCode.ENTER)&&t(this).addClass("ui-state-active"))}).bind("keyup"+this.eventNamespace+" blur"+this.eventNamespace,function(){t(this).removeClass("ui-state-active")}),this.buttonElement.is("a")&&this.buttonElement.keyup(function(e){e.keyCode===t.ui.keyCode.SPACE&&t(this).click()})),this._setOption("disabled",i.disabled),this._resetButton()},_determineButtonType:function(){var t,e,i;this.type=this.element.is("[type=checkbox]")?"checkbox":this.element.is("[type=radio]")?"radio":this.element.is("input")?"input":"button","checkbox"===this.type||"radio"===this.type?(t=this.element.parents().last(),e="label[for='"+this.element.attr("id")+"']",this.buttonElement=t.find(e),this.buttonElement.length||(t=t.length?t.siblings():this.element.siblings(),this.buttonElement=t.filter(e),this.buttonElement.length||(this.buttonElement=t.find(e))),this.element.addClass("ui-helper-hidden-accessible"),i=this.element.is(":checked"),i&&this.buttonElement.addClass("ui-state-active"),this.buttonElement.prop("aria-pressed",i)):this.buttonElement=this.element},widget:function(){return this.buttonElement},_destroy:function(){this.element.removeClass("ui-helper-hidden-accessible"),this.buttonElement.removeClass(f+" ui-state-active "+p).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()),this.hasTitle||this.buttonElement.removeAttr("title")},_setOption:function(t,e){return this._super(t,e),"disabled"===t?(this.widget().toggleClass("ui-state-disabled",!!e),this.element.prop("disabled",!!e),void(e&&("checkbox"===this.type||"radio"===this.type?this.buttonElement.removeClass("ui-state-focus"):this.buttonElement.removeClass("ui-state-focus ui-state-active")))):void this._resetButton()},refresh:function(){var e=this.element.is("input, button")?this.element.is(":disabled"):this.element.hasClass("ui-button-disabled");e!==this.options.disabled&&this._setOption("disabled",e),"radio"===this.type?g(this.element[0]).each(function(){t(this).is(":checked")?t(this).button("widget").addClass("ui-state-active").attr("aria-pressed","true"):t(this).button("widget").removeClass("ui-state-active").attr("aria-pressed","false")}):"checkbox"===this.type&&(this.element.is(":checked")?this.buttonElement.addClass("ui-state-active").attr("aria-pressed","true"):this.buttonElement.removeClass("ui-state-active").attr("aria-pressed","false"))},_resetButton:function(){if("input"===this.type)return void(this.options.label&&this.element.val(this.options.label));var e=this.buttonElement.removeClass(p),i=t("<span></span>",this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(e.empty()).text(),n=this.options.icons,s=n.primary&&n.secondary,o=[];n.primary||n.secondary?(this.options.text&&o.push("ui-button-text-icon"+(s?"s":n.primary?"-primary":"-secondary")),n.primary&&e.prepend("<span class='ui-button-icon-primary ui-icon "+n.primary+"'></span>"),n.secondary&&e.append("<span class='ui-button-icon-secondary ui-icon "+n.secondary+"'></span>"),this.options.text||(o.push(s?"ui-button-icons-only":"ui-button-icon-only"),this.hasTitle||e.attr("title",t.trim(i)))):o.push("ui-button-text-only"),e.addClass(o.join(" "))}}),t.widget("ui.buttonset",{version:"1.11.4",options:{items:"button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},_create:function(){this.element.addClass("ui-buttonset")},_init:function(){this.refresh()},_setOption:function(t,e){"disabled"===t&&this.buttons.button("option",t,e),this._super(t,e)},refresh:function(){var e="rtl"===this.element.css("direction"),i=this.element.find(this.options.items),n=i.filter(":ui-button");i.not(":ui-button").button(),n.button("refresh"),this.buttons=i.map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(e?"ui-corner-right":"ui-corner-left").end().filter(":last").addClass(e?"ui-corner-left":"ui-corner-right").end().end()},_destroy:function(){this.element.removeClass("ui-buttonset"),this.buttons.map(function(){return t(this).button("widget")[0]}).removeClass("ui-corner-left ui-corner-right").end().button("destroy")}}),t.ui.button,t.extend(t.ui,{datepicker:{version:"1.11.4"}});var v;t.extend(s.prototype,{markerClassName:"hasDatepicker",maxRows:4,_widgetDatepicker:function(){return this.dpDiv},setDefaults:function(t){return r(this._defaults,t||{}),this},_attachDatepicker:function(e,i){var n,s,o;n=e.nodeName.toLowerCase(),s="div"===n||"span"===n,e.id||(this.uuid+=1,e.id="dp"+this.uuid),o=this._newInst(t(e),s),o.settings=t.extend({},i||{}),"input"===n?this._connectDatepicker(e,o):s&&this._inlineDatepicker(e,o)},_newInst:function(e,i){var n=e[0].id.replace(/([^A-Za-z0-9_\-])/g,"\\\\$1");return{id:n,input:e,selectedDay:0,selectedMonth:0,selectedYear:0,drawMonth:0,drawYear:0,inline:i,dpDiv:i?o(t("<div class='"+this._inlineClass+" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")):this.dpDiv}},_connectDatepicker:function(e,i){var n=t(e);i.append=t([]),i.trigger=t([]),n.hasClass(this.markerClassName)||(this._attachments(n,i),n.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp),this._autoSize(i),t.data(e,"datepicker",i),i.settings.disabled&&this._disableDatepicker(e))},_attachments:function(e,i){var n,s,o,a=this._get(i,"appendText"),r=this._get(i,"isRTL");i.append&&i.append.remove(),a&&(i.append=t("<span class='"+this._appendClass+"'>"+a+"</span>"),e[r?"before":"after"](i.append)),e.unbind("focus",this._showDatepicker),i.trigger&&i.trigger.remove(),n=this._get(i,"showOn"),("focus"===n||"both"===n)&&e.focus(this._showDatepicker),("button"===n||"both"===n)&&(s=this._get(i,"buttonText"),o=this._get(i,"buttonImage"),i.trigger=t(this._get(i,"buttonImageOnly")?t("<img/>").addClass(this._triggerClass).attr({src:o,alt:s,title:s}):t("<button type='button'></button>").addClass(this._triggerClass).html(o?t("<img/>").attr({src:o,alt:s,title:s}):s)),e[r?"before":"after"](i.trigger),i.trigger.click(function(){return t.datepicker._datepickerShowing&&t.datepicker._lastInput===e[0]?t.datepicker._hideDatepicker():t.datepicker._datepickerShowing&&t.datepicker._lastInput!==e[0]?(t.datepicker._hideDatepicker(),t.datepicker._showDatepicker(e[0])):t.datepicker._showDatepicker(e[0]),!1}))},_autoSize:function(t){if(this._get(t,"autoSize")&&!t.inline){var e,i,n,s,o=new Date(2009,11,20),a=this._get(t,"dateFormat");a.match(/[DM]/)&&(e=function(t){for(i=0,n=0,s=0;t.length>s;s++)t[s].length>i&&(i=t[s].length,n=s);return n},o.setMonth(e(this._get(t,a.match(/MM/)?"monthNames":"monthNamesShort"))),o.setDate(e(this._get(t,a.match(/DD/)?"dayNames":"dayNamesShort"))+20-o.getDay())),t.input.attr("size",this._formatDate(t,o).length)}},_inlineDatepicker:function(e,i){var n=t(e);n.hasClass(this.markerClassName)||(n.addClass(this.markerClassName).append(i.dpDiv),t.data(e,"datepicker",i),this._setDate(i,this._getDefaultDate(i),!0),this._updateDatepicker(i),this._updateAlternate(i),i.settings.disabled&&this._disableDatepicker(e),i.dpDiv.css("display","block"))},_dialogDatepicker:function(e,i,n,s,o){var a,l,h,c,u,d=this._dialogInst;return d||(this.uuid+=1,a="dp"+this.uuid,this._dialogInput=t("<input type='text' id='"+a+"' style='position: absolute; top: -100px; width: 0px;'/>"),this._dialogInput.keydown(this._doKeyDown),t("body").append(this._dialogInput),d=this._dialogInst=this._newInst(this._dialogInput,!1),d.settings={},t.data(this._dialogInput[0],"datepicker",d)),r(d.settings,s||{}),i=i&&i.constructor===Date?this._formatDate(d,i):i,this._dialogInput.val(i),this._pos=o?o.length?o:[o.pageX,o.pageY]:null,this._pos||(l=document.documentElement.clientWidth,h=document.documentElement.clientHeight,c=document.documentElement.scrollLeft||document.body.scrollLeft,u=document.documentElement.scrollTop||document.body.scrollTop,this._pos=[l/2-100+c,h/2-150+u]),this._dialogInput.css("left",this._pos[0]+20+"px").css("top",this._pos[1]+"px"),d.settings.onSelect=n,this._inDialog=!0,this.dpDiv.addClass(this._dialogClass),this._showDatepicker(this._dialogInput[0]),t.blockUI&&t.blockUI(this.dpDiv),t.data(this._dialogInput[0],"datepicker",d),this},_destroyDatepicker:function(e){var i,n=t(e),s=t.data(e,"datepicker");n.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),t.removeData(e,"datepicker"),"input"===i?(s.append.remove(),s.trigger.remove(),n.removeClass(this.markerClassName).unbind("focus",this._showDatepicker).unbind("keydown",this._doKeyDown).unbind("keypress",this._doKeyPress).unbind("keyup",this._doKeyUp)):("div"===i||"span"===i)&&n.removeClass(this.markerClassName).empty(),v===s&&(v=null))},_enableDatepicker:function(e){var i,n,s=t(e),o=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!1,o.trigger.filter("button").each(function(){this.disabled=!1}).end().filter("img").css({opacity:"1.0",cursor:""})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().removeClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!1)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}))},_disableDatepicker:function(e){var i,n,s=t(e),o=t.data(e,"datepicker");s.hasClass(this.markerClassName)&&(i=e.nodeName.toLowerCase(),"input"===i?(e.disabled=!0,o.trigger.filter("button").each(function(){this.disabled=!0}).end().filter("img").css({opacity:"0.5",cursor:"default"})):("div"===i||"span"===i)&&(n=s.children("."+this._inlineClass),n.children().addClass("ui-state-disabled"),n.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled",!0)),this._disabledInputs=t.map(this._disabledInputs,function(t){return t===e?null:t}),this._disabledInputs[this._disabledInputs.length]=e)},_isDisabledDatepicker:function(t){if(!t)return!1;for(var e=0;this._disabledInputs.length>e;e++)if(this._disabledInputs[e]===t)return!0;return!1},_getInst:function(e){try{return t.data(e,"datepicker")}catch(i){throw"Missing instance data for this datepicker"}},_optionDatepicker:function(e,i,n){var s,o,a,l,h=this._getInst(e);return 2===arguments.length&&"string"==typeof i?"defaults"===i?t.extend({},t.datepicker._defaults):h?"all"===i?t.extend({},h.settings):this._get(h,i):null:(s=i||{},"string"==typeof i&&(s={},s[i]=n),void(h&&(this._curInst===h&&this._hideDatepicker(),o=this._getDateDatepicker(e,!0),a=this._getMinMaxDate(h,"min"),l=this._getMinMaxDate(h,"max"),r(h.settings,s),null!==a&&void 0!==s.dateFormat&&void 0===s.minDate&&(h.settings.minDate=this._formatDate(h,a)),null!==l&&void 0!==s.dateFormat&&void 0===s.maxDate&&(h.settings.maxDate=this._formatDate(h,l)),"disabled"in s&&(s.disabled?this._disableDatepicker(e):this._enableDatepicker(e)),this._attachments(t(e),h),this._autoSize(h),this._setDate(h,o),this._updateAlternate(h),this._updateDatepicker(h))))},_changeDatepicker:function(t,e,i){this._optionDatepicker(t,e,i)},_refreshDatepicker:function(t){var e=this._getInst(t);e&&this._updateDatepicker(e)},_setDateDatepicker:function(t,e){var i=this._getInst(t);i&&(this._setDate(i,e),this._updateDatepicker(i),this._updateAlternate(i))},_getDateDatepicker:function(t,e){var i=this._getInst(t);return i&&!i.inline&&this._setDateFromField(i,e),i?this._getDate(i):null},_doKeyDown:function(e){var i,n,s,o=t.datepicker._getInst(e.target),a=!0,r=o.dpDiv.is(".ui-datepicker-rtl");if(o._keyEvent=!0,t.datepicker._datepickerShowing)switch(e.keyCode){case 9:t.datepicker._hideDatepicker(),a=!1;break;case 13:return s=t("td."+t.datepicker._dayOverClass+":not(."+t.datepicker._currentClass+")",o.dpDiv),s[0]&&t.datepicker._selectDay(e.target,o.selectedMonth,o.selectedYear,s[0]),i=t.datepicker._get(o,"onSelect"),i?(n=t.datepicker._formatDate(o),i.apply(o.input?o.input[0]:null,[n,o])):t.datepicker._hideDatepicker(),!1;case 27:t.datepicker._hideDatepicker();break;case 33:t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 34:t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 35:(e.ctrlKey||e.metaKey)&&t.datepicker._clearDate(e.target),a=e.ctrlKey||e.metaKey;break;case 36:(e.ctrlKey||e.metaKey)&&t.datepicker._gotoToday(e.target),a=e.ctrlKey||e.metaKey;break;case 37:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?1:-1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?-t.datepicker._get(o,"stepBigMonths"):-t.datepicker._get(o,"stepMonths"),"M");break;case 38:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,-7,"D"),a=e.ctrlKey||e.metaKey;break;case 39:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,r?-1:1,"D"),a=e.ctrlKey||e.metaKey,e.originalEvent.altKey&&t.datepicker._adjustDate(e.target,e.ctrlKey?+t.datepicker._get(o,"stepBigMonths"):+t.datepicker._get(o,"stepMonths"),"M");break;case 40:(e.ctrlKey||e.metaKey)&&t.datepicker._adjustDate(e.target,7,"D"),a=e.ctrlKey||e.metaKey;break;default:a=!1}else 36===e.keyCode&&e.ctrlKey?t.datepicker._showDatepicker(this):a=!1;a&&(e.preventDefault(),e.stopPropagation())},_doKeyPress:function(e){var i,n,s=t.datepicker._getInst(e.target);return t.datepicker._get(s,"constrainInput")?(i=t.datepicker._possibleChars(t.datepicker._get(s,"dateFormat")),n=String.fromCharCode(null==e.charCode?e.keyCode:e.charCode),e.ctrlKey||e.metaKey||" ">n||!i||i.indexOf(n)>-1):void 0},_doKeyUp:function(e){var i,n=t.datepicker._getInst(e.target);if(n.input.val()!==n.lastVal)try{i=t.datepicker.parseDate(t.datepicker._get(n,"dateFormat"),n.input?n.input.val():null,t.datepicker._getFormatConfig(n)),i&&(t.datepicker._setDateFromField(n),t.datepicker._updateAlternate(n),t.datepicker._updateDatepicker(n))}catch(s){}return!0},_showDatepicker:function(e){if(e=e.target||e,"input"!==e.nodeName.toLowerCase()&&(e=t("input",e.parentNode)[0]),!t.datepicker._isDisabledDatepicker(e)&&t.datepicker._lastInput!==e){var i,s,o,a,l,h,c;i=t.datepicker._getInst(e),t.datepicker._curInst&&t.datepicker._curInst!==i&&(t.datepicker._curInst.dpDiv.stop(!0,!0),i&&t.datepicker._datepickerShowing&&t.datepicker._hideDatepicker(t.datepicker._curInst.input[0])),s=t.datepicker._get(i,"beforeShow"),o=s?s.apply(e,[e,i]):{},o!==!1&&(r(i.settings,o),i.lastVal=null,t.datepicker._lastInput=e,t.datepicker._setDateFromField(i),t.datepicker._inDialog&&(e.value=""),t.datepicker._pos||(t.datepicker._pos=t.datepicker._findPos(e),t.datepicker._pos[1]+=e.offsetHeight),a=!1,t(e).parents().each(function(){return a|="fixed"===t(this).css("position"),!a}),l={left:t.datepicker._pos[0],top:t.datepicker._pos[1]},t.datepicker._pos=null,i.dpDiv.empty(),i.dpDiv.css({position:"absolute",display:"block",top:"-1000px"}),t.datepicker._updateDatepicker(i),l=t.datepicker._checkOffset(i,l,a),i.dpDiv.css({position:t.datepicker._inDialog&&t.blockUI?"static":a?"fixed":"absolute",display:"none",left:l.left+"px",top:l.top+"px"}),i.inline||(h=t.datepicker._get(i,"showAnim"),c=t.datepicker._get(i,"duration"),i.dpDiv.css("z-index",n(t(e))+1),t.datepicker._datepickerShowing=!0,t.effects&&t.effects.effect[h]?i.dpDiv.show(h,t.datepicker._get(i,"showOptions"),c):i.dpDiv[h||"show"](h?c:null),t.datepicker._shouldFocusInput(i)&&i.input.focus(),t.datepicker._curInst=i))}},_updateDatepicker:function(e){this.maxRows=4,v=e,e.dpDiv.empty().append(this._generateHTML(e)),this._attachHandlers(e);var i,n=this._getNumberOfMonths(e),s=n[1],o=17,r=e.dpDiv.find("."+this._dayOverClass+" a");r.length>0&&a.apply(r.get(0)),e.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""),s>1&&e.dpDiv.addClass("ui-datepicker-multi-"+s).css("width",o*s+"em"),e.dpDiv[(1!==n[0]||1!==n[1]?"add":"remove")+"Class"]("ui-datepicker-multi"),e.dpDiv[(this._get(e,"isRTL")?"add":"remove")+"Class"]("ui-datepicker-rtl"),e===t.datepicker._curInst&&t.datepicker._datepickerShowing&&t.datepicker._shouldFocusInput(e)&&e.input.focus(),e.yearshtml&&(i=e.yearshtml,setTimeout(function(){i===e.yearshtml&&e.yearshtml&&e.dpDiv.find("select.ui-datepicker-year:first").replaceWith(e.yearshtml),i=e.yearshtml=null},0))},_shouldFocusInput:function(t){return t.input&&t.input.is(":visible")&&!t.input.is(":disabled")&&!t.input.is(":focus")},_checkOffset:function(e,i,n){var s=e.dpDiv.outerWidth(),o=e.dpDiv.outerHeight(),a=e.input?e.input.outerWidth():0,r=e.input?e.input.outerHeight():0,l=document.documentElement.clientWidth+(n?0:t(document).scrollLeft()),h=document.documentElement.clientHeight+(n?0:t(document).scrollTop());return i.left-=this._get(e,"isRTL")?s-a:0,i.left-=n&&i.left===e.input.offset().left?t(document).scrollLeft():0,i.top-=n&&i.top===e.input.offset().top+r?t(document).scrollTop():0,i.left-=Math.min(i.left,i.left+s>l&&l>s?Math.abs(i.left+s-l):0),i.top-=Math.min(i.top,i.top+o>h&&h>o?Math.abs(o+r):0),i},_findPos:function(e){for(var i,n=this._getInst(e),s=this._get(n,"isRTL");e&&("hidden"===e.type||1!==e.nodeType||t.expr.filters.hidden(e));)e=e[s?"previousSibling":"nextSibling"];return i=t(e).offset(),[i.left,i.top]},_hideDatepicker:function(e){var i,n,s,o,a=this._curInst;!a||e&&a!==t.data(e,"datepicker")||this._datepickerShowing&&(i=this._get(a,"showAnim"),n=this._get(a,"duration"),s=function(){t.datepicker._tidyDialog(a)},t.effects&&(t.effects.effect[i]||t.effects[i])?a.dpDiv.hide(i,t.datepicker._get(a,"showOptions"),n,s):a.dpDiv["slideDown"===i?"slideUp":"fadeIn"===i?"fadeOut":"hide"](i?n:null,s),i||s(),this._datepickerShowing=!1,o=this._get(a,"onClose"),o&&o.apply(a.input?a.input[0]:null,[a.input?a.input.val():"",a]),this._lastInput=null,this._inDialog&&(this._dialogInput.css({position:"absolute",left:"0",top:"-100px"}),t.blockUI&&(t.unblockUI(),t("body").append(this.dpDiv))),this._inDialog=!1)},_tidyDialog:function(t){t.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")},_checkExternalClick:function(e){if(t.datepicker._curInst){var i=t(e.target),n=t.datepicker._getInst(i[0]);(i[0].id!==t.datepicker._mainDivId&&0===i.parents("#"+t.datepicker._mainDivId).length&&!i.hasClass(t.datepicker.markerClassName)&&!i.closest("."+t.datepicker._triggerClass).length&&t.datepicker._datepickerShowing&&(!t.datepicker._inDialog||!t.blockUI)||i.hasClass(t.datepicker.markerClassName)&&t.datepicker._curInst!==n)&&t.datepicker._hideDatepicker()}},_adjustDate:function(e,i,n){var s=t(e),o=this._getInst(s[0]);this._isDisabledDatepicker(s[0])||(this._adjustInstDate(o,i+("M"===n?this._get(o,"showCurrentAtPos"):0),n),this._updateDatepicker(o))},_gotoToday:function(e){var i,n=t(e),s=this._getInst(n[0]);this._get(s,"gotoCurrent")&&s.currentDay?(s.selectedDay=s.currentDay,s.drawMonth=s.selectedMonth=s.currentMonth,s.drawYear=s.selectedYear=s.currentYear):(i=new Date,s.selectedDay=i.getDate(),s.drawMonth=s.selectedMonth=i.getMonth(),s.drawYear=s.selectedYear=i.getFullYear()),this._notifyChange(s),this._adjustDate(n)},_selectMonthYear:function(e,i,n){var s=t(e),o=this._getInst(s[0]);o["selected"+("M"===n?"Month":"Year")]=o["draw"+("M"===n?"Month":"Year")]=parseInt(i.options[i.selectedIndex].value,10),this._notifyChange(o),this._adjustDate(s)},_selectDay:function(e,i,n,s){var o,a=t(e);t(s).hasClass(this._unselectableClass)||this._isDisabledDatepicker(a[0])||(o=this._getInst(a[0]),o.selectedDay=o.currentDay=t("a",s).html(),o.selectedMonth=o.currentMonth=i,o.selectedYear=o.currentYear=n,this._selectDate(e,this._formatDate(o,o.currentDay,o.currentMonth,o.currentYear)))},_clearDate:function(e){var i=t(e);this._selectDate(i,"")},_selectDate:function(e,i){var n,s=t(e),o=this._getInst(s[0]);i=null!=i?i:this._formatDate(o),o.input&&o.input.val(i),this._updateAlternate(o),n=this._get(o,"onSelect"),n?n.apply(o.input?o.input[0]:null,[i,o]):o.input&&o.input.trigger("change"),o.inline?this._updateDatepicker(o):(this._hideDatepicker(),this._lastInput=o.input[0],"object"!=typeof o.input[0]&&o.input.focus(),this._lastInput=null)},_updateAlternate:function(e){var i,n,s,o=this._get(e,"altField");o&&(i=this._get(e,"altFormat")||this._get(e,"dateFormat"),n=this._getDate(e),s=this.formatDate(i,n,this._getFormatConfig(e)),t(o).each(function(){t(this).val(s)}))},noWeekends:function(t){var e=t.getDay();return[e>0&&6>e,""]},iso8601Week:function(t){var e,i=new Date(t.getTime());return i.setDate(i.getDate()+4-(i.getDay()||7)),e=i.getTime(),i.setMonth(0),i.setDate(1),Math.floor(Math.round((e-i)/864e5)/7)+1},parseDate:function(e,i,n){if(null==e||null==i)throw"Invalid arguments";if(i="object"==typeof i?""+i:i+"",""===i)return null;var s,o,a,r,l=0,h=(n?n.shortYearCutoff:null)||this._defaults.shortYearCutoff,c="string"!=typeof h?h:(new Date).getFullYear()%100+parseInt(h,10),u=(n?n.dayNamesShort:null)||this._defaults.dayNamesShort,d=(n?n.dayNames:null)||this._defaults.dayNames,f=(n?n.monthNamesShort:null)||this._defaults.monthNamesShort,p=(n?n.monthNames:null)||this._defaults.monthNames,m=-1,g=-1,v=-1,b=-1,y=!1,_=function(t){
var i=e.length>s+1&&e.charAt(s+1)===t;return i&&s++,i},w=function(t){var e=_(t),n="@"===t?14:"!"===t?20:"y"===t&&e?4:"o"===t?3:2,s="y"===t?n:1,o=RegExp("^\\d{"+s+","+n+"}"),a=i.substring(l).match(o);if(!a)throw"Missing number at position "+l;return l+=a[0].length,parseInt(a[0],10)},x=function(e,n,s){var o=-1,a=t.map(_(e)?s:n,function(t,e){return[[e,t]]}).sort(function(t,e){return-(t[1].length-e[1].length)});if(t.each(a,function(t,e){var n=e[1];return i.substr(l,n.length).toLowerCase()===n.toLowerCase()?(o=e[0],l+=n.length,!1):void 0}),-1!==o)return o+1;throw"Unknown name at position "+l},D=function(){if(i.charAt(l)!==e.charAt(s))throw"Unexpected literal at position "+l;l++};for(s=0;e.length>s;s++)if(y)"'"!==e.charAt(s)||_("'")?D():y=!1;else switch(e.charAt(s)){case"d":v=w("d");break;case"D":x("D",u,d);break;case"o":b=w("o");break;case"m":g=w("m");break;case"M":g=x("M",f,p);break;case"y":m=w("y");break;case"@":r=new Date(w("@")),m=r.getFullYear(),g=r.getMonth()+1,v=r.getDate();break;case"!":r=new Date((w("!")-this._ticksTo1970)/1e4),m=r.getFullYear(),g=r.getMonth()+1,v=r.getDate();break;case"'":_("'")?D():y=!0;break;default:D()}if(i.length>l&&(a=i.substr(l),!/^\s+/.test(a)))throw"Extra/unparsed characters found in date: "+a;if(-1===m?m=(new Date).getFullYear():100>m&&(m+=(new Date).getFullYear()-(new Date).getFullYear()%100+(c>=m?0:-100)),b>-1)for(g=1,v=b;o=this._getDaysInMonth(m,g-1),!(o>=v);)g++,v-=o;if(r=this._daylightSavingAdjust(new Date(m,g-1,v)),r.getFullYear()!==m||r.getMonth()+1!==g||r.getDate()!==v)throw"Invalid date";return r},ATOM:"yy-mm-dd",COOKIE:"D, dd M yy",ISO_8601:"yy-mm-dd",RFC_822:"D, d M y",RFC_850:"DD, dd-M-y",RFC_1036:"D, d M y",RFC_1123:"D, d M yy",RFC_2822:"D, d M yy",RSS:"D, d M y",TICKS:"!",TIMESTAMP:"@",W3C:"yy-mm-dd",_ticksTo1970:864e9*(718685+Math.floor(492.5)-Math.floor(19.7)+Math.floor(4.925)),formatDate:function(t,e,i){if(!e)return"";var n,s=(i?i.dayNamesShort:null)||this._defaults.dayNamesShort,o=(i?i.dayNames:null)||this._defaults.dayNames,a=(i?i.monthNamesShort:null)||this._defaults.monthNamesShort,r=(i?i.monthNames:null)||this._defaults.monthNames,l=function(e){var i=t.length>n+1&&t.charAt(n+1)===e;return i&&n++,i},h=function(t,e,i){var n=""+e;if(l(t))for(;i>n.length;)n="0"+n;return n},c=function(t,e,i,n){return l(t)?n[e]:i[e]},u="",d=!1;if(e)for(n=0;t.length>n;n++)if(d)"'"!==t.charAt(n)||l("'")?u+=t.charAt(n):d=!1;else switch(t.charAt(n)){case"d":u+=h("d",e.getDate(),2);break;case"D":u+=c("D",e.getDay(),s,o);break;case"o":u+=h("o",Math.round((new Date(e.getFullYear(),e.getMonth(),e.getDate()).getTime()-new Date(e.getFullYear(),0,0).getTime())/864e5),3);break;case"m":u+=h("m",e.getMonth()+1,2);break;case"M":u+=c("M",e.getMonth(),a,r);break;case"y":u+=l("y")?e.getFullYear():(10>e.getYear()%100?"0":"")+e.getYear()%100;break;case"@":u+=e.getTime();break;case"!":u+=1e4*e.getTime()+this._ticksTo1970;break;case"'":l("'")?u+="'":d=!0;break;default:u+=t.charAt(n)}return u},_possibleChars:function(t){var e,i="",n=!1,s=function(i){var n=t.length>e+1&&t.charAt(e+1)===i;return n&&e++,n};for(e=0;t.length>e;e++)if(n)"'"!==t.charAt(e)||s("'")?i+=t.charAt(e):n=!1;else switch(t.charAt(e)){case"d":case"m":case"y":case"@":i+="0123456789";break;case"D":case"M":return null;case"'":s("'")?i+="'":n=!0;break;default:i+=t.charAt(e)}return i},_get:function(t,e){return void 0!==t.settings[e]?t.settings[e]:this._defaults[e]},_setDateFromField:function(t,e){if(t.input.val()!==t.lastVal){var i=this._get(t,"dateFormat"),n=t.lastVal=t.input?t.input.val():null,s=this._getDefaultDate(t),o=s,a=this._getFormatConfig(t);try{o=this.parseDate(i,n,a)||s}catch(r){n=e?"":n}t.selectedDay=o.getDate(),t.drawMonth=t.selectedMonth=o.getMonth(),t.drawYear=t.selectedYear=o.getFullYear(),t.currentDay=n?o.getDate():0,t.currentMonth=n?o.getMonth():0,t.currentYear=n?o.getFullYear():0,this._adjustInstDate(t)}},_getDefaultDate:function(t){return this._restrictMinMax(t,this._determineDate(t,this._get(t,"defaultDate"),new Date))},_determineDate:function(e,i,n){var s=function(t){var e=new Date;return e.setDate(e.getDate()+t),e},o=function(i){try{return t.datepicker.parseDate(t.datepicker._get(e,"dateFormat"),i,t.datepicker._getFormatConfig(e))}catch(n){}for(var s=(i.toLowerCase().match(/^c/)?t.datepicker._getDate(e):null)||new Date,o=s.getFullYear(),a=s.getMonth(),r=s.getDate(),l=/([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,h=l.exec(i);h;){switch(h[2]||"d"){case"d":case"D":r+=parseInt(h[1],10);break;case"w":case"W":r+=7*parseInt(h[1],10);break;case"m":case"M":a+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a));break;case"y":case"Y":o+=parseInt(h[1],10),r=Math.min(r,t.datepicker._getDaysInMonth(o,a))}h=l.exec(i)}return new Date(o,a,r)},a=null==i||""===i?n:"string"==typeof i?o(i):"number"==typeof i?isNaN(i)?n:s(i):new Date(i.getTime());return a=a&&"Invalid Date"==""+a?n:a,a&&(a.setHours(0),a.setMinutes(0),a.setSeconds(0),a.setMilliseconds(0)),this._daylightSavingAdjust(a)},_daylightSavingAdjust:function(t){return t?(t.setHours(t.getHours()>12?t.getHours()+2:0),t):null},_setDate:function(t,e,i){var n=!e,s=t.selectedMonth,o=t.selectedYear,a=this._restrictMinMax(t,this._determineDate(t,e,new Date));t.selectedDay=t.currentDay=a.getDate(),t.drawMonth=t.selectedMonth=t.currentMonth=a.getMonth(),t.drawYear=t.selectedYear=t.currentYear=a.getFullYear(),s===t.selectedMonth&&o===t.selectedYear||i||this._notifyChange(t),this._adjustInstDate(t),t.input&&t.input.val(n?"":this._formatDate(t))},_getDate:function(t){var e=!t.currentYear||t.input&&""===t.input.val()?null:this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return e},_attachHandlers:function(e){var i=this._get(e,"stepMonths"),n="#"+e.id.replace(/\\\\/g,"\\");e.dpDiv.find("[data-handler]").map(function(){var e={prev:function(){t.datepicker._adjustDate(n,-i,"M")},next:function(){t.datepicker._adjustDate(n,+i,"M")},hide:function(){t.datepicker._hideDatepicker()},today:function(){t.datepicker._gotoToday(n)},selectDay:function(){return t.datepicker._selectDay(n,+this.getAttribute("data-month"),+this.getAttribute("data-year"),this),!1},selectMonth:function(){return t.datepicker._selectMonthYear(n,this,"M"),!1},selectYear:function(){return t.datepicker._selectMonthYear(n,this,"Y"),!1}};t(this).bind(this.getAttribute("data-event"),e[this.getAttribute("data-handler")])})},_generateHTML:function(t){var e,i,n,s,o,a,r,l,h,c,u,d,f,p,m,g,v,b,y,_,w,x,D,C,S,T,k,E,M,I,A,P,H,O,N,L,R,F,z,$=new Date,W=this._daylightSavingAdjust(new Date($.getFullYear(),$.getMonth(),$.getDate())),j=this._get(t,"isRTL"),Y=this._get(t,"showButtonPanel"),B=this._get(t,"hideIfNoPrevNext"),q=this._get(t,"navigationAsDateFormat"),U=this._getNumberOfMonths(t),V=this._get(t,"showCurrentAtPos"),G=this._get(t,"stepMonths"),X=1!==U[0]||1!==U[1],Z=this._daylightSavingAdjust(t.currentDay?new Date(t.currentYear,t.currentMonth,t.currentDay):new Date(9999,9,9)),K=this._getMinMaxDate(t,"min"),J=this._getMinMaxDate(t,"max"),Q=t.drawMonth-V,tt=t.drawYear;if(0>Q&&(Q+=12,tt--),J)for(e=this._daylightSavingAdjust(new Date(J.getFullYear(),J.getMonth()-U[0]*U[1]+1,J.getDate())),e=K&&K>e?K:e;this._daylightSavingAdjust(new Date(tt,Q,1))>e;)Q--,0>Q&&(Q=11,tt--);for(t.drawMonth=Q,t.drawYear=tt,i=this._get(t,"prevText"),i=q?this.formatDate(i,this._daylightSavingAdjust(new Date(tt,Q-G,1)),this._getFormatConfig(t)):i,n=this._canAdjustMonth(t,-1,tt,Q)?"<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>":B?"":"<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='"+i+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"e":"w")+"'>"+i+"</span></a>",s=this._get(t,"nextText"),s=q?this.formatDate(s,this._daylightSavingAdjust(new Date(tt,Q+G,1)),this._getFormatConfig(t)):s,o=this._canAdjustMonth(t,1,tt,Q)?"<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>":B?"":"<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='"+s+"'><span class='ui-icon ui-icon-circle-triangle-"+(j?"w":"e")+"'>"+s+"</span></a>",a=this._get(t,"currentText"),r=this._get(t,"gotoCurrent")&&t.currentDay?Z:W,a=q?this.formatDate(a,r,this._getFormatConfig(t)):a,l=t.inline?"":"<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>"+this._get(t,"closeText")+"</button>",h=Y?"<div class='ui-datepicker-buttonpane ui-widget-content'>"+(j?l:"")+(this._isInRange(t,r)?"<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>"+a+"</button>":"")+(j?"":l)+"</div>":"",c=parseInt(this._get(t,"firstDay"),10),c=isNaN(c)?0:c,u=this._get(t,"showWeek"),d=this._get(t,"dayNames"),f=this._get(t,"dayNamesMin"),p=this._get(t,"monthNames"),m=this._get(t,"monthNamesShort"),g=this._get(t,"beforeShowDay"),v=this._get(t,"showOtherMonths"),b=this._get(t,"selectOtherMonths"),y=this._getDefaultDate(t),_="",x=0;U[0]>x;x++){for(D="",this.maxRows=4,C=0;U[1]>C;C++){if(S=this._daylightSavingAdjust(new Date(tt,Q,t.selectedDay)),T=" ui-corner-all",k="",X){if(k+="<div class='ui-datepicker-group",U[1]>1)switch(C){case 0:k+=" ui-datepicker-group-first",T=" ui-corner-"+(j?"right":"left");break;case U[1]-1:k+=" ui-datepicker-group-last",T=" ui-corner-"+(j?"left":"right");break;default:k+=" ui-datepicker-group-middle",T=""}k+="'>"}for(k+="<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix"+T+"'>"+(/all|left/.test(T)&&0===x?j?o:n:"")+(/all|right/.test(T)&&0===x?j?n:o:"")+this._generateMonthYearHeader(t,Q,tt,K,J,x>0||C>0,p,m)+"</div><table class='ui-datepicker-calendar'><thead><tr>",E=u?"<th class='ui-datepicker-week-col'>"+this._get(t,"weekHeader")+"</th>":"",w=0;7>w;w++)M=(w+c)%7,E+="<th scope='col'"+((w+c+6)%7>=5?" class='ui-datepicker-week-end'":"")+"><span title='"+d[M]+"'>"+f[M]+"</span></th>";for(k+=E+"</tr></thead><tbody>",I=this._getDaysInMonth(tt,Q),tt===t.selectedYear&&Q===t.selectedMonth&&(t.selectedDay=Math.min(t.selectedDay,I)),A=(this._getFirstDayOfMonth(tt,Q)-c+7)%7,P=Math.ceil((A+I)/7),H=X&&this.maxRows>P?this.maxRows:P,this.maxRows=H,O=this._daylightSavingAdjust(new Date(tt,Q,1-A)),N=0;H>N;N++){for(k+="<tr>",L=u?"<td class='ui-datepicker-week-col'>"+this._get(t,"calculateWeek")(O)+"</td>":"",w=0;7>w;w++)R=g?g.apply(t.input?t.input[0]:null,[O]):[!0,""],F=O.getMonth()!==Q,z=F&&!b||!R[0]||K&&K>O||J&&O>J,L+="<td class='"+((w+c+6)%7>=5?" ui-datepicker-week-end":"")+(F?" ui-datepicker-other-month":"")+(O.getTime()===S.getTime()&&Q===t.selectedMonth&&t._keyEvent||y.getTime()===O.getTime()&&y.getTime()===S.getTime()?" "+this._dayOverClass:"")+(z?" "+this._unselectableClass+" ui-state-disabled":"")+(F&&!v?"":" "+R[1]+(O.getTime()===Z.getTime()?" "+this._currentClass:"")+(O.getTime()===W.getTime()?" ui-datepicker-today":""))+"'"+(F&&!v||!R[2]?"":" title='"+R[2].replace(/'/g,"&#39;")+"'")+(z?"":" data-handler='selectDay' data-event='click' data-month='"+O.getMonth()+"' data-year='"+O.getFullYear()+"'")+">"+(F&&!v?"&#xa0;":z?"<span class='ui-state-default'>"+O.getDate()+"</span>":"<a class='ui-state-default"+(O.getTime()===W.getTime()?" ui-state-highlight":"")+(O.getTime()===Z.getTime()?" ui-state-active":"")+(F?" ui-priority-secondary":"")+"' href='#'>"+O.getDate()+"</a>")+"</td>",O.setDate(O.getDate()+1),O=this._daylightSavingAdjust(O);k+=L+"</tr>"}Q++,Q>11&&(Q=0,tt++),k+="</tbody></table>"+(X?"</div>"+(U[0]>0&&C===U[1]-1?"<div class='ui-datepicker-row-break'></div>":""):""),D+=k}_+=D}return _+=h,t._keyEvent=!1,_},_generateMonthYearHeader:function(t,e,i,n,s,o,a,r){var l,h,c,u,d,f,p,m,g=this._get(t,"changeMonth"),v=this._get(t,"changeYear"),b=this._get(t,"showMonthAfterYear"),y="<div class='ui-datepicker-title'>",_="";if(o||!g)_+="<span class='ui-datepicker-month'>"+a[e]+"</span>";else{for(l=n&&n.getFullYear()===i,h=s&&s.getFullYear()===i,_+="<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>",c=0;12>c;c++)(!l||c>=n.getMonth())&&(!h||s.getMonth()>=c)&&(_+="<option value='"+c+"'"+(c===e?" selected='selected'":"")+">"+r[c]+"</option>");_+="</select>"}if(b||(y+=_+(!o&&g&&v?"":"&#xa0;")),!t.yearshtml)if(t.yearshtml="",o||!v)y+="<span class='ui-datepicker-year'>"+i+"</span>";else{for(u=this._get(t,"yearRange").split(":"),d=(new Date).getFullYear(),f=function(t){var e=t.match(/c[+\-].*/)?i+parseInt(t.substring(1),10):t.match(/[+\-].*/)?d+parseInt(t,10):parseInt(t,10);return isNaN(e)?d:e},p=f(u[0]),m=Math.max(p,f(u[1]||"")),p=n?Math.max(p,n.getFullYear()):p,m=s?Math.min(m,s.getFullYear()):m,t.yearshtml+="<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>";m>=p;p++)t.yearshtml+="<option value='"+p+"'"+(p===i?" selected='selected'":"")+">"+p+"</option>";t.yearshtml+="</select>",y+=t.yearshtml,t.yearshtml=null}return y+=this._get(t,"yearSuffix"),b&&(y+=(!o&&g&&v?"":"&#xa0;")+_),y+="</div>"},_adjustInstDate:function(t,e,i){var n=t.drawYear+("Y"===i?e:0),s=t.drawMonth+("M"===i?e:0),o=Math.min(t.selectedDay,this._getDaysInMonth(n,s))+("D"===i?e:0),a=this._restrictMinMax(t,this._daylightSavingAdjust(new Date(n,s,o)));t.selectedDay=a.getDate(),t.drawMonth=t.selectedMonth=a.getMonth(),t.drawYear=t.selectedYear=a.getFullYear(),("M"===i||"Y"===i)&&this._notifyChange(t)},_restrictMinMax:function(t,e){var i=this._getMinMaxDate(t,"min"),n=this._getMinMaxDate(t,"max"),s=i&&i>e?i:e;return n&&s>n?n:s},_notifyChange:function(t){var e=this._get(t,"onChangeMonthYear");e&&e.apply(t.input?t.input[0]:null,[t.selectedYear,t.selectedMonth+1,t])},_getNumberOfMonths:function(t){var e=this._get(t,"numberOfMonths");return null==e?[1,1]:"number"==typeof e?[1,e]:e},_getMinMaxDate:function(t,e){return this._determineDate(t,this._get(t,e+"Date"),null)},_getDaysInMonth:function(t,e){return 32-this._daylightSavingAdjust(new Date(t,e,32)).getDate()},_getFirstDayOfMonth:function(t,e){return new Date(t,e,1).getDay()},_canAdjustMonth:function(t,e,i,n){var s=this._getNumberOfMonths(t),o=this._daylightSavingAdjust(new Date(i,n+(0>e?e:s[0]*s[1]),1));return 0>e&&o.setDate(this._getDaysInMonth(o.getFullYear(),o.getMonth())),this._isInRange(t,o)},_isInRange:function(t,e){var i,n,s=this._getMinMaxDate(t,"min"),o=this._getMinMaxDate(t,"max"),a=null,r=null,l=this._get(t,"yearRange");return l&&(i=l.split(":"),n=(new Date).getFullYear(),a=parseInt(i[0],10),r=parseInt(i[1],10),i[0].match(/[+\-].*/)&&(a+=n),i[1].match(/[+\-].*/)&&(r+=n)),(!s||e.getTime()>=s.getTime())&&(!o||e.getTime()<=o.getTime())&&(!a||e.getFullYear()>=a)&&(!r||r>=e.getFullYear())},_getFormatConfig:function(t){var e=this._get(t,"shortYearCutoff");return e="string"!=typeof e?e:(new Date).getFullYear()%100+parseInt(e,10),{shortYearCutoff:e,dayNamesShort:this._get(t,"dayNamesShort"),dayNames:this._get(t,"dayNames"),monthNamesShort:this._get(t,"monthNamesShort"),monthNames:this._get(t,"monthNames")}},_formatDate:function(t,e,i,n){e||(t.currentDay=t.selectedDay,t.currentMonth=t.selectedMonth,t.currentYear=t.selectedYear);var s=e?"object"==typeof e?e:this._daylightSavingAdjust(new Date(n,i,e)):this._daylightSavingAdjust(new Date(t.currentYear,t.currentMonth,t.currentDay));return this.formatDate(this._get(t,"dateFormat"),s,this._getFormatConfig(t))}}),t.fn.datepicker=function(e){if(!this.length)return this;t.datepicker.initialized||(t(document).mousedown(t.datepicker._checkExternalClick),t.datepicker.initialized=!0),0===t("#"+t.datepicker._mainDivId).length&&t("body").append(t.datepicker.dpDiv);var i=Array.prototype.slice.call(arguments,1);return"string"!=typeof e||"isDisabled"!==e&&"getDate"!==e&&"widget"!==e?"option"===e&&2===arguments.length&&"string"==typeof arguments[1]?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i)):this.each(function(){"string"==typeof e?t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this].concat(i)):t.datepicker._attachDatepicker(this,e)}):t.datepicker["_"+e+"Datepicker"].apply(t.datepicker,[this[0]].concat(i))},t.datepicker=new s,t.datepicker.initialized=!1,t.datepicker.uuid=(new Date).getTime(),t.datepicker.version="1.11.4",t.datepicker,t.widget("ui.draggable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"drag",options:{addClasses:!0,appendTo:"parent",axis:!1,connectToSortable:!1,containment:!1,cursor:"auto",cursorAt:!1,grid:!1,handle:!1,helper:"original",iframeFix:!1,opacity:!1,refreshPositions:!1,revert:!1,revertDuration:500,scope:"default",scroll:!0,scrollSensitivity:20,scrollSpeed:20,snap:!1,snapMode:"both",snapTolerance:20,stack:!1,zIndex:!1,drag:null,start:null,stop:null},_create:function(){"original"===this.options.helper&&this._setPositionRelative(),this.options.addClasses&&this.element.addClass("ui-draggable"),this.options.disabled&&this.element.addClass("ui-draggable-disabled"),this._setHandleClassName(),this._mouseInit()},_setOption:function(t,e){this._super(t,e),"handle"===t&&(this._removeHandleClassName(),this._setHandleClassName())},_destroy:function(){return(this.helper||this.element).is(".ui-draggable-dragging")?void(this.destroyOnClear=!0):(this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"),this._removeHandleClassName(),void this._mouseDestroy())},_mouseCapture:function(e){var i=this.options;return this._blurActiveElement(e),!(this.helper||i.disabled||t(e.target).closest(".ui-resizable-handle").length>0)&&(this.handle=this._getHandle(e),!!this.handle&&(this._blockFrames(i.iframeFix===!0?"iframe":i.iframeFix),!0))},_blockFrames:function(e){this.iframeBlocks=this.document.find(e).map(function(){var e=t(this);return t("<div>").css("position","absolute").appendTo(e.parent()).outerWidth(e.outerWidth()).outerHeight(e.outerHeight()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_blurActiveElement:function(e){var i=this.document[0];if(this.handleElement.is(e.target))try{i.activeElement&&"body"!==i.activeElement.nodeName.toLowerCase()&&t(i.activeElement).blur()}catch(n){}},_mouseStart:function(e){var i=this.options;return this.helper=this._createHelper(e),this.helper.addClass("ui-draggable-dragging"),this._cacheHelperProportions(),t.ui.ddmanager&&(t.ui.ddmanager.current=this),this._cacheMargins(),this.cssPosition=this.helper.css("position"),this.scrollParent=this.helper.scrollParent(!0),this.offsetParent=this.helper.offsetParent(),this.hasFixedAncestor=this.helper.parents().filter(function(){return"fixed"===t(this).css("position")}).length>0,this.positionAbs=this.element.offset(),this._refreshOffsets(e),this.originalPosition=this.position=this._generatePosition(e,!1),this.originalPageX=e.pageX,this.originalPageY=e.pageY,i.cursorAt&&this._adjustOffsetFromHelper(i.cursorAt),this._setContainment(),this._trigger("start",e)===!1?(this._clear(),!1):(this._cacheHelperProportions(),t.ui.ddmanager&&!i.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this._normalizeRightBottom(),this._mouseDrag(e,!0),t.ui.ddmanager&&t.ui.ddmanager.dragStart(this,e),!0)},_refreshOffsets:function(t){this.offset={top:this.positionAbs.top-this.margins.top,left:this.positionAbs.left-this.margins.left,scroll:!1,parent:this._getParentOffset(),relative:this._getRelativeOffset()},this.offset.click={left:t.pageX-this.offset.left,top:t.pageY-this.offset.top}},_mouseDrag:function(e,i){if(this.hasFixedAncestor&&(this.offset.parent=this._getParentOffset()),this.position=this._generatePosition(e,!0),this.positionAbs=this._convertPositionTo("absolute"),!i){var n=this._uiHash();if(this._trigger("drag",e,n)===!1)return this._mouseUp({}),!1;this.position=n.position}return this.helper[0].style.left=this.position.left+"px",this.helper[0].style.top=this.position.top+"px",t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),!1},_mouseStop:function(e){var i=this,n=!1;return t.ui.ddmanager&&!this.options.dropBehaviour&&(n=t.ui.ddmanager.drop(this,e)),this.dropped&&(n=this.dropped,this.dropped=!1),"invalid"===this.options.revert&&!n||"valid"===this.options.revert&&n||this.options.revert===!0||t.isFunction(this.options.revert)&&this.options.revert.call(this.element,n)?t(this.helper).animate(this.originalPosition,parseInt(this.options.revertDuration,10),function(){i._trigger("stop",e)!==!1&&i._clear()}):this._trigger("stop",e)!==!1&&this._clear(),!1},_mouseUp:function(e){return this._unblockFrames(),t.ui.ddmanager&&t.ui.ddmanager.dragStop(this,e),this.handleElement.is(e.target)&&this.element.focus(),t.ui.mouse.prototype._mouseUp.call(this,e)},cancel:function(){return this.helper.is(".ui-draggable-dragging")?this._mouseUp({}):this._clear(),this},_getHandle:function(e){return!this.options.handle||!!t(e.target).closest(this.element.find(this.options.handle)).length},_setHandleClassName:function(){this.handleElement=this.options.handle?this.element.find(this.options.handle):this.element,this.handleElement.addClass("ui-draggable-handle")},_removeHandleClassName:function(){this.handleElement.removeClass("ui-draggable-handle")},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper),s=n?t(i.helper.apply(this.element[0],[e])):"clone"===i.helper?this.element.clone().removeAttr("id"):this.element;return s.parents("body").length||s.appendTo("parent"===i.appendTo?this.element[0].parentNode:i.appendTo),n&&s[0]===this.element[0]&&this._setPositionRelative(),s[0]===this.element[0]||/(fixed|absolute)/.test(s.css("position"))||s.css("position","absolute"),s},_setPositionRelative:function(){/^(?:r|a|f)/.test(this.element.css("position"))||(this.element[0].style.position="relative")},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_isRootNode:function(t){return/(html|body)/i.test(t.tagName)||t===this.document[0]},_getParentOffset:function(){var e=this.offsetParent.offset(),i=this.document[0];return"absolute"===this.cssPosition&&this.scrollParent[0]!==i&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),this._isRootNode(this.offsetParent[0])&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"!==this.cssPosition)return{top:0,left:0};var t=this.element.position(),e=this._isRootNode(this.scrollParent[0]);return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+(e?0:this.scrollParent.scrollTop()),left:t.left-(parseInt(this.helper.css("left"),10)||0)+(e?0:this.scrollParent.scrollLeft())}},_cacheMargins:function(){this.margins={left:parseInt(this.element.css("marginLeft"),10)||0,top:parseInt(this.element.css("marginTop"),10)||0,right:parseInt(this.element.css("marginRight"),10)||0,bottom:parseInt(this.element.css("marginBottom"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options,o=this.document[0];return this.relativeContainer=null,s.containment?"window"===s.containment?void(this.containment=[t(window).scrollLeft()-this.offset.relative.left-this.offset.parent.left,t(window).scrollTop()-this.offset.relative.top-this.offset.parent.top,t(window).scrollLeft()+t(window).width()-this.helperProportions.width-this.margins.left,t(window).scrollTop()+(t(window).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):"document"===s.containment?void(this.containment=[0,0,t(o).width()-this.helperProportions.width-this.margins.left,(t(o).height()||o.body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]):s.containment.constructor===Array?void(this.containment=s.containment):("parent"===s.containment&&(s.containment=this.helper[0].parentNode),i=t(s.containment),n=i[0],void(n&&(e=/(scroll|auto)/.test(i.css("overflow")),this.containment=[(parseInt(i.css("borderLeftWidth"),10)||0)+(parseInt(i.css("paddingLeft"),10)||0),(parseInt(i.css("borderTopWidth"),10)||0)+(parseInt(i.css("paddingTop"),10)||0),(e?Math.max(n.scrollWidth,n.offsetWidth):n.offsetWidth)-(parseInt(i.css("borderRightWidth"),10)||0)-(parseInt(i.css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left-this.margins.right,(e?Math.max(n.scrollHeight,n.offsetHeight):n.offsetHeight)-(parseInt(i.css("borderBottomWidth"),10)||0)-(parseInt(i.css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top-this.margins.bottom],this.relativeContainer=i))):void(this.containment=null)},_convertPositionTo:function(t,e){e||(e=this.position);var i="absolute"===t?1:-1,n=this._isRootNode(this.scrollParent[0]);return{top:e.top+this.offset.relative.top*i+this.offset.parent.top*i-("fixed"===this.cssPosition?-this.offset.scroll.top:n?0:this.offset.scroll.top)*i,left:e.left+this.offset.relative.left*i+this.offset.parent.left*i-("fixed"===this.cssPosition?-this.offset.scroll.left:n?0:this.offset.scroll.left)*i}},_generatePosition:function(t,e){var i,n,s,o,a=this.options,r=this._isRootNode(this.scrollParent[0]),l=t.pageX,h=t.pageY;return r&&this.offset.scroll||(this.offset.scroll={top:this.scrollParent.scrollTop(),left:this.scrollParent.scrollLeft()}),e&&(this.containment&&(this.relativeContainer?(n=this.relativeContainer.offset(),i=[this.containment[0]+n.left,this.containment[1]+n.top,this.containment[2]+n.left,this.containment[3]+n.top]):i=this.containment,t.pageX-this.offset.click.left<i[0]&&(l=i[0]+this.offset.click.left),t.pageY-this.offset.click.top<i[1]&&(h=i[1]+this.offset.click.top),t.pageX-this.offset.click.left>i[2]&&(l=i[2]+this.offset.click.left),t.pageY-this.offset.click.top>i[3]&&(h=i[3]+this.offset.click.top)),a.grid&&(s=a.grid[1]?this.originalPageY+Math.round((h-this.originalPageY)/a.grid[1])*a.grid[1]:this.originalPageY,h=i?s-this.offset.click.top>=i[1]||s-this.offset.click.top>i[3]?s:s-this.offset.click.top>=i[1]?s-a.grid[1]:s+a.grid[1]:s,o=a.grid[0]?this.originalPageX+Math.round((l-this.originalPageX)/a.grid[0])*a.grid[0]:this.originalPageX,l=i?o-this.offset.click.left>=i[0]||o-this.offset.click.left>i[2]?o:o-this.offset.click.left>=i[0]?o-a.grid[0]:o+a.grid[0]:o),"y"===a.axis&&(l=this.originalPageX),"x"===a.axis&&(h=this.originalPageY)),{top:h-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.offset.scroll.top:r?0:this.offset.scroll.top),left:l-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.offset.scroll.left:r?0:this.offset.scroll.left)}},_clear:function(){this.helper.removeClass("ui-draggable-dragging"),this.helper[0]===this.element[0]||this.cancelHelperRemoval||this.helper.remove(),this.helper=null,this.cancelHelperRemoval=!1,this.destroyOnClear&&this.destroy()},_normalizeRightBottom:function(){"y"!==this.options.axis&&"auto"!==this.helper.css("right")&&(this.helper.width(this.helper.width()),this.helper.css("right","auto")),"x"!==this.options.axis&&"auto"!==this.helper.css("bottom")&&(this.helper.height(this.helper.height()),this.helper.css("bottom","auto"))},_trigger:function(e,i,n){return n=n||this._uiHash(),t.ui.plugin.call(this,e,[i,n,this],!0),/^(drag|start|stop)/.test(e)&&(this.positionAbs=this._convertPositionTo("absolute"),n.offset=this.positionAbs),t.Widget.prototype._trigger.call(this,e,i,n)},plugins:{},_uiHash:function(){return{helper:this.helper,position:this.position,originalPosition:this.originalPosition,offset:this.positionAbs}}}),t.ui.plugin.add("draggable","connectToSortable",{start:function(e,i,n){var s=t.extend({},i,{item:n.element});n.sortables=[],t(n.options.connectToSortable).each(function(){var i=t(this).sortable("instance");i&&!i.options.disabled&&(n.sortables.push(i),i.refreshPositions(),i._trigger("activate",e,s))})},stop:function(e,i,n){var s=t.extend({},i,{item:n.element});n.cancelHelperRemoval=!1,t.each(n.sortables,function(){var t=this;t.isOver?(t.isOver=0,n.cancelHelperRemoval=!0,t.cancelHelperRemoval=!1,t._storedCSS={position:t.placeholder.css("position"),top:t.placeholder.css("top"),left:t.placeholder.css("left")},t._mouseStop(e),t.options.helper=t.options._helper):(t.cancelHelperRemoval=!0,t._trigger("deactivate",e,s))})},drag:function(e,i,n){t.each(n.sortables,function(){var s=!1,o=this;o.positionAbs=n.positionAbs,o.helperProportions=n.helperProportions,o.offset.click=n.offset.click,o._intersectsWith(o.containerCache)&&(s=!0,t.each(n.sortables,function(){return this.positionAbs=n.positionAbs,this.helperProportions=n.helperProportions,this.offset.click=n.offset.click,this!==o&&this._intersectsWith(this.containerCache)&&t.contains(o.element[0],this.element[0])&&(s=!1),s})),s?(o.isOver||(o.isOver=1,n._parent=i.helper.parent(),o.currentItem=i.helper.appendTo(o.element).data("ui-sortable-item",!0),o.options._helper=o.options.helper,o.options.helper=function(){return i.helper[0]},e.target=o.currentItem[0],o._mouseCapture(e,!0),o._mouseStart(e,!0,!0),o.offset.click.top=n.offset.click.top,o.offset.click.left=n.offset.click.left,o.offset.parent.left-=n.offset.parent.left-o.offset.parent.left,o.offset.parent.top-=n.offset.parent.top-o.offset.parent.top,n._trigger("toSortable",e),n.dropped=o.element,t.each(n.sortables,function(){this.refreshPositions()}),n.currentItem=n.element,o.fromOutside=n),o.currentItem&&(o._mouseDrag(e),i.position=o.position)):o.isOver&&(o.isOver=0,o.cancelHelperRemoval=!0,o.options._revert=o.options.revert,o.options.revert=!1,o._trigger("out",e,o._uiHash(o)),o._mouseStop(e,!0),o.options.revert=o.options._revert,o.options.helper=o.options._helper,o.placeholder&&o.placeholder.remove(),i.helper.appendTo(n._parent),n._refreshOffsets(e),i.position=n._generatePosition(e,!0),n._trigger("fromSortable",e),n.dropped=!1,t.each(n.sortables,function(){this.refreshPositions()}))})}}),t.ui.plugin.add("draggable","cursor",{start:function(e,i,n){var s=t("body"),o=n.options;s.css("cursor")&&(o._cursor=s.css("cursor")),s.css("cursor",o.cursor)},stop:function(e,i,n){var s=n.options;s._cursor&&t("body").css("cursor",s._cursor)}}),t.ui.plugin.add("draggable","opacity",{start:function(e,i,n){var s=t(i.helper),o=n.options;s.css("opacity")&&(o._opacity=s.css("opacity")),s.css("opacity",o.opacity)},stop:function(e,i,n){var s=n.options;s._opacity&&t(i.helper).css("opacity",s._opacity)}}),t.ui.plugin.add("draggable","scroll",{start:function(t,e,i){i.scrollParentNotHidden||(i.scrollParentNotHidden=i.helper.scrollParent(!1)),i.scrollParentNotHidden[0]!==i.document[0]&&"HTML"!==i.scrollParentNotHidden[0].tagName&&(i.overflowOffset=i.scrollParentNotHidden.offset())},drag:function(e,i,n){var s=n.options,o=!1,a=n.scrollParentNotHidden[0],r=n.document[0];a!==r&&"HTML"!==a.tagName?(s.axis&&"x"===s.axis||(n.overflowOffset.top+a.offsetHeight-e.pageY<s.scrollSensitivity?a.scrollTop=o=a.scrollTop+s.scrollSpeed:e.pageY-n.overflowOffset.top<s.scrollSensitivity&&(a.scrollTop=o=a.scrollTop-s.scrollSpeed)),s.axis&&"y"===s.axis||(n.overflowOffset.left+a.offsetWidth-e.pageX<s.scrollSensitivity?a.scrollLeft=o=a.scrollLeft+s.scrollSpeed:e.pageX-n.overflowOffset.left<s.scrollSensitivity&&(a.scrollLeft=o=a.scrollLeft-s.scrollSpeed))):(s.axis&&"x"===s.axis||(e.pageY-t(r).scrollTop()<s.scrollSensitivity?o=t(r).scrollTop(t(r).scrollTop()-s.scrollSpeed):t(window).height()-(e.pageY-t(r).scrollTop())<s.scrollSensitivity&&(o=t(r).scrollTop(t(r).scrollTop()+s.scrollSpeed))),s.axis&&"y"===s.axis||(e.pageX-t(r).scrollLeft()<s.scrollSensitivity?o=t(r).scrollLeft(t(r).scrollLeft()-s.scrollSpeed):t(window).width()-(e.pageX-t(r).scrollLeft())<s.scrollSensitivity&&(o=t(r).scrollLeft(t(r).scrollLeft()+s.scrollSpeed)))),
o!==!1&&t.ui.ddmanager&&!s.dropBehaviour&&t.ui.ddmanager.prepareOffsets(n,e)}}),t.ui.plugin.add("draggable","snap",{start:function(e,i,n){var s=n.options;n.snapElements=[],t(s.snap.constructor!==String?s.snap.items||":data(ui-draggable)":s.snap).each(function(){var e=t(this),i=e.offset();this!==n.element[0]&&n.snapElements.push({item:this,width:e.outerWidth(),height:e.outerHeight(),top:i.top,left:i.left})})},drag:function(e,i,n){var s,o,a,r,l,h,c,u,d,f,p=n.options,m=p.snapTolerance,g=i.offset.left,v=g+n.helperProportions.width,b=i.offset.top,y=b+n.helperProportions.height;for(d=n.snapElements.length-1;d>=0;d--)l=n.snapElements[d].left-n.margins.left,h=l+n.snapElements[d].width,c=n.snapElements[d].top-n.margins.top,u=c+n.snapElements[d].height,l-m>v||g>h+m||c-m>y||b>u+m||!t.contains(n.snapElements[d].item.ownerDocument,n.snapElements[d].item)?(n.snapElements[d].snapping&&n.options.snap.release&&n.options.snap.release.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=!1):("inner"!==p.snapMode&&(s=m>=Math.abs(c-y),o=m>=Math.abs(u-b),a=m>=Math.abs(l-v),r=m>=Math.abs(h-g),s&&(i.position.top=n._convertPositionTo("relative",{top:c-n.helperProportions.height,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:u,left:0}).top),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l-n.helperProportions.width}).left),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h}).left)),f=s||o||a||r,"outer"!==p.snapMode&&(s=m>=Math.abs(c-b),o=m>=Math.abs(u-y),a=m>=Math.abs(l-g),r=m>=Math.abs(h-v),s&&(i.position.top=n._convertPositionTo("relative",{top:c,left:0}).top),o&&(i.position.top=n._convertPositionTo("relative",{top:u-n.helperProportions.height,left:0}).top),a&&(i.position.left=n._convertPositionTo("relative",{top:0,left:l}).left),r&&(i.position.left=n._convertPositionTo("relative",{top:0,left:h-n.helperProportions.width}).left)),!n.snapElements[d].snapping&&(s||o||a||r||f)&&n.options.snap.snap&&n.options.snap.snap.call(n.element,e,t.extend(n._uiHash(),{snapItem:n.snapElements[d].item})),n.snapElements[d].snapping=s||o||a||r||f)}}),t.ui.plugin.add("draggable","stack",{start:function(e,i,n){var s,o=n.options,a=t.makeArray(t(o.stack)).sort(function(e,i){return(parseInt(t(e).css("zIndex"),10)||0)-(parseInt(t(i).css("zIndex"),10)||0)});a.length&&(s=parseInt(t(a[0]).css("zIndex"),10)||0,t(a).each(function(e){t(this).css("zIndex",s+e)}),this.css("zIndex",s+a.length))}}),t.ui.plugin.add("draggable","zIndex",{start:function(e,i,n){var s=t(i.helper),o=n.options;s.css("zIndex")&&(o._zIndex=s.css("zIndex")),s.css("zIndex",o.zIndex)},stop:function(e,i,n){var s=n.options;s._zIndex&&t(i.helper).css("zIndex",s._zIndex)}}),t.ui.draggable,t.widget("ui.resizable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"resize",options:{alsoResize:!1,animate:!1,animateDuration:"slow",animateEasing:"swing",aspectRatio:!1,autoHide:!1,containment:!1,ghost:!1,grid:!1,handles:"e,s,se",helper:!1,maxHeight:null,maxWidth:null,minHeight:10,minWidth:10,zIndex:90,resize:null,start:null,stop:null},_num:function(t){return parseInt(t,10)||0},_isNumber:function(t){return!isNaN(parseInt(t,10))},_hasScroll:function(e,i){if("hidden"===t(e).css("overflow"))return!1;var n=i&&"left"===i?"scrollLeft":"scrollTop",s=!1;return e[n]>0||(e[n]=1,s=e[n]>0,e[n]=0,s)},_create:function(){var e,i,n,s,o,a=this,r=this.options;if(this.element.addClass("ui-resizable"),t.extend(this,{_aspectRatio:!!r.aspectRatio,aspectRatio:r.aspectRatio,originalElement:this.element,_proportionallyResizeElements:[],_helper:r.helper||r.ghost||r.animate?r.helper||"ui-resizable-helper":null}),this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i)&&(this.element.wrap(t("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({position:this.element.css("position"),width:this.element.outerWidth(),height:this.element.outerHeight(),top:this.element.css("top"),left:this.element.css("left")})),this.element=this.element.parent().data("ui-resizable",this.element.resizable("instance")),this.elementIsWrapper=!0,this.element.css({marginLeft:this.originalElement.css("marginLeft"),marginTop:this.originalElement.css("marginTop"),marginRight:this.originalElement.css("marginRight"),marginBottom:this.originalElement.css("marginBottom")}),this.originalElement.css({marginLeft:0,marginTop:0,marginRight:0,marginBottom:0}),this.originalResizeStyle=this.originalElement.css("resize"),this.originalElement.css("resize","none"),this._proportionallyResizeElements.push(this.originalElement.css({position:"static",zoom:1,display:"block"})),this.originalElement.css({margin:this.originalElement.css("margin")}),this._proportionallyResize()),this.handles=r.handles||(t(".ui-resizable-handle",this.element).length?{n:".ui-resizable-n",e:".ui-resizable-e",s:".ui-resizable-s",w:".ui-resizable-w",se:".ui-resizable-se",sw:".ui-resizable-sw",ne:".ui-resizable-ne",nw:".ui-resizable-nw"}:"e,s,se"),this._handles=t(),this.handles.constructor===String)for("all"===this.handles&&(this.handles="n,e,s,w,se,sw,ne,nw"),e=this.handles.split(","),this.handles={},i=0;e.length>i;i++)n=t.trim(e[i]),o="ui-resizable-"+n,s=t("<div class='ui-resizable-handle "+o+"'></div>"),s.css({zIndex:r.zIndex}),"se"===n&&s.addClass("ui-icon ui-icon-gripsmall-diagonal-se"),this.handles[n]=".ui-resizable-"+n,this.element.append(s);this._renderAxis=function(e){var i,n,s,o;e=e||this.element;for(i in this.handles)this.handles[i].constructor===String?this.handles[i]=this.element.children(this.handles[i]).first().show():(this.handles[i].jquery||this.handles[i].nodeType)&&(this.handles[i]=t(this.handles[i]),this._on(this.handles[i],{mousedown:a._mouseDown})),this.elementIsWrapper&&this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i)&&(n=t(this.handles[i],this.element),o=/sw|ne|nw|se|n|s/.test(i)?n.outerHeight():n.outerWidth(),s=["padding",/ne|nw|n/.test(i)?"Top":/se|sw|s/.test(i)?"Bottom":/^e$/.test(i)?"Right":"Left"].join(""),e.css(s,o),this._proportionallyResize()),this._handles=this._handles.add(this.handles[i])},this._renderAxis(this.element),this._handles=this._handles.add(this.element.find(".ui-resizable-handle")),this._handles.disableSelection(),this._handles.mouseover(function(){a.resizing||(this.className&&(s=this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)),a.axis=s&&s[1]?s[1]:"se")}),r.autoHide&&(this._handles.hide(),t(this.element).addClass("ui-resizable-autohide").mouseenter(function(){r.disabled||(t(this).removeClass("ui-resizable-autohide"),a._handles.show())}).mouseleave(function(){r.disabled||a.resizing||(t(this).addClass("ui-resizable-autohide"),a._handles.hide())})),this._mouseInit()},_destroy:function(){this._mouseDestroy();var e,i=function(e){t(e).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()};return this.elementIsWrapper&&(i(this.element),e=this.element,this.originalElement.css({position:e.css("position"),width:e.outerWidth(),height:e.outerHeight(),top:e.css("top"),left:e.css("left")}).insertAfter(e),e.remove()),this.originalElement.css("resize",this.originalResizeStyle),i(this.originalElement),this},_mouseCapture:function(e){var i,n,s=!1;for(i in this.handles)n=t(this.handles[i])[0],(n===e.target||t.contains(n,e.target))&&(s=!0);return!this.options.disabled&&s},_mouseStart:function(e){var i,n,s,o=this.options,a=this.element;return this.resizing=!0,this._renderProxy(),i=this._num(this.helper.css("left")),n=this._num(this.helper.css("top")),o.containment&&(i+=t(o.containment).scrollLeft()||0,n+=t(o.containment).scrollTop()||0),this.offset=this.helper.offset(),this.position={left:i,top:n},this.size=this._helper?{width:this.helper.width(),height:this.helper.height()}:{width:a.width(),height:a.height()},this.originalSize=this._helper?{width:a.outerWidth(),height:a.outerHeight()}:{width:a.width(),height:a.height()},this.sizeDiff={width:a.outerWidth()-a.width(),height:a.outerHeight()-a.height()},this.originalPosition={left:i,top:n},this.originalMousePosition={left:e.pageX,top:e.pageY},this.aspectRatio="number"==typeof o.aspectRatio?o.aspectRatio:this.originalSize.width/this.originalSize.height||1,s=t(".ui-resizable-"+this.axis).css("cursor"),t("body").css("cursor","auto"===s?this.axis+"-resize":s),a.addClass("ui-resizable-resizing"),this._propagate("start",e),!0},_mouseDrag:function(e){var i,n,s=this.originalMousePosition,o=this.axis,a=e.pageX-s.left||0,r=e.pageY-s.top||0,l=this._change[o];return this._updatePrevProperties(),!!l&&(i=l.apply(this,[e,a,r]),this._updateVirtualBoundaries(e.shiftKey),(this._aspectRatio||e.shiftKey)&&(i=this._updateRatio(i,e)),i=this._respectSize(i,e),this._updateCache(i),this._propagate("resize",e),n=this._applyChanges(),!this._helper&&this._proportionallyResizeElements.length&&this._proportionallyResize(),t.isEmptyObject(n)||(this._updatePrevProperties(),this._trigger("resize",e,this.ui()),this._applyChanges()),!1)},_mouseStop:function(e){this.resizing=!1;var i,n,s,o,a,r,l,h=this.options,c=this;return this._helper&&(i=this._proportionallyResizeElements,n=i.length&&/textarea/i.test(i[0].nodeName),s=n&&this._hasScroll(i[0],"left")?0:c.sizeDiff.height,o=n?0:c.sizeDiff.width,a={width:c.helper.width()-o,height:c.helper.height()-s},r=parseInt(c.element.css("left"),10)+(c.position.left-c.originalPosition.left)||null,l=parseInt(c.element.css("top"),10)+(c.position.top-c.originalPosition.top)||null,h.animate||this.element.css(t.extend(a,{top:l,left:r})),c.helper.height(c.size.height),c.helper.width(c.size.width),this._helper&&!h.animate&&this._proportionallyResize()),t("body").css("cursor","auto"),this.element.removeClass("ui-resizable-resizing"),this._propagate("stop",e),this._helper&&this.helper.remove(),!1},_updatePrevProperties:function(){this.prevPosition={top:this.position.top,left:this.position.left},this.prevSize={width:this.size.width,height:this.size.height}},_applyChanges:function(){var t={};return this.position.top!==this.prevPosition.top&&(t.top=this.position.top+"px"),this.position.left!==this.prevPosition.left&&(t.left=this.position.left+"px"),this.size.width!==this.prevSize.width&&(t.width=this.size.width+"px"),this.size.height!==this.prevSize.height&&(t.height=this.size.height+"px"),this.helper.css(t),t},_updateVirtualBoundaries:function(t){var e,i,n,s,o,a=this.options;o={minWidth:this._isNumber(a.minWidth)?a.minWidth:0,maxWidth:this._isNumber(a.maxWidth)?a.maxWidth:1/0,minHeight:this._isNumber(a.minHeight)?a.minHeight:0,maxHeight:this._isNumber(a.maxHeight)?a.maxHeight:1/0},(this._aspectRatio||t)&&(e=o.minHeight*this.aspectRatio,n=o.minWidth/this.aspectRatio,i=o.maxHeight*this.aspectRatio,s=o.maxWidth/this.aspectRatio,e>o.minWidth&&(o.minWidth=e),n>o.minHeight&&(o.minHeight=n),o.maxWidth>i&&(o.maxWidth=i),o.maxHeight>s&&(o.maxHeight=s)),this._vBoundaries=o},_updateCache:function(t){this.offset=this.helper.offset(),this._isNumber(t.left)&&(this.position.left=t.left),this._isNumber(t.top)&&(this.position.top=t.top),this._isNumber(t.height)&&(this.size.height=t.height),this._isNumber(t.width)&&(this.size.width=t.width)},_updateRatio:function(t){var e=this.position,i=this.size,n=this.axis;return this._isNumber(t.height)?t.width=t.height*this.aspectRatio:this._isNumber(t.width)&&(t.height=t.width/this.aspectRatio),"sw"===n&&(t.left=e.left+(i.width-t.width),t.top=null),"nw"===n&&(t.top=e.top+(i.height-t.height),t.left=e.left+(i.width-t.width)),t},_respectSize:function(t){var e=this._vBoundaries,i=this.axis,n=this._isNumber(t.width)&&e.maxWidth&&e.maxWidth<t.width,s=this._isNumber(t.height)&&e.maxHeight&&e.maxHeight<t.height,o=this._isNumber(t.width)&&e.minWidth&&e.minWidth>t.width,a=this._isNumber(t.height)&&e.minHeight&&e.minHeight>t.height,r=this.originalPosition.left+this.originalSize.width,l=this.position.top+this.size.height,h=/sw|nw|w/.test(i),c=/nw|ne|n/.test(i);return o&&(t.width=e.minWidth),a&&(t.height=e.minHeight),n&&(t.width=e.maxWidth),s&&(t.height=e.maxHeight),o&&h&&(t.left=r-e.minWidth),n&&h&&(t.left=r-e.maxWidth),a&&c&&(t.top=l-e.minHeight),s&&c&&(t.top=l-e.maxHeight),t.width||t.height||t.left||!t.top?t.width||t.height||t.top||!t.left||(t.left=null):t.top=null,t},_getPaddingPlusBorderDimensions:function(t){for(var e=0,i=[],n=[t.css("borderTopWidth"),t.css("borderRightWidth"),t.css("borderBottomWidth"),t.css("borderLeftWidth")],s=[t.css("paddingTop"),t.css("paddingRight"),t.css("paddingBottom"),t.css("paddingLeft")];4>e;e++)i[e]=parseInt(n[e],10)||0,i[e]+=parseInt(s[e],10)||0;return{height:i[0]+i[2],width:i[1]+i[3]}},_proportionallyResize:function(){if(this._proportionallyResizeElements.length)for(var t,e=0,i=this.helper||this.element;this._proportionallyResizeElements.length>e;e++)t=this._proportionallyResizeElements[e],this.outerDimensions||(this.outerDimensions=this._getPaddingPlusBorderDimensions(t)),t.css({height:i.height()-this.outerDimensions.height||0,width:i.width()-this.outerDimensions.width||0})},_renderProxy:function(){var e=this.element,i=this.options;this.elementOffset=e.offset(),this._helper?(this.helper=this.helper||t("<div style='overflow:hidden;'></div>"),this.helper.addClass(this._helper).css({width:this.element.outerWidth()-1,height:this.element.outerHeight()-1,position:"absolute",left:this.elementOffset.left+"px",top:this.elementOffset.top+"px",zIndex:++i.zIndex}),this.helper.appendTo("body").disableSelection()):this.helper=this.element},_change:{e:function(t,e){return{width:this.originalSize.width+e}},w:function(t,e){var i=this.originalSize,n=this.originalPosition;return{left:n.left+e,width:i.width-e}},n:function(t,e,i){var n=this.originalSize,s=this.originalPosition;return{top:s.top+i,height:n.height-i}},s:function(t,e,i){return{height:this.originalSize.height+i}},se:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},sw:function(e,i,n){return t.extend(this._change.s.apply(this,arguments),this._change.w.apply(this,[e,i,n]))},ne:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.e.apply(this,[e,i,n]))},nw:function(e,i,n){return t.extend(this._change.n.apply(this,arguments),this._change.w.apply(this,[e,i,n]))}},_propagate:function(e,i){t.ui.plugin.call(this,e,[i,this.ui()]),"resize"!==e&&this._trigger(e,i,this.ui())},plugins:{},ui:function(){return{originalElement:this.originalElement,element:this.element,helper:this.helper,position:this.position,size:this.size,originalSize:this.originalSize,originalPosition:this.originalPosition}}}),t.ui.plugin.add("resizable","animate",{stop:function(e){var i=t(this).resizable("instance"),n=i.options,s=i._proportionallyResizeElements,o=s.length&&/textarea/i.test(s[0].nodeName),a=o&&i._hasScroll(s[0],"left")?0:i.sizeDiff.height,r=o?0:i.sizeDiff.width,l={width:i.size.width-r,height:i.size.height-a},h=parseInt(i.element.css("left"),10)+(i.position.left-i.originalPosition.left)||null,c=parseInt(i.element.css("top"),10)+(i.position.top-i.originalPosition.top)||null;i.element.animate(t.extend(l,c&&h?{top:c,left:h}:{}),{duration:n.animateDuration,easing:n.animateEasing,step:function(){var n={width:parseInt(i.element.css("width"),10),height:parseInt(i.element.css("height"),10),top:parseInt(i.element.css("top"),10),left:parseInt(i.element.css("left"),10)};s&&s.length&&t(s[0]).css({width:n.width,height:n.height}),i._updateCache(n),i._propagate("resize",e)}})}}),t.ui.plugin.add("resizable","containment",{start:function(){var e,i,n,s,o,a,r,l=t(this).resizable("instance"),h=l.options,c=l.element,u=h.containment,d=u instanceof t?u.get(0):/parent/.test(u)?c.parent().get(0):u;d&&(l.containerElement=t(d),/document/.test(u)||u===document?(l.containerOffset={left:0,top:0},l.containerPosition={left:0,top:0},l.parentData={element:t(document),left:0,top:0,width:t(document).width(),height:t(document).height()||document.body.parentNode.scrollHeight}):(e=t(d),i=[],t(["Top","Right","Left","Bottom"]).each(function(t,n){i[t]=l._num(e.css("padding"+n))}),l.containerOffset=e.offset(),l.containerPosition=e.position(),l.containerSize={height:e.innerHeight()-i[3],width:e.innerWidth()-i[1]},n=l.containerOffset,s=l.containerSize.height,o=l.containerSize.width,a=l._hasScroll(d,"left")?d.scrollWidth:o,r=l._hasScroll(d)?d.scrollHeight:s,l.parentData={element:d,left:n.left,top:n.top,width:a,height:r}))},resize:function(e){var i,n,s,o,a=t(this).resizable("instance"),r=a.options,l=a.containerOffset,h=a.position,c=a._aspectRatio||e.shiftKey,u={top:0,left:0},d=a.containerElement,f=!0;d[0]!==document&&/static/.test(d.css("position"))&&(u=l),h.left<(a._helper?l.left:0)&&(a.size.width=a.size.width+(a._helper?a.position.left-l.left:a.position.left-u.left),c&&(a.size.height=a.size.width/a.aspectRatio,f=!1),a.position.left=r.helper?l.left:0),h.top<(a._helper?l.top:0)&&(a.size.height=a.size.height+(a._helper?a.position.top-l.top:a.position.top),c&&(a.size.width=a.size.height*a.aspectRatio,f=!1),a.position.top=a._helper?l.top:0),s=a.containerElement.get(0)===a.element.parent().get(0),o=/relative|absolute/.test(a.containerElement.css("position")),s&&o?(a.offset.left=a.parentData.left+a.position.left,a.offset.top=a.parentData.top+a.position.top):(a.offset.left=a.element.offset().left,a.offset.top=a.element.offset().top),i=Math.abs(a.sizeDiff.width+(a._helper?a.offset.left-u.left:a.offset.left-l.left)),n=Math.abs(a.sizeDiff.height+(a._helper?a.offset.top-u.top:a.offset.top-l.top)),i+a.size.width>=a.parentData.width&&(a.size.width=a.parentData.width-i,c&&(a.size.height=a.size.width/a.aspectRatio,f=!1)),n+a.size.height>=a.parentData.height&&(a.size.height=a.parentData.height-n,c&&(a.size.width=a.size.height*a.aspectRatio,f=!1)),f||(a.position.left=a.prevPosition.left,a.position.top=a.prevPosition.top,a.size.width=a.prevSize.width,a.size.height=a.prevSize.height)},stop:function(){var e=t(this).resizable("instance"),i=e.options,n=e.containerOffset,s=e.containerPosition,o=e.containerElement,a=t(e.helper),r=a.offset(),l=a.outerWidth()-e.sizeDiff.width,h=a.outerHeight()-e.sizeDiff.height;e._helper&&!i.animate&&/relative/.test(o.css("position"))&&t(this).css({left:r.left-s.left-n.left,width:l,height:h}),e._helper&&!i.animate&&/static/.test(o.css("position"))&&t(this).css({left:r.left-s.left-n.left,width:l,height:h})}}),t.ui.plugin.add("resizable","alsoResize",{start:function(){var e=t(this).resizable("instance"),i=e.options;t(i.alsoResize).each(function(){var e=t(this);e.data("ui-resizable-alsoresize",{width:parseInt(e.width(),10),height:parseInt(e.height(),10),left:parseInt(e.css("left"),10),top:parseInt(e.css("top"),10)})})},resize:function(e,i){var n=t(this).resizable("instance"),s=n.options,o=n.originalSize,a=n.originalPosition,r={height:n.size.height-o.height||0,width:n.size.width-o.width||0,top:n.position.top-a.top||0,left:n.position.left-a.left||0};t(s.alsoResize).each(function(){var e=t(this),n=t(this).data("ui-resizable-alsoresize"),s={},o=e.parents(i.originalElement[0]).length?["width","height"]:["width","height","top","left"];t.each(o,function(t,e){var i=(n[e]||0)+(r[e]||0);i&&i>=0&&(s[e]=i||null)}),e.css(s)})},stop:function(){t(this).removeData("resizable-alsoresize")}}),t.ui.plugin.add("resizable","ghost",{start:function(){var e=t(this).resizable("instance"),i=e.options,n=e.size;e.ghost=e.originalElement.clone(),e.ghost.css({opacity:.25,display:"block",position:"relative",height:n.height,width:n.width,margin:0,left:0,top:0}).addClass("ui-resizable-ghost").addClass("string"==typeof i.ghost?i.ghost:""),e.ghost.appendTo(e.helper)},resize:function(){var e=t(this).resizable("instance");e.ghost&&e.ghost.css({position:"relative",height:e.size.height,width:e.size.width})},stop:function(){var e=t(this).resizable("instance");e.ghost&&e.helper&&e.helper.get(0).removeChild(e.ghost.get(0))}}),t.ui.plugin.add("resizable","grid",{resize:function(){var e,i=t(this).resizable("instance"),n=i.options,s=i.size,o=i.originalSize,a=i.originalPosition,r=i.axis,l="number"==typeof n.grid?[n.grid,n.grid]:n.grid,h=l[0]||1,c=l[1]||1,u=Math.round((s.width-o.width)/h)*h,d=Math.round((s.height-o.height)/c)*c,f=o.width+u,p=o.height+d,m=n.maxWidth&&f>n.maxWidth,g=n.maxHeight&&p>n.maxHeight,v=n.minWidth&&n.minWidth>f,b=n.minHeight&&n.minHeight>p;n.grid=l,v&&(f+=h),b&&(p+=c),m&&(f-=h),g&&(p-=c),/^(se|s|e)$/.test(r)?(i.size.width=f,i.size.height=p):/^(ne)$/.test(r)?(i.size.width=f,i.size.height=p,i.position.top=a.top-d):/^(sw)$/.test(r)?(i.size.width=f,i.size.height=p,i.position.left=a.left-u):((0>=p-c||0>=f-h)&&(e=i._getPaddingPlusBorderDimensions(this)),p-c>0?(i.size.height=p,i.position.top=a.top-d):(p=c-e.height,i.size.height=p,i.position.top=a.top+o.height-p),f-h>0?(i.size.width=f,i.position.left=a.left-u):(f=h-e.width,i.size.width=f,i.position.left=a.left+o.width-f))}}),t.ui.resizable,t.widget("ui.dialog",{version:"1.11.4",options:{appendTo:"body",autoOpen:!0,buttons:[],closeOnEscape:!0,closeText:"Close",dialogClass:"",draggable:!0,hide:null,height:"auto",maxHeight:null,maxWidth:null,minHeight:150,minWidth:150,modal:!1,position:{my:"center",at:"center",of:window,collision:"fit",using:function(e){var i=t(this).css(e).offset().top;0>i&&t(this).css("top",e.top-i)}},resizable:!0,show:null,title:null,width:300,beforeClose:null,close:null,drag:null,dragStart:null,dragStop:null,focus:null,open:null,resize:null,resizeStart:null,resizeStop:null},sizeRelatedOptions:{buttons:!0,height:!0,maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0,width:!0},resizableRelatedOptions:{maxHeight:!0,maxWidth:!0,minHeight:!0,minWidth:!0},_create:function(){this.originalCss={display:this.element[0].style.display,width:this.element[0].style.width,minHeight:this.element[0].style.minHeight,maxHeight:this.element[0].style.maxHeight,height:this.element[0].style.height},this.originalPosition={parent:this.element.parent(),index:this.element.parent().children().index(this.element)},this.originalTitle=this.element.attr("title"),this.options.title=this.options.title||this.originalTitle,this._createWrapper(),this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog),this._createTitlebar(),this._createButtonPane(),this.options.draggable&&t.fn.draggable&&this._makeDraggable(),this.options.resizable&&t.fn.resizable&&this._makeResizable(),this._isOpen=!1,this._trackFocus()},_init:function(){this.options.autoOpen&&this.open()},_appendTo:function(){var e=this.options.appendTo;return e&&(e.jquery||e.nodeType)?t(e):this.document.find(e||"body").eq(0)},_destroy:function(){var t,e=this.originalPosition;this._untrackInstance(),this._destroyOverlay(),this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(),this.uiDialog.stop(!0,!0).remove(),this.originalTitle&&this.element.attr("title",this.originalTitle),t=e.parent.children().eq(e.index),t.length&&t[0]!==this.element[0]?t.before(this.element):e.parent.append(this.element)},widget:function(){return this.uiDialog},disable:t.noop,enable:t.noop,close:function(e){var i,n=this;if(this._isOpen&&this._trigger("beforeClose",e)!==!1){if(this._isOpen=!1,this._focusedElement=null,this._destroyOverlay(),this._untrackInstance(),!this.opener.filter(":focusable").focus().length)try{i=this.document[0].activeElement,i&&"body"!==i.nodeName.toLowerCase()&&t(i).blur()}catch(s){}this._hide(this.uiDialog,this.options.hide,function(){n._trigger("close",e)})}},isOpen:function(){return this._isOpen},moveToTop:function(){this._moveToTop()},_moveToTop:function(e,i){var n=!1,s=this.uiDialog.siblings(".ui-front:visible").map(function(){return+t(this).css("z-index")}).get(),o=Math.max.apply(null,s);return o>=+this.uiDialog.css("z-index")&&(this.uiDialog.css("z-index",o+1),n=!0),n&&!i&&this._trigger("focus",e),n},open:function(){var e=this;return this._isOpen?void(this._moveToTop()&&this._focusTabbable()):(this._isOpen=!0,this.opener=t(this.document[0].activeElement),this._size(),this._position(),this._createOverlay(),this._moveToTop(null,!0),this.overlay&&this.overlay.css("z-index",this.uiDialog.css("z-index")-1),this._show(this.uiDialog,this.options.show,function(){e._focusTabbable(),e._trigger("focus")}),this._makeFocusTarget(),void this._trigger("open"))},_focusTabbable:function(){var t=this._focusedElement;t||(t=this.element.find("[autofocus]")),t.length||(t=this.element.find(":tabbable")),t.length||(t=this.uiDialogButtonPane.find(":tabbable")),t.length||(t=this.uiDialogTitlebarClose.filter(":tabbable")),t.length||(t=this.uiDialog),t.eq(0).focus()},_keepFocus:function(e){function i(){var e=this.document[0].activeElement,i=this.uiDialog[0]===e||t.contains(this.uiDialog[0],e);i||this._focusTabbable()}e.preventDefault(),i.call(this),this._delay(i)},_createWrapper:function(){this.uiDialog=t("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front "+this.options.dialogClass).hide().attr({tabIndex:-1,role:"dialog"}).appendTo(this._appendTo()),this._on(this.uiDialog,{keydown:function(e){if(this.options.closeOnEscape&&!e.isDefaultPrevented()&&e.keyCode&&e.keyCode===t.ui.keyCode.ESCAPE)return e.preventDefault(),void this.close(e);if(e.keyCode===t.ui.keyCode.TAB&&!e.isDefaultPrevented()){var i=this.uiDialog.find(":tabbable"),n=i.filter(":first"),s=i.filter(":last");e.target!==s[0]&&e.target!==this.uiDialog[0]||e.shiftKey?e.target!==n[0]&&e.target!==this.uiDialog[0]||!e.shiftKey||(this._delay(function(){s.focus()}),e.preventDefault()):(this._delay(function(){n.focus()}),e.preventDefault())}},mousedown:function(t){this._moveToTop(t)&&this._focusTabbable()}}),this.element.find("[aria-describedby]").length||this.uiDialog.attr({"aria-describedby":this.element.uniqueId().attr("id")})},_createTitlebar:function(){var e;this.uiDialogTitlebar=t("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog),this._on(this.uiDialogTitlebar,{mousedown:function(e){t(e.target).closest(".ui-dialog-titlebar-close")||this.uiDialog.focus()}}),this.uiDialogTitlebarClose=t("<button type='button'></button>").button({label:this.options.closeText,icons:{primary:"ui-icon-closethick"},text:!1}).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar),this._on(this.uiDialogTitlebarClose,{click:function(t){t.preventDefault(),this.close(t)}}),e=t("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar),this._title(e),this.uiDialog.attr({"aria-labelledby":e.attr("id")})},_title:function(t){this.options.title||t.html("&#160;"),t.text(this.options.title)},_createButtonPane:function(){this.uiDialogButtonPane=t("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"),this.uiButtonSet=t("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane),this._createButtons()},_createButtons:function(){var e=this,i=this.options.buttons;return this.uiDialogButtonPane.remove(),this.uiButtonSet.empty(),t.isEmptyObject(i)||t.isArray(i)&&!i.length?void this.uiDialog.removeClass("ui-dialog-buttons"):(t.each(i,function(i,n){var s,o;n=t.isFunction(n)?{click:n,text:i}:n,n=t.extend({type:"button"},n),s=n.click,n.click=function(){s.apply(e.element[0],arguments)},o={icons:n.icons,text:n.showText},delete n.icons,delete n.showText,t("<button></button>",n).button(o).appendTo(e.uiButtonSet)}),this.uiDialog.addClass("ui-dialog-buttons"),void this.uiDialogButtonPane.appendTo(this.uiDialog))},_makeDraggable:function(){function e(t){return{position:t.position,offset:t.offset}}var i=this,n=this.options;this.uiDialog.draggable({cancel:".ui-dialog-content, .ui-dialog-titlebar-close",handle:".ui-dialog-titlebar",containment:"document",start:function(n,s){t(this).addClass("ui-dialog-dragging"),i._blockFrames(),i._trigger("dragStart",n,e(s))},drag:function(t,n){i._trigger("drag",t,e(n))},stop:function(s,o){var a=o.offset.left-i.document.scrollLeft(),r=o.offset.top-i.document.scrollTop();n.position={my:"left top",at:"left"+(a>=0?"+":"")+a+" top"+(r>=0?"+":"")+r,of:i.window},t(this).removeClass("ui-dialog-dragging"),i._unblockFrames(),i._trigger("dragStop",s,e(o))}})},_makeResizable:function(){function e(t){return{originalPosition:t.originalPosition,originalSize:t.originalSize,position:t.position,size:t.size}}var i=this,n=this.options,s=n.resizable,o=this.uiDialog.css("position"),a="string"==typeof s?s:"n,e,s,w,se,sw,ne,nw";this.uiDialog.resizable({cancel:".ui-dialog-content",containment:"document",alsoResize:this.element,maxWidth:n.maxWidth,maxHeight:n.maxHeight,minWidth:n.minWidth,minHeight:this._minHeight(),handles:a,start:function(n,s){t(this).addClass("ui-dialog-resizing"),i._blockFrames(),i._trigger("resizeStart",n,e(s))},resize:function(t,n){i._trigger("resize",t,e(n))},stop:function(s,o){var a=i.uiDialog.offset(),r=a.left-i.document.scrollLeft(),l=a.top-i.document.scrollTop();n.height=i.uiDialog.height(),n.width=i.uiDialog.width(),n.position={my:"left top",at:"left"+(r>=0?"+":"")+r+" top"+(l>=0?"+":"")+l,of:i.window},t(this).removeClass("ui-dialog-resizing"),i._unblockFrames(),i._trigger("resizeStop",s,e(o))}}).css("position",o)},_trackFocus:function(){this._on(this.widget(),{focusin:function(e){this._makeFocusTarget(),this._focusedElement=t(e.target)}})},_makeFocusTarget:function(){this._untrackInstance(),this._trackingInstances().unshift(this)},_untrackInstance:function(){var e=this._trackingInstances(),i=t.inArray(this,e);-1!==i&&e.splice(i,1)},_trackingInstances:function(){var t=this.document.data("ui-dialog-instances");return t||(t=[],this.document.data("ui-dialog-instances",t)),t},_minHeight:function(){var t=this.options;return"auto"===t.height?t.minHeight:Math.min(t.minHeight,t.height)},_position:function(){var t=this.uiDialog.is(":visible");t||this.uiDialog.show(),this.uiDialog.position(this.options.position),t||this.uiDialog.hide()},_setOptions:function(e){var i=this,n=!1,s={};t.each(e,function(t,e){i._setOption(t,e),t in i.sizeRelatedOptions&&(n=!0),t in i.resizableRelatedOptions&&(s[t]=e)}),n&&(this._size(),this._position()),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option",s)},_setOption:function(t,e){var i,n,s=this.uiDialog;"dialogClass"===t&&s.removeClass(this.options.dialogClass).addClass(e),"disabled"!==t&&(this._super(t,e),"appendTo"===t&&this.uiDialog.appendTo(this._appendTo()),"buttons"===t&&this._createButtons(),"closeText"===t&&this.uiDialogTitlebarClose.button({label:""+e}),"draggable"===t&&(i=s.is(":data(ui-draggable)"),i&&!e&&s.draggable("destroy"),!i&&e&&this._makeDraggable()),"position"===t&&this._position(),"resizable"===t&&(n=s.is(":data(ui-resizable)"),n&&!e&&s.resizable("destroy"),n&&"string"==typeof e&&s.resizable("option","handles",e),n||e===!1||this._makeResizable()),"title"===t&&this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))},_size:function(){var t,e,i,n=this.options;this.element.show().css({width:"auto",minHeight:0,maxHeight:"none",height:0}),n.minWidth>n.width&&(n.width=n.minWidth),t=this.uiDialog.css({height:"auto",width:n.width}).outerHeight(),e=Math.max(0,n.minHeight-t),i="number"==typeof n.maxHeight?Math.max(0,n.maxHeight-t):"none","auto"===n.height?this.element.css({minHeight:e,maxHeight:i,height:"auto"}):this.element.height(Math.max(0,n.height-t)),this.uiDialog.is(":data(ui-resizable)")&&this.uiDialog.resizable("option","minHeight",this._minHeight())},_blockFrames:function(){this.iframeBlocks=this.document.find("iframe").map(function(){var e=t(this);return t("<div>").css({position:"absolute",width:e.outerWidth(),height:e.outerHeight()}).appendTo(e.parent()).offset(e.offset())[0]})},_unblockFrames:function(){this.iframeBlocks&&(this.iframeBlocks.remove(),delete this.iframeBlocks)},_allowInteraction:function(e){return!!t(e.target).closest(".ui-dialog").length||!!t(e.target).closest(".ui-datepicker").length},_createOverlay:function(){if(this.options.modal){var e=!0;this._delay(function(){e=!1}),this.document.data("ui-dialog-overlays")||this._on(this.document,{focusin:function(t){e||this._allowInteraction(t)||(t.preventDefault(),
this._trackingInstances()[0]._focusTabbable())}}),this.overlay=t("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()),this._on(this.overlay,{mousedown:"_keepFocus"}),this.document.data("ui-dialog-overlays",(this.document.data("ui-dialog-overlays")||0)+1)}},_destroyOverlay:function(){if(this.options.modal&&this.overlay){var t=this.document.data("ui-dialog-overlays")-1;t?this.document.data("ui-dialog-overlays",t):this.document.unbind("focusin").removeData("ui-dialog-overlays"),this.overlay.remove(),this.overlay=null}}}),t.widget("ui.droppable",{version:"1.11.4",widgetEventPrefix:"drop",options:{accept:"*",activeClass:!1,addClasses:!0,greedy:!1,hoverClass:!1,scope:"default",tolerance:"intersect",activate:null,deactivate:null,drop:null,out:null,over:null},_create:function(){var e,i=this.options,n=i.accept;this.isover=!1,this.isout=!0,this.accept=t.isFunction(n)?n:function(t){return t.is(n)},this.proportions=function(){return arguments.length?void(e=arguments[0]):e?e:e={width:this.element[0].offsetWidth,height:this.element[0].offsetHeight}},this._addToManager(i.scope),i.addClasses&&this.element.addClass("ui-droppable")},_addToManager:function(e){t.ui.ddmanager.droppables[e]=t.ui.ddmanager.droppables[e]||[],t.ui.ddmanager.droppables[e].push(this)},_splice:function(t){for(var e=0;t.length>e;e++)t[e]===this&&t.splice(e,1)},_destroy:function(){var e=t.ui.ddmanager.droppables[this.options.scope];this._splice(e),this.element.removeClass("ui-droppable ui-droppable-disabled")},_setOption:function(e,i){if("accept"===e)this.accept=t.isFunction(i)?i:function(t){return t.is(i)};else if("scope"===e){var n=t.ui.ddmanager.droppables[this.options.scope];this._splice(n),this._addToManager(i)}this._super(e,i)},_activate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.addClass(this.options.activeClass),i&&this._trigger("activate",e,this.ui(i))},_deactivate:function(e){var i=t.ui.ddmanager.current;this.options.activeClass&&this.element.removeClass(this.options.activeClass),i&&this._trigger("deactivate",e,this.ui(i))},_over:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.addClass(this.options.hoverClass),this._trigger("over",e,this.ui(i)))},_out:function(e){var i=t.ui.ddmanager.current;i&&(i.currentItem||i.element)[0]!==this.element[0]&&this.accept.call(this.element[0],i.currentItem||i.element)&&(this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("out",e,this.ui(i)))},_drop:function(e,i){var n=i||t.ui.ddmanager.current,s=!1;return!(!n||(n.currentItem||n.element)[0]===this.element[0])&&(this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function(){var i=t(this).droppable("instance");return i.options.greedy&&!i.options.disabled&&i.options.scope===n.options.scope&&i.accept.call(i.element[0],n.currentItem||n.element)&&t.ui.intersect(n,t.extend(i,{offset:i.element.offset()}),i.options.tolerance,e)?(s=!0,!1):void 0}),!s&&(!!this.accept.call(this.element[0],n.currentItem||n.element)&&(this.options.activeClass&&this.element.removeClass(this.options.activeClass),this.options.hoverClass&&this.element.removeClass(this.options.hoverClass),this._trigger("drop",e,this.ui(n)),this.element)))},ui:function(t){return{draggable:t.currentItem||t.element,helper:t.helper,position:t.position,offset:t.positionAbs}}}),t.ui.intersect=function(){function t(t,e,i){return t>=e&&e+i>t}return function(e,i,n,s){if(!i.offset)return!1;var o=(e.positionAbs||e.position.absolute).left+e.margins.left,a=(e.positionAbs||e.position.absolute).top+e.margins.top,r=o+e.helperProportions.width,l=a+e.helperProportions.height,h=i.offset.left,c=i.offset.top,u=h+i.proportions().width,d=c+i.proportions().height;switch(n){case"fit":return o>=h&&u>=r&&a>=c&&d>=l;case"intersect":return o+e.helperProportions.width/2>h&&u>r-e.helperProportions.width/2&&a+e.helperProportions.height/2>c&&d>l-e.helperProportions.height/2;case"pointer":return t(s.pageY,c,i.proportions().height)&&t(s.pageX,h,i.proportions().width);case"touch":return(a>=c&&d>=a||l>=c&&d>=l||c>a&&l>d)&&(o>=h&&u>=o||r>=h&&u>=r||h>o&&r>u);default:return!1}}}(),t.ui.ddmanager={current:null,droppables:{"default":[]},prepareOffsets:function(e,i){var n,s,o=t.ui.ddmanager.droppables[e.options.scope]||[],a=i?i.type:null,r=(e.currentItem||e.element).find(":data(ui-droppable)").addBack();t:for(n=0;o.length>n;n++)if(!(o[n].options.disabled||e&&!o[n].accept.call(o[n].element[0],e.currentItem||e.element))){for(s=0;r.length>s;s++)if(r[s]===o[n].element[0]){o[n].proportions().height=0;continue t}o[n].visible="none"!==o[n].element.css("display"),o[n].visible&&("mousedown"===a&&o[n]._activate.call(o[n],i),o[n].offset=o[n].element.offset(),o[n].proportions({width:o[n].element[0].offsetWidth,height:o[n].element[0].offsetHeight}))}},drop:function(e,i){var n=!1;return t.each((t.ui.ddmanager.droppables[e.options.scope]||[]).slice(),function(){this.options&&(!this.options.disabled&&this.visible&&t.ui.intersect(e,this,this.options.tolerance,i)&&(n=this._drop.call(this,i)||n),!this.options.disabled&&this.visible&&this.accept.call(this.element[0],e.currentItem||e.element)&&(this.isout=!0,this.isover=!1,this._deactivate.call(this,i)))}),n},dragStart:function(e,i){e.element.parentsUntil("body").bind("scroll.droppable",function(){e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)})},drag:function(e,i){e.options.refreshPositions&&t.ui.ddmanager.prepareOffsets(e,i),t.each(t.ui.ddmanager.droppables[e.options.scope]||[],function(){if(!this.options.disabled&&!this.greedyChild&&this.visible){var n,s,o,a=t.ui.intersect(e,this,this.options.tolerance,i),r=!a&&this.isover?"isout":a&&!this.isover?"isover":null;r&&(this.options.greedy&&(s=this.options.scope,o=this.element.parents(":data(ui-droppable)").filter(function(){return t(this).droppable("instance").options.scope===s}),o.length&&(n=t(o[0]).droppable("instance"),n.greedyChild="isover"===r)),n&&"isover"===r&&(n.isover=!1,n.isout=!0,n._out.call(n,i)),this[r]=!0,this["isout"===r?"isover":"isout"]=!1,this["isover"===r?"_over":"_out"].call(this,i),n&&"isout"===r&&(n.isout=!1,n.isover=!0,n._over.call(n,i)))}})},dragStop:function(e,i){e.element.parentsUntil("body").unbind("scroll.droppable"),e.options.refreshPositions||t.ui.ddmanager.prepareOffsets(e,i)}},t.ui.droppable;var b="ui-effects-",y=t;t.effects={effect:{}},function(t,e){function i(t,e,i){var n=u[e.type]||{};return null==t?i||!e.def?null:e.def:(t=n.floor?~~t:parseFloat(t),isNaN(t)?e.def:n.mod?(t+n.mod)%n.mod:0>t?0:t>n.max?n.max:t)}function n(i){var n=h(),s=n._rgba=[];return i=i.toLowerCase(),p(l,function(t,o){var a,r=o.re.exec(i),l=r&&o.parse(r),h=o.space||"rgba";return l?(a=n[h](l),n[c[h].cache]=a[c[h].cache],s=n._rgba=a._rgba,!1):e}),s.length?("0,0,0,0"===s.join()&&t.extend(s,o.transparent),n):o[i]}function s(t,e,i){return i=(i+1)%1,1>6*i?t+6*(e-t)*i:1>2*i?e:2>3*i?t+6*(e-t)*(2/3-i):t}var o,a="backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",r=/^([\-+])=\s*(\d+\.?\d*)/,l=[{re:/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[t[1],t[2],t[3],t[4]]}},{re:/rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,parse:function(t){return[2.55*t[1],2.55*t[2],2.55*t[3],t[4]]}},{re:/#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,parse:function(t){return[parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)]}},{re:/#([a-f0-9])([a-f0-9])([a-f0-9])/,parse:function(t){return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)]}},{re:/hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,space:"hsla",parse:function(t){return[t[1],t[2]/100,t[3]/100,t[4]]}}],h=t.Color=function(e,i,n,s){return new t.Color.fn.parse(e,i,n,s)},c={rgba:{props:{red:{idx:0,type:"byte"},green:{idx:1,type:"byte"},blue:{idx:2,type:"byte"}}},hsla:{props:{hue:{idx:0,type:"degrees"},saturation:{idx:1,type:"percent"},lightness:{idx:2,type:"percent"}}}},u={"byte":{floor:!0,max:255},percent:{max:1},degrees:{mod:360,floor:!0}},d=h.support={},f=t("<p>")[0],p=t.each;f.style.cssText="background-color:rgba(1,1,1,.5)",d.rgba=f.style.backgroundColor.indexOf("rgba")>-1,p(c,function(t,e){e.cache="_"+t,e.props.alpha={idx:3,type:"percent",def:1}}),h.fn=t.extend(h.prototype,{parse:function(s,a,r,l){if(s===e)return this._rgba=[null,null,null,null],this;(s.jquery||s.nodeType)&&(s=t(s).css(a),a=e);var u=this,d=t.type(s),f=this._rgba=[];return a!==e&&(s=[s,a,r,l],d="array"),"string"===d?this.parse(n(s)||o._default):"array"===d?(p(c.rgba.props,function(t,e){f[e.idx]=i(s[e.idx],e)}),this):"object"===d?(s instanceof h?p(c,function(t,e){s[e.cache]&&(u[e.cache]=s[e.cache].slice())}):p(c,function(e,n){var o=n.cache;p(n.props,function(t,e){if(!u[o]&&n.to){if("alpha"===t||null==s[t])return;u[o]=n.to(u._rgba)}u[o][e.idx]=i(s[t],e,!0)}),u[o]&&0>t.inArray(null,u[o].slice(0,3))&&(u[o][3]=1,n.from&&(u._rgba=n.from(u[o])))}),this):e},is:function(t){var i=h(t),n=!0,s=this;return p(c,function(t,o){var a,r=i[o.cache];return r&&(a=s[o.cache]||o.to&&o.to(s._rgba)||[],p(o.props,function(t,i){return null!=r[i.idx]?n=r[i.idx]===a[i.idx]:e})),n}),n},_space:function(){var t=[],e=this;return p(c,function(i,n){e[n.cache]&&t.push(i)}),t.pop()},transition:function(t,e){var n=h(t),s=n._space(),o=c[s],a=0===this.alpha()?h("transparent"):this,r=a[o.cache]||o.to(a._rgba),l=r.slice();return n=n[o.cache],p(o.props,function(t,s){var o=s.idx,a=r[o],h=n[o],c=u[s.type]||{};null!==h&&(null===a?l[o]=h:(c.mod&&(h-a>c.mod/2?a+=c.mod:a-h>c.mod/2&&(a-=c.mod)),l[o]=i((h-a)*e+a,s)))}),this[s](l)},blend:function(e){if(1===this._rgba[3])return this;var i=this._rgba.slice(),n=i.pop(),s=h(e)._rgba;return h(t.map(i,function(t,e){return(1-n)*s[e]+n*t}))},toRgbaString:function(){var e="rgba(",i=t.map(this._rgba,function(t,e){return null==t?e>2?1:0:t});return 1===i[3]&&(i.pop(),e="rgb("),e+i.join()+")"},toHslaString:function(){var e="hsla(",i=t.map(this.hsla(),function(t,e){return null==t&&(t=e>2?1:0),e&&3>e&&(t=Math.round(100*t)+"%"),t});return 1===i[3]&&(i.pop(),e="hsl("),e+i.join()+")"},toHexString:function(e){var i=this._rgba.slice(),n=i.pop();return e&&i.push(~~(255*n)),"#"+t.map(i,function(t){return t=(t||0).toString(16),1===t.length?"0"+t:t}).join("")},toString:function(){return 0===this._rgba[3]?"transparent":this.toRgbaString()}}),h.fn.parse.prototype=h.fn,c.hsla.to=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e,i,n=t[0]/255,s=t[1]/255,o=t[2]/255,a=t[3],r=Math.max(n,s,o),l=Math.min(n,s,o),h=r-l,c=r+l,u=.5*c;return e=l===r?0:n===r?60*(s-o)/h+360:s===r?60*(o-n)/h+120:60*(n-s)/h+240,i=0===h?0:.5>=u?h/c:h/(2-c),[Math.round(e)%360,i,u,null==a?1:a]},c.hsla.from=function(t){if(null==t[0]||null==t[1]||null==t[2])return[null,null,null,t[3]];var e=t[0]/360,i=t[1],n=t[2],o=t[3],a=.5>=n?n*(1+i):n+i-n*i,r=2*n-a;return[Math.round(255*s(r,a,e+1/3)),Math.round(255*s(r,a,e)),Math.round(255*s(r,a,e-1/3)),o]},p(c,function(n,s){var o=s.props,a=s.cache,l=s.to,c=s.from;h.fn[n]=function(n){if(l&&!this[a]&&(this[a]=l(this._rgba)),n===e)return this[a].slice();var s,r=t.type(n),u="array"===r||"object"===r?n:arguments,d=this[a].slice();return p(o,function(t,e){var n=u["object"===r?t:e.idx];null==n&&(n=d[e.idx]),d[e.idx]=i(n,e)}),c?(s=h(c(d)),s[a]=d,s):h(d)},p(o,function(e,i){h.fn[e]||(h.fn[e]=function(s){var o,a=t.type(s),l="alpha"===e?this._hsla?"hsla":"rgba":n,h=this[l](),c=h[i.idx];return"undefined"===a?c:("function"===a&&(s=s.call(this,c),a=t.type(s)),null==s&&i.empty?this:("string"===a&&(o=r.exec(s),o&&(s=c+parseFloat(o[2])*("+"===o[1]?1:-1))),h[i.idx]=s,this[l](h)))})})}),h.hook=function(e){var i=e.split(" ");p(i,function(e,i){t.cssHooks[i]={set:function(e,s){var o,a,r="";if("transparent"!==s&&("string"!==t.type(s)||(o=n(s)))){if(s=h(o||s),!d.rgba&&1!==s._rgba[3]){for(a="backgroundColor"===i?e.parentNode:e;(""===r||"transparent"===r)&&a&&a.style;)try{r=t.css(a,"backgroundColor"),a=a.parentNode}catch(l){}s=s.blend(r&&"transparent"!==r?r:"_default")}s=s.toRgbaString()}try{e.style[i]=s}catch(l){}}},t.fx.step[i]=function(e){e.colorInit||(e.start=h(e.elem,i),e.end=h(e.end),e.colorInit=!0),t.cssHooks[i].set(e.elem,e.start.transition(e.end,e.pos))}})},h.hook(a),t.cssHooks.borderColor={expand:function(t){var e={};return p(["Top","Right","Bottom","Left"],function(i,n){e["border"+n+"Color"]=t}),e}},o=t.Color.names={aqua:"#00ffff",black:"#000000",blue:"#0000ff",fuchsia:"#ff00ff",gray:"#808080",green:"#008000",lime:"#00ff00",maroon:"#800000",navy:"#000080",olive:"#808000",purple:"#800080",red:"#ff0000",silver:"#c0c0c0",teal:"#008080",white:"#ffffff",yellow:"#ffff00",transparent:[null,null,null,0],_default:"#ffffff"}}(y),function(){function e(e){var i,n,s=e.ownerDocument.defaultView?e.ownerDocument.defaultView.getComputedStyle(e,null):e.currentStyle,o={};if(s&&s.length&&s[0]&&s[s[0]])for(n=s.length;n--;)i=s[n],"string"==typeof s[i]&&(o[t.camelCase(i)]=s[i]);else for(i in s)"string"==typeof s[i]&&(o[i]=s[i]);return o}function i(e,i){var n,o,a={};for(n in i)o=i[n],e[n]!==o&&(s[n]||(t.fx.step[n]||!isNaN(parseFloat(o)))&&(a[n]=o));return a}var n=["add","remove","toggle"],s={border:1,borderBottom:1,borderColor:1,borderLeft:1,borderRight:1,borderTop:1,borderWidth:1,margin:1,padding:1};t.each(["borderLeftStyle","borderRightStyle","borderBottomStyle","borderTopStyle"],function(e,i){t.fx.step[i]=function(t){("none"!==t.end&&!t.setAttr||1===t.pos&&!t.setAttr)&&(y.style(t.elem,i,t.end),t.setAttr=!0)}}),t.fn.addBack||(t.fn.addBack=function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}),t.effects.animateClass=function(s,o,a,r){var l=t.speed(o,a,r);return this.queue(function(){var o,a=t(this),r=a.attr("class")||"",h=l.children?a.find("*").addBack():a;h=h.map(function(){var i=t(this);return{el:i,start:e(this)}}),o=function(){t.each(n,function(t,e){s[e]&&a[e+"Class"](s[e])})},o(),h=h.map(function(){return this.end=e(this.el[0]),this.diff=i(this.start,this.end),this}),a.attr("class",r),h=h.map(function(){var e=this,i=t.Deferred(),n=t.extend({},l,{queue:!1,complete:function(){i.resolve(e)}});return this.el.animate(this.diff,n),i.promise()}),t.when.apply(t,h.get()).done(function(){o(),t.each(arguments,function(){var e=this.el;t.each(this.diff,function(t){e.css(t,"")})}),l.complete.call(a[0])})})},t.fn.extend({addClass:function(e){return function(i,n,s,o){return n?t.effects.animateClass.call(this,{add:i},n,s,o):e.apply(this,arguments)}}(t.fn.addClass),removeClass:function(e){return function(i,n,s,o){return arguments.length>1?t.effects.animateClass.call(this,{remove:i},n,s,o):e.apply(this,arguments)}}(t.fn.removeClass),toggleClass:function(e){return function(i,n,s,o,a){return"boolean"==typeof n||void 0===n?s?t.effects.animateClass.call(this,n?{add:i}:{remove:i},s,o,a):e.apply(this,arguments):t.effects.animateClass.call(this,{toggle:i},n,s,o)}}(t.fn.toggleClass),switchClass:function(e,i,n,s,o){return t.effects.animateClass.call(this,{add:i,remove:e},n,s,o)}})}(),function(){function e(e,i,n,s){return t.isPlainObject(e)&&(i=e,e=e.effect),e={effect:e},null==i&&(i={}),t.isFunction(i)&&(s=i,n=null,i={}),("number"==typeof i||t.fx.speeds[i])&&(s=n,n=i,i={}),t.isFunction(n)&&(s=n,n=null),i&&t.extend(e,i),n=n||i.duration,e.duration=t.fx.off?0:"number"==typeof n?n:n in t.fx.speeds?t.fx.speeds[n]:t.fx.speeds._default,e.complete=s||i.complete,e}function i(e){return!(e&&"number"!=typeof e&&!t.fx.speeds[e])||("string"==typeof e&&!t.effects.effect[e]||(!!t.isFunction(e)||"object"==typeof e&&!e.effect))}t.extend(t.effects,{version:"1.11.4",save:function(t,e){for(var i=0;e.length>i;i++)null!==e[i]&&t.data(b+e[i],t[0].style[e[i]])},restore:function(t,e){var i,n;for(n=0;e.length>n;n++)null!==e[n]&&(i=t.data(b+e[n]),void 0===i&&(i=""),t.css(e[n],i))},setMode:function(t,e){return"toggle"===e&&(e=t.is(":hidden")?"show":"hide"),e},getBaseline:function(t,e){var i,n;switch(t[0]){case"top":i=0;break;case"middle":i=.5;break;case"bottom":i=1;break;default:i=t[0]/e.height}switch(t[1]){case"left":n=0;break;case"center":n=.5;break;case"right":n=1;break;default:n=t[1]/e.width}return{x:n,y:i}},createWrapper:function(e){if(e.parent().is(".ui-effects-wrapper"))return e.parent();var i={width:e.outerWidth(!0),height:e.outerHeight(!0),"float":e.css("float")},n=t("<div></div>").addClass("ui-effects-wrapper").css({fontSize:"100%",background:"transparent",border:"none",margin:0,padding:0}),s={width:e.width(),height:e.height()},o=document.activeElement;try{o.id}catch(a){o=document.body}return e.wrap(n),(e[0]===o||t.contains(e[0],o))&&t(o).focus(),n=e.parent(),"static"===e.css("position")?(n.css({position:"relative"}),e.css({position:"relative"})):(t.extend(i,{position:e.css("position"),zIndex:e.css("z-index")}),t.each(["top","left","bottom","right"],function(t,n){i[n]=e.css(n),isNaN(parseInt(i[n],10))&&(i[n]="auto")}),e.css({position:"relative",top:0,left:0,right:"auto",bottom:"auto"})),e.css(s),n.css(i).show()},removeWrapper:function(e){var i=document.activeElement;return e.parent().is(".ui-effects-wrapper")&&(e.parent().replaceWith(e),(e[0]===i||t.contains(e[0],i))&&t(i).focus()),e},setTransition:function(e,i,n,s){return s=s||{},t.each(i,function(t,i){var o=e.cssUnit(i);o[0]>0&&(s[i]=o[0]*n+o[1])}),s}}),t.fn.extend({effect:function(){function i(e){function i(){t.isFunction(o)&&o.call(s[0]),t.isFunction(e)&&e()}var s=t(this),o=n.complete,r=n.mode;(s.is(":hidden")?"hide"===r:"show"===r)?(s[r](),i()):a.call(s[0],n,i)}var n=e.apply(this,arguments),s=n.mode,o=n.queue,a=t.effects.effect[n.effect];return t.fx.off||!a?s?this[s](n.duration,n.complete):this.each(function(){n.complete&&n.complete.call(this)}):o===!1?this.each(i):this.queue(o||"fx",i)},show:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="show",this.effect.call(this,s)}}(t.fn.show),hide:function(t){return function(n){if(i(n))return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="hide",this.effect.call(this,s)}}(t.fn.hide),toggle:function(t){return function(n){if(i(n)||"boolean"==typeof n)return t.apply(this,arguments);var s=e.apply(this,arguments);return s.mode="toggle",this.effect.call(this,s)}}(t.fn.toggle),cssUnit:function(e){var i=this.css(e),n=[];return t.each(["em","px","%","pt"],function(t,e){i.indexOf(e)>0&&(n=[parseFloat(i),e])}),n}})}(),function(){var e={};t.each(["Quad","Cubic","Quart","Quint","Expo"],function(t,i){e[i]=function(e){return Math.pow(e,t+2)}}),t.extend(e,{Sine:function(t){return 1-Math.cos(t*Math.PI/2)},Circ:function(t){return 1-Math.sqrt(1-t*t)},Elastic:function(t){return 0===t||1===t?t:-Math.pow(2,8*(t-1))*Math.sin((80*(t-1)-7.5)*Math.PI/15)},Back:function(t){return t*t*(3*t-2)},Bounce:function(t){for(var e,i=4;((e=Math.pow(2,--i))-1)/11>t;);return 1/Math.pow(4,3-i)-7.5625*Math.pow((3*e-2)/22-t,2)}}),t.each(e,function(e,i){t.easing["easeIn"+e]=i,t.easing["easeOut"+e]=function(t){return 1-i(1-t)},t.easing["easeInOut"+e]=function(t){return.5>t?i(2*t)/2:1-i(-2*t+2)/2}})}(),t.effects,t.effects.effect.blind=function(e,i){var n,s,o,a=t(this),r=/up|down|vertical/,l=/up|left|vertical|horizontal/,h=["position","top","bottom","left","right","height","width"],c=t.effects.setMode(a,e.mode||"hide"),u=e.direction||"up",d=r.test(u),f=d?"height":"width",p=d?"top":"left",m=l.test(u),g={},v="show"===c;a.parent().is(".ui-effects-wrapper")?t.effects.save(a.parent(),h):t.effects.save(a,h),a.show(),n=t.effects.createWrapper(a).css({overflow:"hidden"}),s=n[f](),o=parseFloat(n.css(p))||0,g[f]=v?s:0,m||(a.css(d?"bottom":"right",0).css(d?"top":"left","auto").css({position:"absolute"}),g[p]=v?o:s+o),v&&(n.css(f,0),m||n.css(p,o+s)),n.animate(g,{duration:e.duration,easing:e.easing,queue:!1,complete:function(){"hide"===c&&a.hide(),t.effects.restore(a,h),t.effects.removeWrapper(a),i()}})},t.effects.effect.bounce=function(e,i){var n,s,o,a=t(this),r=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(a,e.mode||"effect"),h="hide"===l,c="show"===l,u=e.direction||"up",d=e.distance,f=e.times||5,p=2*f+(c||h?1:0),m=e.duration/p,g=e.easing,v="up"===u||"down"===u?"top":"left",b="up"===u||"left"===u,y=a.queue(),_=y.length;for((c||h)&&r.push("opacity"),t.effects.save(a,r),a.show(),t.effects.createWrapper(a),d||(d=a["top"===v?"outerHeight":"outerWidth"]()/3),c&&(o={opacity:1},o[v]=0,a.css("opacity",0).css(v,b?2*-d:2*d).animate(o,m,g)),h&&(d/=Math.pow(2,f-1)),o={},o[v]=0,n=0;f>n;n++)s={},s[v]=(b?"-=":"+=")+d,a.animate(s,m,g).animate(o,m,g),d=h?2*d:d/2;h&&(s={opacity:0},s[v]=(b?"-=":"+=")+d,a.animate(s,m,g)),a.queue(function(){h&&a.hide(),t.effects.restore(a,r),t.effects.removeWrapper(a),i()}),_>1&&y.splice.apply(y,[1,0].concat(y.splice(_,p+1))),a.dequeue()},t.effects.effect.clip=function(e,i){var n,s,o,a=t(this),r=["position","top","bottom","left","right","height","width"],l=t.effects.setMode(a,e.mode||"hide"),h="show"===l,c=e.direction||"vertical",u="vertical"===c,d=u?"height":"width",f=u?"top":"left",p={};t.effects.save(a,r),a.show(),n=t.effects.createWrapper(a).css({overflow:"hidden"}),s="IMG"===a[0].tagName?n:a,o=s[d](),h&&(s.css(d,0),s.css(f,o/2)),p[d]=h?o:0,p[f]=h?0:o/2,s.animate(p,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){h||a.hide(),t.effects.restore(a,r),t.effects.removeWrapper(a),i()}})},t.effects.effect.drop=function(e,i){var n,s=t(this),o=["position","top","bottom","left","right","opacity","height","width"],a=t.effects.setMode(s,e.mode||"hide"),r="show"===a,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l?"pos":"neg",u={opacity:r?1:0};t.effects.save(s,o),s.show(),t.effects.createWrapper(s),n=e.distance||s["top"===h?"outerHeight":"outerWidth"](!0)/2,r&&s.css("opacity",0).css(h,"pos"===c?-n:n),u[h]=(r?"pos"===c?"+=":"-=":"pos"===c?"-=":"+=")+n,s.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===a&&s.hide(),t.effects.restore(s,o),t.effects.removeWrapper(s),i()}})},t.effects.effect.explode=function(e,i){function n(){y.push(this),y.length===u*d&&s()}function s(){f.css({visibility:"visible"}),t(y).remove(),m||f.hide(),i()}var o,a,r,l,h,c,u=e.pieces?Math.round(Math.sqrt(e.pieces)):3,d=u,f=t(this),p=t.effects.setMode(f,e.mode||"hide"),m="show"===p,g=f.show().css("visibility","hidden").offset(),v=Math.ceil(f.outerWidth()/d),b=Math.ceil(f.outerHeight()/u),y=[];for(o=0;u>o;o++)for(l=g.top+o*b,c=o-(u-1)/2,a=0;d>a;a++)r=g.left+a*v,h=a-(d-1)/2,f.clone().appendTo("body").wrap("<div></div>").css({position:"absolute",visibility:"visible",left:-a*v,top:-o*b}).parent().addClass("ui-effects-explode").css({position:"absolute",overflow:"hidden",width:v,height:b,left:r+(m?h*v:0),top:l+(m?c*b:0),opacity:m?0:1}).animate({left:r+(m?0:h*v),top:l+(m?0:c*b),opacity:m?1:0},e.duration||500,e.easing,n)},t.effects.effect.fade=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||"toggle");n.animate({opacity:s},{queue:!1,duration:e.duration,easing:e.easing,complete:i})},t.effects.effect.fold=function(e,i){var n,s,o=t(this),a=["position","top","bottom","left","right","height","width"],r=t.effects.setMode(o,e.mode||"hide"),l="show"===r,h="hide"===r,c=e.size||15,u=/([0-9]+)%/.exec(c),d=!!e.horizFirst,f=l!==d,p=f?["width","height"]:["height","width"],m=e.duration/2,g={},v={};t.effects.save(o,a),o.show(),n=t.effects.createWrapper(o).css({overflow:"hidden"}),s=f?[n.width(),n.height()]:[n.height(),n.width()],u&&(c=parseInt(u[1],10)/100*s[h?0:1]),l&&n.css(d?{height:0,width:c}:{height:c,width:0}),g[p[0]]=l?s[0]:c,v[p[1]]=l?s[1]:0,n.animate(g,m,e.easing).animate(v,m,e.easing,function(){h&&o.hide(),t.effects.restore(o,a),t.effects.removeWrapper(o),i()})},t.effects.effect.highlight=function(e,i){var n=t(this),s=["backgroundImage","backgroundColor","opacity"],o=t.effects.setMode(n,e.mode||"show"),a={backgroundColor:n.css("backgroundColor")};"hide"===o&&(a.opacity=0),t.effects.save(n,s),n.show().css({backgroundImage:"none",backgroundColor:e.color||"#ffff99"}).animate(a,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===o&&n.hide(),t.effects.restore(n,s),i()}})},t.effects.effect.size=function(e,i){var n,s,o,a=t(this),r=["position","top","bottom","left","right","width","height","overflow","opacity"],l=["position","top","bottom","left","right","overflow","opacity"],h=["width","height","overflow"],c=["fontSize"],u=["borderTopWidth","borderBottomWidth","paddingTop","paddingBottom"],d=["borderLeftWidth","borderRightWidth","paddingLeft","paddingRight"],f=t.effects.setMode(a,e.mode||"effect"),p=e.restore||"effect"!==f,m=e.scale||"both",g=e.origin||["middle","center"],v=a.css("position"),b=p?r:l,y={height:0,width:0,outerHeight:0,outerWidth:0};"show"===f&&a.show(),n={height:a.height(),width:a.width(),outerHeight:a.outerHeight(),outerWidth:a.outerWidth()},"toggle"===e.mode&&"show"===f?(a.from=e.to||y,a.to=e.from||n):(a.from=e.from||("show"===f?y:n),a.to=e.to||("hide"===f?y:n)),o={from:{y:a.from.height/n.height,x:a.from.width/n.width},to:{y:a.to.height/n.height,x:a.to.width/n.width}},("box"===m||"both"===m)&&(o.from.y!==o.to.y&&(b=b.concat(u),a.from=t.effects.setTransition(a,u,o.from.y,a.from),a.to=t.effects.setTransition(a,u,o.to.y,a.to)),o.from.x!==o.to.x&&(b=b.concat(d),a.from=t.effects.setTransition(a,d,o.from.x,a.from),a.to=t.effects.setTransition(a,d,o.to.x,a.to))),("content"===m||"both"===m)&&o.from.y!==o.to.y&&(b=b.concat(c).concat(h),a.from=t.effects.setTransition(a,c,o.from.y,a.from),a.to=t.effects.setTransition(a,c,o.to.y,a.to)),t.effects.save(a,b),a.show(),t.effects.createWrapper(a),a.css("overflow","hidden").css(a.from),g&&(s=t.effects.getBaseline(g,n),a.from.top=(n.outerHeight-a.outerHeight())*s.y,a.from.left=(n.outerWidth-a.outerWidth())*s.x,a.to.top=(n.outerHeight-a.to.outerHeight)*s.y,a.to.left=(n.outerWidth-a.to.outerWidth)*s.x),a.css(a.from),("content"===m||"both"===m)&&(u=u.concat(["marginTop","marginBottom"]).concat(c),d=d.concat(["marginLeft","marginRight"]),h=r.concat(u).concat(d),a.find("*[width]").each(function(){var i=t(this),n={height:i.height(),width:i.width(),outerHeight:i.outerHeight(),outerWidth:i.outerWidth()};p&&t.effects.save(i,h),i.from={height:n.height*o.from.y,width:n.width*o.from.x,outerHeight:n.outerHeight*o.from.y,outerWidth:n.outerWidth*o.from.x},i.to={height:n.height*o.to.y,width:n.width*o.to.x,outerHeight:n.height*o.to.y,outerWidth:n.width*o.to.x},o.from.y!==o.to.y&&(i.from=t.effects.setTransition(i,u,o.from.y,i.from),i.to=t.effects.setTransition(i,u,o.to.y,i.to)),o.from.x!==o.to.x&&(i.from=t.effects.setTransition(i,d,o.from.x,i.from),i.to=t.effects.setTransition(i,d,o.to.x,i.to)),i.css(i.from),i.animate(i.to,e.duration,e.easing,function(){p&&t.effects.restore(i,h)})})),a.animate(a.to,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){0===a.to.opacity&&a.css("opacity",a.from.opacity),"hide"===f&&a.hide(),t.effects.restore(a,b),p||("static"===v?a.css({position:"relative",top:a.to.top,left:a.to.left}):t.each(["top","left"],function(t,e){a.css(e,function(e,i){var n=parseInt(i,10),s=t?a.to.left:a.to.top;return"auto"===i?s+"px":n+s+"px"})})),t.effects.removeWrapper(a),i()}})},t.effects.effect.scale=function(e,i){var n=t(this),s=t.extend(!0,{},e),o=t.effects.setMode(n,e.mode||"effect"),a=parseInt(e.percent,10)||(0===parseInt(e.percent,10)?0:"hide"===o?0:100),r=e.direction||"both",l=e.origin,h={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()},c={y:"horizontal"!==r?a/100:1,x:"vertical"!==r?a/100:1};s.effect="size",s.queue=!1,s.complete=i,"effect"!==o&&(s.origin=l||["middle","center"],s.restore=!0),s.from=e.from||("show"===o?{height:0,width:0,outerHeight:0,outerWidth:0}:h),s.to={height:h.height*c.y,width:h.width*c.x,outerHeight:h.outerHeight*c.y,outerWidth:h.outerWidth*c.x},s.fade&&("show"===o&&(s.from.opacity=0,s.to.opacity=1),"hide"===o&&(s.from.opacity=1,s.to.opacity=0)),n.effect(s)},t.effects.effect.puff=function(e,i){var n=t(this),s=t.effects.setMode(n,e.mode||"hide"),o="hide"===s,a=parseInt(e.percent,10)||150,r=a/100,l={height:n.height(),width:n.width(),outerHeight:n.outerHeight(),outerWidth:n.outerWidth()};t.extend(e,{effect:"scale",queue:!1,fade:!0,mode:s,complete:i,percent:o?a:100,from:o?l:{height:l.height*r,width:l.width*r,outerHeight:l.outerHeight*r,outerWidth:l.outerWidth*r}}),n.effect(e)},t.effects.effect.pulsate=function(e,i){var n,s=t(this),o=t.effects.setMode(s,e.mode||"show"),a="show"===o,r="hide"===o,l=a||"hide"===o,h=2*(e.times||5)+(l?1:0),c=e.duration/h,u=0,d=s.queue(),f=d.length;for((a||!s.is(":visible"))&&(s.css("opacity",0).show(),u=1),n=1;h>n;n++)s.animate({opacity:u},c,e.easing),u=1-u;s.animate({opacity:u},c,e.easing),s.queue(function(){r&&s.hide(),i()}),f>1&&d.splice.apply(d,[1,0].concat(d.splice(f,h+1))),s.dequeue()},t.effects.effect.shake=function(e,i){var n,s=t(this),o=["position","top","bottom","left","right","height","width"],a=t.effects.setMode(s,e.mode||"effect"),r=e.direction||"left",l=e.distance||20,h=e.times||3,c=2*h+1,u=Math.round(e.duration/c),d="up"===r||"down"===r?"top":"left",f="up"===r||"left"===r,p={},m={},g={},v=s.queue(),b=v.length;for(t.effects.save(s,o),s.show(),t.effects.createWrapper(s),p[d]=(f?"-=":"+=")+l,m[d]=(f?"+=":"-=")+2*l,g[d]=(f?"-=":"+=")+2*l,s.animate(p,u,e.easing),n=1;h>n;n++)s.animate(m,u,e.easing).animate(g,u,e.easing);s.animate(m,u,e.easing).animate(p,u/2,e.easing).queue(function(){"hide"===a&&s.hide(),t.effects.restore(s,o),t.effects.removeWrapper(s),i()}),b>1&&v.splice.apply(v,[1,0].concat(v.splice(b,c+1))),s.dequeue()},t.effects.effect.slide=function(e,i){var n,s=t(this),o=["position","top","bottom","left","right","width","height"],a=t.effects.setMode(s,e.mode||"show"),r="show"===a,l=e.direction||"left",h="up"===l||"down"===l?"top":"left",c="up"===l||"left"===l,u={};t.effects.save(s,o),s.show(),n=e.distance||s["top"===h?"outerHeight":"outerWidth"](!0),t.effects.createWrapper(s).css({overflow:"hidden"}),r&&s.css(h,c?isNaN(n)?"-"+n:-n:n),u[h]=(r?c?"+=":"-=":c?"-=":"+=")+n,s.animate(u,{queue:!1,duration:e.duration,easing:e.easing,complete:function(){"hide"===a&&s.hide(),t.effects.restore(s,o),t.effects.removeWrapper(s),i()}})},t.effects.effect.transfer=function(e,i){var n=t(this),s=t(e.to),o="fixed"===s.css("position"),a=t("body"),r=o?a.scrollTop():0,l=o?a.scrollLeft():0,h=s.offset(),c={top:h.top-r,left:h.left-l,height:s.innerHeight(),width:s.innerWidth()},u=n.offset(),d=t("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(e.className).css({top:u.top-r,left:u.left-l,height:n.innerHeight(),width:n.innerWidth(),position:o?"fixed":"absolute"}).animate(c,e.duration,e.easing,function(){d.remove(),i()})},t.widget("ui.progressbar",{version:"1.11.4",options:{max:100,value:0,change:null,complete:null},min:0,_create:function(){this.oldValue=this.options.value=this._constrainedValue(),this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({role:"progressbar","aria-valuemin":this.min}),this.valueDiv=t("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element),this._refreshValue()},_destroy:function(){this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.valueDiv.remove()},value:function(t){return void 0===t?this.options.value:(this.options.value=this._constrainedValue(t),void this._refreshValue())},_constrainedValue:function(t){return void 0===t&&(t=this.options.value),this.indeterminate=t===!1,"number"!=typeof t&&(t=0),!this.indeterminate&&Math.min(this.options.max,Math.max(this.min,t))},_setOptions:function(t){var e=t.value;delete t.value,this._super(t),this.options.value=this._constrainedValue(e),this._refreshValue()},_setOption:function(t,e){
"max"===t&&(e=Math.max(this.min,e)),"disabled"===t&&this.element.toggleClass("ui-state-disabled",!!e).attr("aria-disabled",e),this._super(t,e)},_percentage:function(){return this.indeterminate?100:100*(this.options.value-this.min)/(this.options.max-this.min)},_refreshValue:function(){var e=this.options.value,i=this._percentage();this.valueDiv.toggle(this.indeterminate||e>this.min).toggleClass("ui-corner-right",e===this.options.max).width(i.toFixed(0)+"%"),this.element.toggleClass("ui-progressbar-indeterminate",this.indeterminate),this.indeterminate?(this.element.removeAttr("aria-valuenow"),this.overlayDiv||(this.overlayDiv=t("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))):(this.element.attr({"aria-valuemax":this.options.max,"aria-valuenow":e}),this.overlayDiv&&(this.overlayDiv.remove(),this.overlayDiv=null)),this.oldValue!==e&&(this.oldValue=e,this._trigger("change")),e===this.options.max&&this._trigger("complete")}}),t.widget("ui.selectable",t.ui.mouse,{version:"1.11.4",options:{appendTo:"body",autoRefresh:!0,distance:0,filter:"*",tolerance:"touch",selected:null,selecting:null,start:null,stop:null,unselected:null,unselecting:null},_create:function(){var e,i=this;this.element.addClass("ui-selectable"),this.dragged=!1,this.refresh=function(){e=t(i.options.filter,i.element[0]),e.addClass("ui-selectee"),e.each(function(){var e=t(this),i=e.offset();t.data(this,"selectable-item",{element:this,$element:e,left:i.left,top:i.top,right:i.left+e.outerWidth(),bottom:i.top+e.outerHeight(),startselected:!1,selected:e.hasClass("ui-selected"),selecting:e.hasClass("ui-selecting"),unselecting:e.hasClass("ui-unselecting")})})},this.refresh(),this.selectees=e.addClass("ui-selectee"),this._mouseInit(),this.helper=t("<div class='ui-selectable-helper'></div>")},_destroy:function(){this.selectees.removeClass("ui-selectee").removeData("selectable-item"),this.element.removeClass("ui-selectable ui-selectable-disabled"),this._mouseDestroy()},_mouseStart:function(e){var i=this,n=this.options;this.opos=[e.pageX,e.pageY],this.options.disabled||(this.selectees=t(n.filter,this.element[0]),this._trigger("start",e),t(n.appendTo).append(this.helper),this.helper.css({left:e.pageX,top:e.pageY,width:0,height:0}),n.autoRefresh&&this.refresh(),this.selectees.filter(".ui-selected").each(function(){var n=t.data(this,"selectable-item");n.startselected=!0,e.metaKey||e.ctrlKey||(n.$element.removeClass("ui-selected"),n.selected=!1,n.$element.addClass("ui-unselecting"),n.unselecting=!0,i._trigger("unselecting",e,{unselecting:n.element}))}),t(e.target).parents().addBack().each(function(){var n,s=t.data(this,"selectable-item");return s?(n=!e.metaKey&&!e.ctrlKey||!s.$element.hasClass("ui-selected"),s.$element.removeClass(n?"ui-unselecting":"ui-selected").addClass(n?"ui-selecting":"ui-unselecting"),s.unselecting=!n,s.selecting=n,s.selected=n,n?i._trigger("selecting",e,{selecting:s.element}):i._trigger("unselecting",e,{unselecting:s.element}),!1):void 0}))},_mouseDrag:function(e){if(this.dragged=!0,!this.options.disabled){var i,n=this,s=this.options,o=this.opos[0],a=this.opos[1],r=e.pageX,l=e.pageY;return o>r&&(i=r,r=o,o=i),a>l&&(i=l,l=a,a=i),this.helper.css({left:o,top:a,width:r-o,height:l-a}),this.selectees.each(function(){var i=t.data(this,"selectable-item"),h=!1;i&&i.element!==n.element[0]&&("touch"===s.tolerance?h=!(i.left>r||o>i.right||i.top>l||a>i.bottom):"fit"===s.tolerance&&(h=i.left>o&&r>i.right&&i.top>a&&l>i.bottom),h?(i.selected&&(i.$element.removeClass("ui-selected"),i.selected=!1),i.unselecting&&(i.$element.removeClass("ui-unselecting"),i.unselecting=!1),i.selecting||(i.$element.addClass("ui-selecting"),i.selecting=!0,n._trigger("selecting",e,{selecting:i.element}))):(i.selecting&&((e.metaKey||e.ctrlKey)&&i.startselected?(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.$element.addClass("ui-selected"),i.selected=!0):(i.$element.removeClass("ui-selecting"),i.selecting=!1,i.startselected&&(i.$element.addClass("ui-unselecting"),i.unselecting=!0),n._trigger("unselecting",e,{unselecting:i.element}))),i.selected&&(e.metaKey||e.ctrlKey||i.startselected||(i.$element.removeClass("ui-selected"),i.selected=!1,i.$element.addClass("ui-unselecting"),i.unselecting=!0,n._trigger("unselecting",e,{unselecting:i.element})))))}),!1}},_mouseStop:function(e){var i=this;return this.dragged=!1,t(".ui-unselecting",this.element[0]).each(function(){var n=t.data(this,"selectable-item");n.$element.removeClass("ui-unselecting"),n.unselecting=!1,n.startselected=!1,i._trigger("unselected",e,{unselected:n.element})}),t(".ui-selecting",this.element[0]).each(function(){var n=t.data(this,"selectable-item");n.$element.removeClass("ui-selecting").addClass("ui-selected"),n.selecting=!1,n.selected=!0,n.startselected=!0,i._trigger("selected",e,{selected:n.element})}),this._trigger("stop",e),this.helper.remove(),!1}}),t.widget("ui.selectmenu",{version:"1.11.4",defaultElement:"<select>",options:{appendTo:null,disabled:null,icons:{button:"ui-icon-triangle-1-s"},position:{my:"left top",at:"left bottom",collision:"none"},width:null,change:null,close:null,focus:null,open:null,select:null},_create:function(){var t=this.element.uniqueId().attr("id");this.ids={element:t,button:t+"-button",menu:t+"-menu"},this._drawButton(),this._drawMenu(),this.options.disabled&&this.disable()},_drawButton:function(){var e=this;this.label=t("label[for='"+this.ids.element+"']").attr("for",this.ids.button),this._on(this.label,{click:function(t){this.button.focus(),t.preventDefault()}}),this.element.hide(),this.button=t("<span>",{"class":"ui-selectmenu-button ui-widget ui-state-default ui-corner-all",tabindex:this.options.disabled?-1:0,id:this.ids.button,role:"combobox","aria-expanded":"false","aria-autocomplete":"list","aria-owns":this.ids.menu,"aria-haspopup":"true"}).insertAfter(this.element),t("<span>",{"class":"ui-icon "+this.options.icons.button}).prependTo(this.button),this.buttonText=t("<span>",{"class":"ui-selectmenu-text"}).appendTo(this.button),this._setText(this.buttonText,this.element.find("option:selected").text()),this._resizeButton(),this._on(this.button,this._buttonEvents),this.button.one("focusin",function(){e.menuItems||e._refreshMenu()}),this._hoverable(this.button),this._focusable(this.button)},_drawMenu:function(){var e=this;this.menu=t("<ul>",{"aria-hidden":"true","aria-labelledby":this.ids.button,id:this.ids.menu}),this.menuWrap=t("<div>",{"class":"ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo()),this.menuInstance=this.menu.menu({role:"listbox",select:function(t,i){t.preventDefault(),e._setSelection(),e._select(i.item.data("ui-selectmenu-item"),t)},focus:function(t,i){var n=i.item.data("ui-selectmenu-item");null!=e.focusIndex&&n.index!==e.focusIndex&&(e._trigger("focus",t,{item:n}),e.isOpen||e._select(n,t)),e.focusIndex=n.index,e.button.attr("aria-activedescendant",e.menuItems.eq(n.index).attr("id"))}}).menu("instance"),this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"),this.menuInstance._off(this.menu,"mouseleave"),this.menuInstance._closeOnDocumentClick=function(){return!1},this.menuInstance._isDivider=function(){return!1}},refresh:function(){this._refreshMenu(),this._setText(this.buttonText,this._getSelectedItem().text()),this.options.width||this._resizeButton()},_refreshMenu:function(){this.menu.empty();var t,e=this.element.find("option");e.length&&(this._parseOptions(e),this._renderMenu(this.menu,this.items),this.menuInstance.refresh(),this.menuItems=this.menu.find("li").not(".ui-selectmenu-optgroup"),t=this._getSelectedItem(),this.menuInstance.focus(null,t),this._setAria(t.data("ui-selectmenu-item")),this._setOption("disabled",this.element.prop("disabled")))},open:function(t){this.options.disabled||(this.menuItems?(this.menu.find(".ui-state-focus").removeClass("ui-state-focus"),this.menuInstance.focus(null,this._getSelectedItem())):this._refreshMenu(),this.isOpen=!0,this._toggleAttr(),this._resizeMenu(),this._position(),this._on(this.document,this._documentClick),this._trigger("open",t))},_position:function(){this.menuWrap.position(t.extend({of:this.button},this.options.position))},close:function(t){this.isOpen&&(this.isOpen=!1,this._toggleAttr(),this.range=null,this._off(this.document),this._trigger("close",t))},widget:function(){return this.button},menuWidget:function(){return this.menu},_renderMenu:function(e,i){var n=this,s="";t.each(i,function(i,o){o.optgroup!==s&&(t("<li>",{"class":"ui-selectmenu-optgroup ui-menu-divider"+(o.element.parent("optgroup").prop("disabled")?" ui-state-disabled":""),text:o.optgroup}).appendTo(e),s=o.optgroup),n._renderItemData(e,o)})},_renderItemData:function(t,e){return this._renderItem(t,e).data("ui-selectmenu-item",e)},_renderItem:function(e,i){var n=t("<li>");return i.disabled&&n.addClass("ui-state-disabled"),this._setText(n,i.label),n.appendTo(e)},_setText:function(t,e){e?t.text(e):t.html("&#160;")},_move:function(t,e){var i,n,s=".ui-menu-item";this.isOpen?i=this.menuItems.eq(this.focusIndex):(i=this.menuItems.eq(this.element[0].selectedIndex),s+=":not(.ui-state-disabled)"),n="first"===t||"last"===t?i["first"===t?"prevAll":"nextAll"](s).eq(-1):i[t+"All"](s).eq(0),n.length&&this.menuInstance.focus(e,n)},_getSelectedItem:function(){return this.menuItems.eq(this.element[0].selectedIndex)},_toggle:function(t){this[this.isOpen?"close":"open"](t)},_setSelection:function(){var t;this.range&&(window.getSelection?(t=window.getSelection(),t.removeAllRanges(),t.addRange(this.range)):this.range.select(),this.button.focus())},_documentClick:{mousedown:function(e){this.isOpen&&(t(e.target).closest(".ui-selectmenu-menu, #"+this.ids.button).length||this.close(e))}},_buttonEvents:{mousedown:function(){var t;window.getSelection?(t=window.getSelection(),t.rangeCount&&(this.range=t.getRangeAt(0))):this.range=document.selection.createRange()},click:function(t){this._setSelection(),this._toggle(t)},keydown:function(e){var i=!0;switch(e.keyCode){case t.ui.keyCode.TAB:case t.ui.keyCode.ESCAPE:this.close(e),i=!1;break;case t.ui.keyCode.ENTER:this.isOpen&&this._selectFocusedItem(e);break;case t.ui.keyCode.UP:e.altKey?this._toggle(e):this._move("prev",e);break;case t.ui.keyCode.DOWN:e.altKey?this._toggle(e):this._move("next",e);break;case t.ui.keyCode.SPACE:this.isOpen?this._selectFocusedItem(e):this._toggle(e);break;case t.ui.keyCode.LEFT:this._move("prev",e);break;case t.ui.keyCode.RIGHT:this._move("next",e);break;case t.ui.keyCode.HOME:case t.ui.keyCode.PAGE_UP:this._move("first",e);break;case t.ui.keyCode.END:case t.ui.keyCode.PAGE_DOWN:this._move("last",e);break;default:this.menu.trigger(e),i=!1}i&&e.preventDefault()}},_selectFocusedItem:function(t){var e=this.menuItems.eq(this.focusIndex);e.hasClass("ui-state-disabled")||this._select(e.data("ui-selectmenu-item"),t)},_select:function(t,e){var i=this.element[0].selectedIndex;this.element[0].selectedIndex=t.index,this._setText(this.buttonText,t.label),this._setAria(t),this._trigger("select",e,{item:t}),t.index!==i&&this._trigger("change",e,{item:t}),this.close(e)},_setAria:function(t){var e=this.menuItems.eq(t.index).attr("id");this.button.attr({"aria-labelledby":e,"aria-activedescendant":e}),this.menu.attr("aria-activedescendant",e)},_setOption:function(t,e){"icons"===t&&this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(e.button),this._super(t,e),"appendTo"===t&&this.menuWrap.appendTo(this._appendTo()),"disabled"===t&&(this.menuInstance.option("disabled",e),this.button.toggleClass("ui-state-disabled",e).attr("aria-disabled",e),this.element.prop("disabled",e),e?(this.button.attr("tabindex",-1),this.close()):this.button.attr("tabindex",0)),"width"===t&&this._resizeButton()},_appendTo:function(){var e=this.options.appendTo;return e&&(e=e.jquery||e.nodeType?t(e):this.document.find(e).eq(0)),e&&e[0]||(e=this.element.closest(".ui-front")),e.length||(e=this.document[0].body),e},_toggleAttr:function(){this.button.toggleClass("ui-corner-top",this.isOpen).toggleClass("ui-corner-all",!this.isOpen).attr("aria-expanded",this.isOpen),this.menuWrap.toggleClass("ui-selectmenu-open",this.isOpen),this.menu.attr("aria-hidden",!this.isOpen)},_resizeButton:function(){var t=this.options.width;t||(t=this.element.show().outerWidth(),this.element.hide()),this.button.outerWidth(t)},_resizeMenu:function(){this.menu.outerWidth(Math.max(this.button.outerWidth(),this.menu.width("").outerWidth()+1))},_getCreateOptions:function(){return{disabled:this.element.prop("disabled")}},_parseOptions:function(e){var i=[];e.each(function(e,n){var s=t(n),o=s.parent("optgroup");i.push({element:s,index:e,value:s.val(),label:s.text(),optgroup:o.attr("label")||"",disabled:o.prop("disabled")||s.prop("disabled")})}),this.items=i},_destroy:function(){this.menuWrap.remove(),this.button.remove(),this.element.show(),this.element.removeUniqueId(),this.label.attr("for",this.ids.element)}}),t.widget("ui.slider",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null,change:null,slide:null,start:null,stop:null},numPages:5,_create:function(){this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this._calculateNewMax(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget ui-widget-content ui-corner-all"),this._refresh(),this._setOption("disabled",this.options.disabled),this._animateOff=!1},_refresh:function(){this._createRange(),this._createHandles(),this._setupEvents(),this._refreshValue()},_createHandles:function(){var e,i,n=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",a=[];for(i=n.values&&n.values.length||1,s.length>i&&(s.slice(i).remove(),s=s.slice(0,i)),e=s.length;i>e;e++)a.push(o);this.handles=s.add(t(a.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.each(function(e){t(this).data("ui-slider-handle-index",e)})},_createRange:function(){var e=this.options,i="";e.range?(e.range===!0&&(e.values?e.values.length&&2!==e.values.length?e.values=[e.values[0],e.values[0]]:t.isArray(e.values)&&(e.values=e.values.slice(0)):e.values=[this._valueMin(),this._valueMin()]),this.range&&this.range.length?this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({left:"",bottom:""}):(this.range=t("<div></div>").appendTo(this.element),i="ui-slider-range ui-widget-header ui-corner-all"),this.range.addClass(i+("min"===e.range||"max"===e.range?" ui-slider-range-"+e.range:""))):(this.range&&this.range.remove(),this.range=null)},_setupEvents:function(){this._off(this.handles),this._on(this.handles,this._handleEvents),this._hoverable(this.handles),this._focusable(this.handles)},_destroy:function(){this.handles.remove(),this.range&&this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(e){var i,n,s,o,a,r,l,h,c=this,u=this.options;return!u.disabled&&(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),i={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(i),s=this._valueMax()-this._valueMin()+1,this.handles.each(function(e){var i=Math.abs(n-c.values(e));(s>i||s===i&&(e===c._lastChangedValue||c.values(e)===u.min))&&(s=i,o=t(this),a=e)}),r=this._start(e,a),r!==!1&&(this._mouseSliding=!0,this._handleIndex=a,o.addClass("ui-state-active").focus(),l=o.offset(),h=!t(e.target).parents().addBack().is(".ui-slider-handle"),this._clickOffset=h?{left:0,top:0}:{left:e.pageX-l.left-o.width()/2,top:e.pageY-l.top-o.height()/2-(parseInt(o.css("borderTopWidth"),10)||0)-(parseInt(o.css("borderBottomWidth"),10)||0)+(parseInt(o.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(e,a,n),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(t){var e={x:t.pageX,y:t.pageY},i=this._normValueFromMouse(e);return this._slide(t,this._handleIndex,i),!1},_mouseStop:function(t){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(t,this._handleIndex),this._change(t,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation="vertical"===this.options.orientation?"vertical":"horizontal"},_normValueFromMouse:function(t){var e,i,n,s,o;return"horizontal"===this.orientation?(e=this.elementSize.width,i=t.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(e=this.elementSize.height,i=t.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),n=i/e,n>1&&(n=1),0>n&&(n=0),"vertical"===this.orientation&&(n=1-n),s=this._valueMax()-this._valueMin(),o=this._valueMin()+n*s,this._trimAlignValue(o)},_start:function(t,e){var i={handle:this.handles[e],value:this.value()};return this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger("start",t,i)},_slide:function(t,e,i){var n,s,o;this.options.values&&this.options.values.length?(n=this.values(e?0:1),2===this.options.values.length&&this.options.range===!0&&(0===e&&i>n||1===e&&n>i)&&(i=n),i!==this.values(e)&&(s=this.values(),s[e]=i,o=this._trigger("slide",t,{handle:this.handles[e],value:i,values:s}),n=this.values(e?0:1),o!==!1&&this.values(e,i))):i!==this.value()&&(o=this._trigger("slide",t,{handle:this.handles[e],value:i}),o!==!1&&this.value(i))},_stop:function(t,e){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._trigger("stop",t,i)},_change:function(t,e){if(!this._keySliding&&!this._mouseSliding){var i={handle:this.handles[e],value:this.value()};this.options.values&&this.options.values.length&&(i.value=this.values(e),i.values=this.values()),this._lastChangedValue=e,this._trigger("change",t,i)}},value:function(t){return arguments.length?(this.options.value=this._trimAlignValue(t),this._refreshValue(),void this._change(null,0)):this._value()},values:function(e,i){var n,s,o;if(arguments.length>1)return this.options.values[e]=this._trimAlignValue(i),this._refreshValue(),void this._change(null,e);if(!arguments.length)return this._values();if(!t.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(e):this.value();for(n=this.options.values,s=arguments[0],o=0;n.length>o;o+=1)n[o]=this._trimAlignValue(s[o]),this._change(null,o);this._refreshValue()},_setOption:function(e,i){var n,s=0;switch("range"===e&&this.options.range===!0&&("min"===i?(this.options.value=this._values(0),this.options.values=null):"max"===i&&(this.options.value=this._values(this.options.values.length-1),this.options.values=null)),t.isArray(this.options.values)&&(s=this.options.values.length),"disabled"===e&&this.element.toggleClass("ui-state-disabled",!!i),this._super(e,i),e){case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue(),this.handles.css("horizontal"===i?"bottom":"left","");break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":for(this._animateOff=!0,this._refreshValue(),n=0;s>n;n+=1)this._change(null,n);this._animateOff=!1;break;case"step":case"min":case"max":this._animateOff=!0,this._calculateNewMax(),this._refreshValue(),this._animateOff=!1;break;case"range":this._animateOff=!0,this._refresh(),this._animateOff=!1}},_value:function(){var t=this.options.value;return t=this._trimAlignValue(t)},_values:function(t){var e,i,n;if(arguments.length)return e=this.options.values[t],e=this._trimAlignValue(e);if(this.options.values&&this.options.values.length){for(i=this.options.values.slice(),n=0;i.length>n;n+=1)i[n]=this._trimAlignValue(i[n]);return i}return[]},_trimAlignValue:function(t){if(this._valueMin()>=t)return this._valueMin();if(t>=this._valueMax())return this._valueMax();var e=this.options.step>0?this.options.step:1,i=(t-this._valueMin())%e,n=t-i;return 2*Math.abs(i)>=e&&(n+=i>0?e:-e),parseFloat(n.toFixed(5))},_calculateNewMax:function(){var t=this.options.max,e=this._valueMin(),i=this.options.step,n=Math.floor(+(t-e).toFixed(this._precision())/i)*i;t=n+e,this.max=parseFloat(t.toFixed(this._precision()))},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_valueMin:function(){return this.options.min},_valueMax:function(){return this.max},_refreshValue:function(){var e,i,n,s,o,a=this.options.range,r=this.options,l=this,h=!this._animateOff&&r.animate,c={};this.options.values&&this.options.values.length?this.handles.each(function(n){i=100*((l.values(n)-l._valueMin())/(l._valueMax()-l._valueMin())),c["horizontal"===l.orientation?"left":"bottom"]=i+"%",t(this).stop(1,1)[h?"animate":"css"](c,r.animate),l.options.range===!0&&("horizontal"===l.orientation?(0===n&&l.range.stop(1,1)[h?"animate":"css"]({left:i+"%"},r.animate),1===n&&l.range[h?"animate":"css"]({width:i-e+"%"},{queue:!1,duration:r.animate})):(0===n&&l.range.stop(1,1)[h?"animate":"css"]({bottom:i+"%"},r.animate),1===n&&l.range[h?"animate":"css"]({height:i-e+"%"},{queue:!1,duration:r.animate}))),e=i}):(n=this.value(),s=this._valueMin(),o=this._valueMax(),i=o!==s?100*((n-s)/(o-s)):0,c["horizontal"===this.orientation?"left":"bottom"]=i+"%",this.handle.stop(1,1)[h?"animate":"css"](c,r.animate),"min"===a&&"horizontal"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({width:i+"%"},r.animate),"max"===a&&"horizontal"===this.orientation&&this.range[h?"animate":"css"]({width:100-i+"%"},{queue:!1,duration:r.animate}),"min"===a&&"vertical"===this.orientation&&this.range.stop(1,1)[h?"animate":"css"]({height:i+"%"},r.animate),"max"===a&&"vertical"===this.orientation&&this.range[h?"animate":"css"]({height:100-i+"%"},{queue:!1,duration:r.animate}))},_handleEvents:{keydown:function(e){var i,n,s,o,a=t(e.target).data("ui-slider-handle-index");switch(e.keyCode){case t.ui.keyCode.HOME:case t.ui.keyCode.END:case t.ui.keyCode.PAGE_UP:case t.ui.keyCode.PAGE_DOWN:case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(e.preventDefault(),!this._keySliding&&(this._keySliding=!0,t(e.target).addClass("ui-state-active"),i=this._start(e,a),i===!1))return}switch(o=this.options.step,n=s=this.options.values&&this.options.values.length?this.values(a):this.value(),e.keyCode){case t.ui.keyCode.HOME:s=this._valueMin();break;case t.ui.keyCode.END:s=this._valueMax();break;case t.ui.keyCode.PAGE_UP:s=this._trimAlignValue(n+(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(n-(this._valueMax()-this._valueMin())/this.numPages);break;case t.ui.keyCode.UP:case t.ui.keyCode.RIGHT:if(n===this._valueMax())return;s=this._trimAlignValue(n+o);break;case t.ui.keyCode.DOWN:case t.ui.keyCode.LEFT:if(n===this._valueMin())return;s=this._trimAlignValue(n-o)}this._slide(e,a,s)},keyup:function(e){var i=t(e.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(e,i),this._change(e,i),t(e.target).removeClass("ui-state-active"))}}}),t.widget("ui.sortable",t.ui.mouse,{version:"1.11.4",widgetEventPrefix:"sort",ready:!1,options:{appendTo:"parent",axis:!1,connectWith:!1,containment:!1,cursor:"auto",cursorAt:!1,dropOnEmpty:!0,forcePlaceholderSize:!1,forceHelperSize:!1,grid:!1,handle:!1,helper:"original",items:"> *",opacity:!1,placeholder:!1,revert:!1,scroll:!0,scrollSensitivity:20,scrollSpeed:20,scope:"default",tolerance:"intersect",zIndex:1e3,activate:null,beforeStop:null,change:null,deactivate:null,out:null,over:null,receive:null,remove:null,sort:null,start:null,stop:null,update:null},_isOverAxis:function(t,e,i){return t>=e&&e+i>t},_isFloating:function(t){return/left|right/.test(t.css("float"))||/inline|table-cell/.test(t.css("display"))},_create:function(){this.containerCache={},this.element.addClass("ui-sortable"),this.refresh(),this.offset=this.element.offset(),this._mouseInit(),this._setHandleClassName(),this.ready=!0},_setOption:function(t,e){this._super(t,e),"handle"===t&&this._setHandleClassName()},_setHandleClassName:function(){this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"),t.each(this.items,function(){(this.instance.options.handle?this.item.find(this.instance.options.handle):this.item).addClass("ui-sortable-handle")})},_destroy:function(){this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"),this._mouseDestroy();for(var t=this.items.length-1;t>=0;t--)this.items[t].item.removeData(this.widgetName+"-item");return this},_mouseCapture:function(e,i){var n=null,s=!1,o=this;return!this.reverting&&(!this.options.disabled&&"static"!==this.options.type&&(this._refreshItems(e),t(e.target).parents().each(function(){return t.data(this,o.widgetName+"-item")===o?(n=t(this),!1):void 0}),t.data(e.target,o.widgetName+"-item")===o&&(n=t(e.target)),!!n&&(!(this.options.handle&&!i&&(t(this.options.handle,n).find("*").addBack().each(function(){this===e.target&&(s=!0)}),!s))&&(this.currentItem=n,this._removeCurrentsFromItems(),!0))))},_mouseStart:function(e,i,n){var s,o,a=this.options;if(this.currentContainer=this,this.refreshPositions(),this.helper=this._createHelper(e),this._cacheHelperProportions(),this._cacheMargins(),this.scrollParent=this.helper.scrollParent(),this.offset=this.currentItem.offset(),this.offset={top:this.offset.top-this.margins.top,left:this.offset.left-this.margins.left},t.extend(this.offset,{click:{left:e.pageX-this.offset.left,top:e.pageY-this.offset.top},parent:this._getParentOffset(),relative:this._getRelativeOffset()}),this.helper.css("position","absolute"),this.cssPosition=this.helper.css("position"),this.originalPosition=this._generatePosition(e),this.originalPageX=e.pageX,this.originalPageY=e.pageY,a.cursorAt&&this._adjustOffsetFromHelper(a.cursorAt),this.domPosition={prev:this.currentItem.prev()[0],parent:this.currentItem.parent()[0]},this.helper[0]!==this.currentItem[0]&&this.currentItem.hide(),this._createPlaceholder(),a.containment&&this._setContainment(),a.cursor&&"auto"!==a.cursor&&(o=this.document.find("body"),this.storedCursor=o.css("cursor"),o.css("cursor",a.cursor),this.storedStylesheet=t("<style>*{ cursor: "+a.cursor+" !important; }</style>").appendTo(o)),a.opacity&&(this.helper.css("opacity")&&(this._storedOpacity=this.helper.css("opacity")),this.helper.css("opacity",a.opacity)),a.zIndex&&(this.helper.css("zIndex")&&(this._storedZIndex=this.helper.css("zIndex")),this.helper.css("zIndex",a.zIndex)),this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName&&(this.overflowOffset=this.scrollParent.offset()),this._trigger("start",e,this._uiHash()),this._preserveHelperProportions||this._cacheHelperProportions(),!n)for(s=this.containers.length-1;s>=0;s--)this.containers[s]._trigger("activate",e,this._uiHash(this));return t.ui.ddmanager&&(t.ui.ddmanager.current=this),t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e),this.dragging=!0,this.helper.addClass("ui-sortable-helper"),this._mouseDrag(e),!0},_mouseDrag:function(e){var i,n,s,o,a=this.options,r=!1;for(this.position=this._generatePosition(e),this.positionAbs=this._convertPositionTo("absolute"),this.lastPositionAbs||(this.lastPositionAbs=this.positionAbs),this.options.scroll&&(this.scrollParent[0]!==this.document[0]&&"HTML"!==this.scrollParent[0].tagName?(this.overflowOffset.top+this.scrollParent[0].offsetHeight-e.pageY<a.scrollSensitivity?this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop+a.scrollSpeed:e.pageY-this.overflowOffset.top<a.scrollSensitivity&&(this.scrollParent[0].scrollTop=r=this.scrollParent[0].scrollTop-a.scrollSpeed),this.overflowOffset.left+this.scrollParent[0].offsetWidth-e.pageX<a.scrollSensitivity?this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft+a.scrollSpeed:e.pageX-this.overflowOffset.left<a.scrollSensitivity&&(this.scrollParent[0].scrollLeft=r=this.scrollParent[0].scrollLeft-a.scrollSpeed)):(e.pageY-this.document.scrollTop()<a.scrollSensitivity?r=this.document.scrollTop(this.document.scrollTop()-a.scrollSpeed):this.window.height()-(e.pageY-this.document.scrollTop())<a.scrollSensitivity&&(r=this.document.scrollTop(this.document.scrollTop()+a.scrollSpeed)),e.pageX-this.document.scrollLeft()<a.scrollSensitivity?r=this.document.scrollLeft(this.document.scrollLeft()-a.scrollSpeed):this.window.width()-(e.pageX-this.document.scrollLeft())<a.scrollSensitivity&&(r=this.document.scrollLeft(this.document.scrollLeft()+a.scrollSpeed))),r!==!1&&t.ui.ddmanager&&!a.dropBehaviour&&t.ui.ddmanager.prepareOffsets(this,e)),this.positionAbs=this._convertPositionTo("absolute"),this.options.axis&&"y"===this.options.axis||(this.helper[0].style.left=this.position.left+"px"),this.options.axis&&"x"===this.options.axis||(this.helper[0].style.top=this.position.top+"px"),i=this.items.length-1;i>=0;i--)if(n=this.items[i],s=n.item[0],o=this._intersectsWithPointer(n),o&&n.instance===this.currentContainer&&s!==this.currentItem[0]&&this.placeholder[1===o?"next":"prev"]()[0]!==s&&!t.contains(this.placeholder[0],s)&&("semi-dynamic"!==this.options.type||!t.contains(this.element[0],s))){if(this.direction=1===o?"down":"up","pointer"!==this.options.tolerance&&!this._intersectsWithSides(n))break;this._rearrange(e,n),this._trigger("change",e,this._uiHash());break}return this._contactContainers(e),t.ui.ddmanager&&t.ui.ddmanager.drag(this,e),this._trigger("sort",e,this._uiHash()),this.lastPositionAbs=this.positionAbs,!1},_mouseStop:function(e,i){if(e){if(t.ui.ddmanager&&!this.options.dropBehaviour&&t.ui.ddmanager.drop(this,e),this.options.revert){var n=this,s=this.placeholder.offset(),o=this.options.axis,a={};o&&"x"!==o||(a.left=s.left-this.offset.parent.left-this.margins.left+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollLeft)),o&&"y"!==o||(a.top=s.top-this.offset.parent.top-this.margins.top+(this.offsetParent[0]===this.document[0].body?0:this.offsetParent[0].scrollTop)),this.reverting=!0,t(this.helper).animate(a,parseInt(this.options.revert,10)||500,function(){n._clear(e)})}else this._clear(e,i);return!1}},cancel:function(){if(this.dragging){this._mouseUp({target:null}),"original"===this.options.helper?this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper"):this.currentItem.show();for(var e=this.containers.length-1;e>=0;e--)this.containers[e]._trigger("deactivate",null,this._uiHash(this)),this.containers[e].containerCache.over&&(this.containers[e]._trigger("out",null,this._uiHash(this)),this.containers[e].containerCache.over=0)}return this.placeholder&&(this.placeholder[0].parentNode&&this.placeholder[0].parentNode.removeChild(this.placeholder[0]),"original"!==this.options.helper&&this.helper&&this.helper[0].parentNode&&this.helper.remove(),t.extend(this,{helper:null,dragging:!1,reverting:!1,_noFinalSort:null}),this.domPosition.prev?t(this.domPosition.prev).after(this.currentItem):t(this.domPosition.parent).prepend(this.currentItem)),this},serialize:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},t(i).each(function(){var i=(t(e.item||this).attr(e.attribute||"id")||"").match(e.expression||/(.+)[\-=_](.+)/);i&&n.push((e.key||i[1]+"[]")+"="+(e.key&&e.expression?i[1]:i[2]))}),!n.length&&e.key&&n.push(e.key+"="),n.join("&")},toArray:function(e){var i=this._getItemsAsjQuery(e&&e.connected),n=[];return e=e||{},i.each(function(){n.push(t(e.item||this).attr(e.attribute||"id")||"")}),n},_intersectsWith:function(t){var e=this.positionAbs.left,i=e+this.helperProportions.width,n=this.positionAbs.top,s=n+this.helperProportions.height,o=t.left,a=o+t.width,r=t.top,l=r+t.height,h=this.offset.click.top,c=this.offset.click.left,u="x"===this.options.axis||n+h>r&&l>n+h,d="y"===this.options.axis||e+c>o&&a>e+c,f=u&&d;
return"pointer"===this.options.tolerance||this.options.forcePointerForContainers||"pointer"!==this.options.tolerance&&this.helperProportions[this.floating?"width":"height"]>t[this.floating?"width":"height"]?f:e+this.helperProportions.width/2>o&&a>i-this.helperProportions.width/2&&n+this.helperProportions.height/2>r&&l>s-this.helperProportions.height/2},_intersectsWithPointer:function(t){var e="x"===this.options.axis||this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top,t.height),i="y"===this.options.axis||this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left,t.width),n=e&&i,s=this._getDragVerticalDirection(),o=this._getDragHorizontalDirection();return!!n&&(this.floating?o&&"right"===o||"down"===s?2:1:s&&("down"===s?2:1))},_intersectsWithSides:function(t){var e=this._isOverAxis(this.positionAbs.top+this.offset.click.top,t.top+t.height/2,t.height),i=this._isOverAxis(this.positionAbs.left+this.offset.click.left,t.left+t.width/2,t.width),n=this._getDragVerticalDirection(),s=this._getDragHorizontalDirection();return this.floating&&s?"right"===s&&i||"left"===s&&!i:n&&("down"===n&&e||"up"===n&&!e)},_getDragVerticalDirection:function(){var t=this.positionAbs.top-this.lastPositionAbs.top;return 0!==t&&(t>0?"down":"up")},_getDragHorizontalDirection:function(){var t=this.positionAbs.left-this.lastPositionAbs.left;return 0!==t&&(t>0?"right":"left")},refresh:function(t){return this._refreshItems(t),this._setHandleClassName(),this.refreshPositions(),this},_connectWith:function(){var t=this.options;return t.connectWith.constructor===String?[t.connectWith]:t.connectWith},_getItemsAsjQuery:function(e){function i(){r.push(this)}var n,s,o,a,r=[],l=[],h=this._connectWith();if(h&&e)for(n=h.length-1;n>=0;n--)for(o=t(h[n],this.document[0]),s=o.length-1;s>=0;s--)a=t.data(o[s],this.widgetFullName),a&&a!==this&&!a.options.disabled&&l.push([t.isFunction(a.options.items)?a.options.items.call(a.element):t(a.options.items,a.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),a]);for(l.push([t.isFunction(this.options.items)?this.options.items.call(this.element,null,{options:this.options,item:this.currentItem}):t(this.options.items,this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"),this]),n=l.length-1;n>=0;n--)l[n][0].each(i);return t(r)},_removeCurrentsFromItems:function(){var e=this.currentItem.find(":data("+this.widgetName+"-item)");this.items=t.grep(this.items,function(t){for(var i=0;e.length>i;i++)if(e[i]===t.item[0])return!1;return!0})},_refreshItems:function(e){this.items=[],this.containers=[this];var i,n,s,o,a,r,l,h,c=this.items,u=[[t.isFunction(this.options.items)?this.options.items.call(this.element[0],e,{item:this.currentItem}):t(this.options.items,this.element),this]],d=this._connectWith();if(d&&this.ready)for(i=d.length-1;i>=0;i--)for(s=t(d[i],this.document[0]),n=s.length-1;n>=0;n--)o=t.data(s[n],this.widgetFullName),o&&o!==this&&!o.options.disabled&&(u.push([t.isFunction(o.options.items)?o.options.items.call(o.element[0],e,{item:this.currentItem}):t(o.options.items,o.element),o]),this.containers.push(o));for(i=u.length-1;i>=0;i--)for(a=u[i][1],r=u[i][0],n=0,h=r.length;h>n;n++)l=t(r[n]),l.data(this.widgetName+"-item",a),c.push({item:l,instance:a,width:0,height:0,left:0,top:0})},refreshPositions:function(e){this.floating=!!this.items.length&&("x"===this.options.axis||this._isFloating(this.items[0].item)),this.offsetParent&&this.helper&&(this.offset.parent=this._getParentOffset());var i,n,s,o;for(i=this.items.length-1;i>=0;i--)n=this.items[i],n.instance!==this.currentContainer&&this.currentContainer&&n.item[0]!==this.currentItem[0]||(s=this.options.toleranceElement?t(this.options.toleranceElement,n.item):n.item,e||(n.width=s.outerWidth(),n.height=s.outerHeight()),o=s.offset(),n.left=o.left,n.top=o.top);if(this.options.custom&&this.options.custom.refreshContainers)this.options.custom.refreshContainers.call(this);else for(i=this.containers.length-1;i>=0;i--)o=this.containers[i].element.offset(),this.containers[i].containerCache.left=o.left,this.containers[i].containerCache.top=o.top,this.containers[i].containerCache.width=this.containers[i].element.outerWidth(),this.containers[i].containerCache.height=this.containers[i].element.outerHeight();return this},_createPlaceholder:function(e){e=e||this;var i,n=e.options;n.placeholder&&n.placeholder.constructor!==String||(i=n.placeholder,n.placeholder={element:function(){var n=e.currentItem[0].nodeName.toLowerCase(),s=t("<"+n+">",e.document[0]).addClass(i||e.currentItem[0].className+" ui-sortable-placeholder").removeClass("ui-sortable-helper");return"tbody"===n?e._createTrPlaceholder(e.currentItem.find("tr").eq(0),t("<tr>",e.document[0]).appendTo(s)):"tr"===n?e._createTrPlaceholder(e.currentItem,s):"img"===n&&s.attr("src",e.currentItem.attr("src")),i||s.css("visibility","hidden"),s},update:function(t,s){(!i||n.forcePlaceholderSize)&&(s.height()||s.height(e.currentItem.innerHeight()-parseInt(e.currentItem.css("paddingTop")||0,10)-parseInt(e.currentItem.css("paddingBottom")||0,10)),s.width()||s.width(e.currentItem.innerWidth()-parseInt(e.currentItem.css("paddingLeft")||0,10)-parseInt(e.currentItem.css("paddingRight")||0,10)))}}),e.placeholder=t(n.placeholder.element.call(e.element,e.currentItem)),e.currentItem.after(e.placeholder),n.placeholder.update(e,e.placeholder)},_createTrPlaceholder:function(e,i){var n=this;e.children().each(function(){t("<td>&#160;</td>",n.document[0]).attr("colspan",t(this).attr("colspan")||1).appendTo(i)})},_contactContainers:function(e){var i,n,s,o,a,r,l,h,c,u,d=null,f=null;for(i=this.containers.length-1;i>=0;i--)if(!t.contains(this.currentItem[0],this.containers[i].element[0]))if(this._intersectsWith(this.containers[i].containerCache)){if(d&&t.contains(this.containers[i].element[0],d.element[0]))continue;d=this.containers[i],f=i}else this.containers[i].containerCache.over&&(this.containers[i]._trigger("out",e,this._uiHash(this)),this.containers[i].containerCache.over=0);if(d)if(1===this.containers.length)this.containers[f].containerCache.over||(this.containers[f]._trigger("over",e,this._uiHash(this)),this.containers[f].containerCache.over=1);else{for(s=1e4,o=null,c=d.floating||this._isFloating(this.currentItem),a=c?"left":"top",r=c?"width":"height",u=c?"clientX":"clientY",n=this.items.length-1;n>=0;n--)t.contains(this.containers[f].element[0],this.items[n].item[0])&&this.items[n].item[0]!==this.currentItem[0]&&(l=this.items[n].item.offset()[a],h=!1,e[u]-l>this.items[n][r]/2&&(h=!0),s>Math.abs(e[u]-l)&&(s=Math.abs(e[u]-l),o=this.items[n],this.direction=h?"up":"down"));if(!o&&!this.options.dropOnEmpty)return;if(this.currentContainer===this.containers[f])return void(this.currentContainer.containerCache.over||(this.containers[f]._trigger("over",e,this._uiHash()),this.currentContainer.containerCache.over=1));o?this._rearrange(e,o,null,!0):this._rearrange(e,null,this.containers[f].element,!0),this._trigger("change",e,this._uiHash()),this.containers[f]._trigger("change",e,this._uiHash(this)),this.currentContainer=this.containers[f],this.options.placeholder.update(this.currentContainer,this.placeholder),this.containers[f]._trigger("over",e,this._uiHash(this)),this.containers[f].containerCache.over=1}},_createHelper:function(e){var i=this.options,n=t.isFunction(i.helper)?t(i.helper.apply(this.element[0],[e,this.currentItem])):"clone"===i.helper?this.currentItem.clone():this.currentItem;return n.parents("body").length||t("parent"!==i.appendTo?i.appendTo:this.currentItem[0].parentNode)[0].appendChild(n[0]),n[0]===this.currentItem[0]&&(this._storedCSS={width:this.currentItem[0].style.width,height:this.currentItem[0].style.height,position:this.currentItem.css("position"),top:this.currentItem.css("top"),left:this.currentItem.css("left")}),(!n[0].style.width||i.forceHelperSize)&&n.width(this.currentItem.width()),(!n[0].style.height||i.forceHelperSize)&&n.height(this.currentItem.height()),n},_adjustOffsetFromHelper:function(e){"string"==typeof e&&(e=e.split(" ")),t.isArray(e)&&(e={left:+e[0],top:+e[1]||0}),"left"in e&&(this.offset.click.left=e.left+this.margins.left),"right"in e&&(this.offset.click.left=this.helperProportions.width-e.right+this.margins.left),"top"in e&&(this.offset.click.top=e.top+this.margins.top),"bottom"in e&&(this.offset.click.top=this.helperProportions.height-e.bottom+this.margins.top)},_getParentOffset:function(){this.offsetParent=this.helper.offsetParent();var e=this.offsetParent.offset();return"absolute"===this.cssPosition&&this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])&&(e.left+=this.scrollParent.scrollLeft(),e.top+=this.scrollParent.scrollTop()),(this.offsetParent[0]===this.document[0].body||this.offsetParent[0].tagName&&"html"===this.offsetParent[0].tagName.toLowerCase()&&t.ui.ie)&&(e={top:0,left:0}),{top:e.top+(parseInt(this.offsetParent.css("borderTopWidth"),10)||0),left:e.left+(parseInt(this.offsetParent.css("borderLeftWidth"),10)||0)}},_getRelativeOffset:function(){if("relative"===this.cssPosition){var t=this.currentItem.position();return{top:t.top-(parseInt(this.helper.css("top"),10)||0)+this.scrollParent.scrollTop(),left:t.left-(parseInt(this.helper.css("left"),10)||0)+this.scrollParent.scrollLeft()}}return{top:0,left:0}},_cacheMargins:function(){this.margins={left:parseInt(this.currentItem.css("marginLeft"),10)||0,top:parseInt(this.currentItem.css("marginTop"),10)||0}},_cacheHelperProportions:function(){this.helperProportions={width:this.helper.outerWidth(),height:this.helper.outerHeight()}},_setContainment:function(){var e,i,n,s=this.options;"parent"===s.containment&&(s.containment=this.helper[0].parentNode),("document"===s.containment||"window"===s.containment)&&(this.containment=[0-this.offset.relative.left-this.offset.parent.left,0-this.offset.relative.top-this.offset.parent.top,"document"===s.containment?this.document.width():this.window.width()-this.helperProportions.width-this.margins.left,("document"===s.containment?this.document.width():this.window.height()||this.document[0].body.parentNode.scrollHeight)-this.helperProportions.height-this.margins.top]),/^(document|window|parent)$/.test(s.containment)||(e=t(s.containment)[0],i=t(s.containment).offset(),n="hidden"!==t(e).css("overflow"),this.containment=[i.left+(parseInt(t(e).css("borderLeftWidth"),10)||0)+(parseInt(t(e).css("paddingLeft"),10)||0)-this.margins.left,i.top+(parseInt(t(e).css("borderTopWidth"),10)||0)+(parseInt(t(e).css("paddingTop"),10)||0)-this.margins.top,i.left+(n?Math.max(e.scrollWidth,e.offsetWidth):e.offsetWidth)-(parseInt(t(e).css("borderLeftWidth"),10)||0)-(parseInt(t(e).css("paddingRight"),10)||0)-this.helperProportions.width-this.margins.left,i.top+(n?Math.max(e.scrollHeight,e.offsetHeight):e.offsetHeight)-(parseInt(t(e).css("borderTopWidth"),10)||0)-(parseInt(t(e).css("paddingBottom"),10)||0)-this.helperProportions.height-this.margins.top])},_convertPositionTo:function(e,i){i||(i=this.position);var n="absolute"===e?1:-1,s="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,o=/(html|body)/i.test(s[0].tagName);return{top:i.top+this.offset.relative.top*n+this.offset.parent.top*n-("fixed"===this.cssPosition?-this.scrollParent.scrollTop():o?0:s.scrollTop())*n,left:i.left+this.offset.relative.left*n+this.offset.parent.left*n-("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():o?0:s.scrollLeft())*n}},_generatePosition:function(e){var i,n,s=this.options,o=e.pageX,a=e.pageY,r="absolute"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&t.contains(this.scrollParent[0],this.offsetParent[0])?this.scrollParent:this.offsetParent,l=/(html|body)/i.test(r[0].tagName);return"relative"!==this.cssPosition||this.scrollParent[0]!==this.document[0]&&this.scrollParent[0]!==this.offsetParent[0]||(this.offset.relative=this._getRelativeOffset()),this.originalPosition&&(this.containment&&(e.pageX-this.offset.click.left<this.containment[0]&&(o=this.containment[0]+this.offset.click.left),e.pageY-this.offset.click.top<this.containment[1]&&(a=this.containment[1]+this.offset.click.top),e.pageX-this.offset.click.left>this.containment[2]&&(o=this.containment[2]+this.offset.click.left),e.pageY-this.offset.click.top>this.containment[3]&&(a=this.containment[3]+this.offset.click.top)),s.grid&&(i=this.originalPageY+Math.round((a-this.originalPageY)/s.grid[1])*s.grid[1],a=this.containment?i-this.offset.click.top>=this.containment[1]&&i-this.offset.click.top<=this.containment[3]?i:i-this.offset.click.top>=this.containment[1]?i-s.grid[1]:i+s.grid[1]:i,n=this.originalPageX+Math.round((o-this.originalPageX)/s.grid[0])*s.grid[0],o=this.containment?n-this.offset.click.left>=this.containment[0]&&n-this.offset.click.left<=this.containment[2]?n:n-this.offset.click.left>=this.containment[0]?n-s.grid[0]:n+s.grid[0]:n)),{top:a-this.offset.click.top-this.offset.relative.top-this.offset.parent.top+("fixed"===this.cssPosition?-this.scrollParent.scrollTop():l?0:r.scrollTop()),left:o-this.offset.click.left-this.offset.relative.left-this.offset.parent.left+("fixed"===this.cssPosition?-this.scrollParent.scrollLeft():l?0:r.scrollLeft())}},_rearrange:function(t,e,i,n){i?i[0].appendChild(this.placeholder[0]):e.item[0].parentNode.insertBefore(this.placeholder[0],"down"===this.direction?e.item[0]:e.item[0].nextSibling),this.counter=this.counter?++this.counter:1;var s=this.counter;this._delay(function(){s===this.counter&&this.refreshPositions(!n)})},_clear:function(t,e){function i(t,e,i){return function(n){i._trigger(t,n,e._uiHash(e))}}this.reverting=!1;var n,s=[];if(!this._noFinalSort&&this.currentItem.parent().length&&this.placeholder.before(this.currentItem),this._noFinalSort=null,this.helper[0]===this.currentItem[0]){for(n in this._storedCSS)("auto"===this._storedCSS[n]||"static"===this._storedCSS[n])&&(this._storedCSS[n]="");this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")}else this.currentItem.show();for(this.fromOutside&&!e&&s.push(function(t){this._trigger("receive",t,this._uiHash(this.fromOutside))}),!this.fromOutside&&this.domPosition.prev===this.currentItem.prev().not(".ui-sortable-helper")[0]&&this.domPosition.parent===this.currentItem.parent()[0]||e||s.push(function(t){this._trigger("update",t,this._uiHash())}),this!==this.currentContainer&&(e||(s.push(function(t){this._trigger("remove",t,this._uiHash())}),s.push(function(t){return function(e){t._trigger("receive",e,this._uiHash(this))}}.call(this,this.currentContainer)),s.push(function(t){return function(e){t._trigger("update",e,this._uiHash(this))}}.call(this,this.currentContainer)))),n=this.containers.length-1;n>=0;n--)e||s.push(i("deactivate",this,this.containers[n])),this.containers[n].containerCache.over&&(s.push(i("out",this,this.containers[n])),this.containers[n].containerCache.over=0);if(this.storedCursor&&(this.document.find("body").css("cursor",this.storedCursor),this.storedStylesheet.remove()),this._storedOpacity&&this.helper.css("opacity",this._storedOpacity),this._storedZIndex&&this.helper.css("zIndex","auto"===this._storedZIndex?"":this._storedZIndex),this.dragging=!1,e||this._trigger("beforeStop",t,this._uiHash()),this.placeholder[0].parentNode.removeChild(this.placeholder[0]),this.cancelHelperRemoval||(this.helper[0]!==this.currentItem[0]&&this.helper.remove(),this.helper=null),!e){for(n=0;s.length>n;n++)s[n].call(this,t);this._trigger("stop",t,this._uiHash())}return this.fromOutside=!1,!this.cancelHelperRemoval},_trigger:function(){t.Widget.prototype._trigger.apply(this,arguments)===!1&&this.cancel()},_uiHash:function(e){var i=e||this;return{helper:i.helper,placeholder:i.placeholder||t([]),position:i.position,originalPosition:i.originalPosition,offset:i.positionAbs,item:i.currentItem,sender:e?e.element:null}}}),t.widget("ui.spinner",{version:"1.11.4",defaultElement:"<input>",widgetEventPrefix:"spin",options:{culture:null,icons:{down:"ui-icon-triangle-1-s",up:"ui-icon-triangle-1-n"},incremental:!0,max:null,min:null,numberFormat:null,page:10,step:1,change:null,spin:null,start:null,stop:null},_create:function(){this._setOption("max",this.options.max),this._setOption("min",this.options.min),this._setOption("step",this.options.step),""!==this.value()&&this._value(this.element.val(),!0),this._draw(),this._on(this._events),this._refresh(),this._on(this.window,{beforeunload:function(){this.element.removeAttr("autocomplete")}})},_getCreateOptions:function(){var e={},i=this.element;return t.each(["min","max","step"],function(t,n){var s=i.attr(n);void 0!==s&&s.length&&(e[n]=s)}),e},_events:{keydown:function(t){this._start(t)&&this._keydown(t)&&t.preventDefault()},keyup:"_stop",focus:function(){this.previous=this.element.val()},blur:function(t){return this.cancelBlur?void delete this.cancelBlur:(this._stop(),this._refresh(),void(this.previous!==this.element.val()&&this._trigger("change",t)))},mousewheel:function(t,e){if(e){if(!this.spinning&&!this._start(t))return!1;this._spin((e>0?1:-1)*this.options.step,t),clearTimeout(this.mousewheelTimer),this.mousewheelTimer=this._delay(function(){this.spinning&&this._stop(t)},100),t.preventDefault()}},"mousedown .ui-spinner-button":function(e){function i(){var t=this.element[0]===this.document[0].activeElement;t||(this.element.focus(),this.previous=n,this._delay(function(){this.previous=n}))}var n;n=this.element[0]===this.document[0].activeElement?this.previous:this.element.val(),e.preventDefault(),i.call(this),this.cancelBlur=!0,this._delay(function(){delete this.cancelBlur,i.call(this)}),this._start(e)!==!1&&this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e)},"mouseup .ui-spinner-button":"_stop","mouseenter .ui-spinner-button":function(e){return t(e.currentTarget).hasClass("ui-state-active")?this._start(e)!==!1&&void this._repeat(null,t(e.currentTarget).hasClass("ui-spinner-up")?1:-1,e):void 0},"mouseleave .ui-spinner-button":"_stop"},_draw:function(){var t=this.uiSpinner=this.element.addClass("ui-spinner-input").attr("autocomplete","off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());this.element.attr("role","spinbutton"),this.buttons=t.find(".ui-spinner-button").attr("tabIndex",-1).button().removeClass("ui-corner-all"),this.buttons.height()>Math.ceil(.5*t.height())&&t.height()>0&&t.height(t.height()),this.options.disabled&&this.disable()},_keydown:function(e){var i=this.options,n=t.ui.keyCode;switch(e.keyCode){case n.UP:return this._repeat(null,1,e),!0;case n.DOWN:return this._repeat(null,-1,e),!0;case n.PAGE_UP:return this._repeat(null,i.page,e),!0;case n.PAGE_DOWN:return this._repeat(null,-i.page,e),!0}return!1},_uiSpinnerHtml:function(){return"<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"},_buttonHtml:function(){return"<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon "+this.options.icons.up+"'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon "+this.options.icons.down+"'>&#9660;</span></a>"},_start:function(t){return!(!this.spinning&&this._trigger("start",t)===!1)&&(this.counter||(this.counter=1),this.spinning=!0,!0)},_repeat:function(t,e,i){t=t||500,clearTimeout(this.timer),this.timer=this._delay(function(){this._repeat(40,e,i)},t),this._spin(e*this.options.step,i)},_spin:function(t,e){var i=this.value()||0;this.counter||(this.counter=1),i=this._adjustValue(i+t*this._increment(this.counter)),this.spinning&&this._trigger("spin",e,{value:i})===!1||(this._value(i),this.counter++)},_increment:function(e){var i=this.options.incremental;return i?t.isFunction(i)?i(e):Math.floor(e*e*e/5e4-e*e/500+17*e/200+1):1},_precision:function(){var t=this._precisionOf(this.options.step);return null!==this.options.min&&(t=Math.max(t,this._precisionOf(this.options.min))),t},_precisionOf:function(t){var e=""+t,i=e.indexOf(".");return-1===i?0:e.length-i-1},_adjustValue:function(t){var e,i,n=this.options;return e=null!==n.min?n.min:0,i=t-e,i=Math.round(i/n.step)*n.step,t=e+i,t=parseFloat(t.toFixed(this._precision())),null!==n.max&&t>n.max?n.max:null!==n.min&&n.min>t?n.min:t},_stop:function(t){this.spinning&&(clearTimeout(this.timer),clearTimeout(this.mousewheelTimer),this.counter=0,this.spinning=!1,this._trigger("stop",t))},_setOption:function(t,e){if("culture"===t||"numberFormat"===t){var i=this._parse(this.element.val());return this.options[t]=e,void this.element.val(this._format(i))}("max"===t||"min"===t||"step"===t)&&"string"==typeof e&&(e=this._parse(e)),"icons"===t&&(this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(e.up),this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(e.down)),this._super(t,e),"disabled"===t&&(this.widget().toggleClass("ui-state-disabled",!!e),this.element.prop("disabled",!!e),this.buttons.button(e?"disable":"enable"))},_setOptions:l(function(t){this._super(t)}),_parse:function(t){return"string"==typeof t&&""!==t&&(t=window.Globalize&&this.options.numberFormat?Globalize.parseFloat(t,10,this.options.culture):+t),""===t||isNaN(t)?null:t},_format:function(t){return""===t?"":window.Globalize&&this.options.numberFormat?Globalize.format(t,this.options.numberFormat,this.options.culture):t},_refresh:function(){this.element.attr({"aria-valuemin":this.options.min,"aria-valuemax":this.options.max,"aria-valuenow":this._parse(this.element.val())})},isValid:function(){var t=this.value();return null!==t&&t===this._adjustValue(t)},_value:function(t,e){var i;""!==t&&(i=this._parse(t),null!==i&&(e||(i=this._adjustValue(i)),t=this._format(i))),this.element.val(t),this._refresh()},_destroy:function(){this.element.removeClass("ui-spinner-input").prop("disabled",!1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"),this.uiSpinner.replaceWith(this.element)},stepUp:l(function(t){this._stepUp(t)}),_stepUp:function(t){this._start()&&(this._spin((t||1)*this.options.step),this._stop())},stepDown:l(function(t){this._stepDown(t)}),_stepDown:function(t){this._start()&&(this._spin((t||1)*-this.options.step),this._stop())},pageUp:l(function(t){this._stepUp((t||1)*this.options.page)}),pageDown:l(function(t){this._stepDown((t||1)*this.options.page)}),value:function(t){return arguments.length?void l(this._value).call(this,t):this._parse(this.element.val())},widget:function(){return this.uiSpinner}}),t.widget("ui.tabs",{version:"1.11.4",delay:300,options:{active:null,collapsible:!1,event:"click",heightStyle:"content",hide:null,show:null,activate:null,beforeActivate:null,beforeLoad:null,load:null},_isLocal:function(){var t=/#.*$/;return function(e){var i,n;e=e.cloneNode(!1),i=e.href.replace(t,""),n=location.href.replace(t,"");try{i=decodeURIComponent(i)}catch(s){}try{n=decodeURIComponent(n)}catch(s){}return e.hash.length>1&&i===n}}(),_create:function(){var e=this,i=this.options;this.running=!1,this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible",i.collapsible),this._processTabs(),i.active=this._initialActive(),t.isArray(i.disabled)&&(i.disabled=t.unique(i.disabled.concat(t.map(this.tabs.filter(".ui-state-disabled"),function(t){return e.tabs.index(t)}))).sort()),this.active=this.options.active!==!1&&this.anchors.length?this._findActive(i.active):t(),this._refresh(),this.active.length&&this.load(i.active)},_initialActive:function(){var e=this.options.active,i=this.options.collapsible,n=location.hash.substring(1);return null===e&&(n&&this.tabs.each(function(i,s){return t(s).attr("aria-controls")===n?(e=i,!1):void 0}),null===e&&(e=this.tabs.index(this.tabs.filter(".ui-tabs-active"))),(null===e||-1===e)&&(e=!!this.tabs.length&&0)),e!==!1&&(e=this.tabs.index(this.tabs.eq(e)),-1===e&&(e=!i&&0)),!i&&e===!1&&this.anchors.length&&(e=0),e},_getCreateEventData:function(){return{tab:this.active,panel:this.active.length?this._getPanelForTab(this.active):t()}},_tabKeydown:function(e){var i=t(this.document[0].activeElement).closest("li"),n=this.tabs.index(i),s=!0;if(!this._handlePageNav(e)){switch(e.keyCode){case t.ui.keyCode.RIGHT:case t.ui.keyCode.DOWN:n++;break;case t.ui.keyCode.UP:case t.ui.keyCode.LEFT:s=!1,n--;break;case t.ui.keyCode.END:n=this.anchors.length-1;break;case t.ui.keyCode.HOME:n=0;break;case t.ui.keyCode.SPACE:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n);case t.ui.keyCode.ENTER:return e.preventDefault(),clearTimeout(this.activating),void this._activate(n!==this.options.active&&n);default:return}e.preventDefault(),clearTimeout(this.activating),n=this._focusNextTab(n,s),e.ctrlKey||e.metaKey||(i.attr("aria-selected","false"),this.tabs.eq(n).attr("aria-selected","true"),this.activating=this._delay(function(){this.option("active",n)},this.delay))}},_panelKeydown:function(e){this._handlePageNav(e)||e.ctrlKey&&e.keyCode===t.ui.keyCode.UP&&(e.preventDefault(),this.active.focus())},_handlePageNav:function(e){return e.altKey&&e.keyCode===t.ui.keyCode.PAGE_UP?(this._activate(this._focusNextTab(this.options.active-1,!1)),!0):e.altKey&&e.keyCode===t.ui.keyCode.PAGE_DOWN?(this._activate(this._focusNextTab(this.options.active+1,!0)),!0):void 0},_findNextTab:function(e,i){function n(){return e>s&&(e=0),0>e&&(e=s),e}for(var s=this.tabs.length-1;-1!==t.inArray(n(),this.options.disabled);)e=i?e+1:e-1;return e},_focusNextTab:function(t,e){return t=this._findNextTab(t,e),this.tabs.eq(t).focus(),t},_setOption:function(t,e){return"active"===t?void this._activate(e):"disabled"===t?void this._setupDisabled(e):(this._super(t,e),"collapsible"===t&&(this.element.toggleClass("ui-tabs-collapsible",e),e||this.options.active!==!1||this._activate(0)),"event"===t&&this._setupEvents(e),void("heightStyle"===t&&this._setupHeightStyle(e)))},_sanitizeSelector:function(t){return t?t.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g,"\\$&"):""},refresh:function(){var e=this.options,i=this.tablist.children(":has(a[href])");e.disabled=t.map(i.filter(".ui-state-disabled"),function(t){return i.index(t)}),this._processTabs(),e.active!==!1&&this.anchors.length?this.active.length&&!t.contains(this.tablist[0],this.active[0])?this.tabs.length===e.disabled.length?(e.active=!1,this.active=t()):this._activate(this._findNextTab(Math.max(0,e.active-1),!1)):e.active=this.tabs.index(this.active):(e.active=!1,this.active=t()),this._refresh()},_refresh:function(){this._setupDisabled(this.options.disabled),this._setupEvents(this.options.event),this._setupHeightStyle(this.options.heightStyle),this.tabs.not(this.active).attr({"aria-selected":"false","aria-expanded":"false",tabIndex:-1}),this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden":"true"}),this.active.length?(this.active.addClass("ui-tabs-active ui-state-active").attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0}),this._getPanelForTab(this.active).show().attr({"aria-hidden":"false"})):this.tabs.eq(0).attr("tabIndex",0)},_processTabs:function(){var e=this,i=this.tabs,n=this.anchors,s=this.panels;this.tablist=this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role","tablist").delegate("> li","mousedown"+this.eventNamespace,function(e){t(this).is(".ui-state-disabled")&&e.preventDefault()}).delegate(".ui-tabs-anchor","focus"+this.eventNamespace,function(){t(this).closest("li").is(".ui-state-disabled")&&this.blur()}),this.tabs=this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({role:"tab",tabIndex:-1}),this.anchors=this.tabs.map(function(){return t("a",this)[0]}).addClass("ui-tabs-anchor").attr({role:"presentation",tabIndex:-1}),this.panels=t(),this.anchors.each(function(i,n){var s,o,a,r=t(n).uniqueId().attr("id"),l=t(n).closest("li"),h=l.attr("aria-controls");e._isLocal(n)?(s=n.hash,a=s.substring(1),o=e.element.find(e._sanitizeSelector(s))):(a=l.attr("aria-controls")||t({}).uniqueId()[0].id,s="#"+a,o=e.element.find(s),o.length||(o=e._createPanel(a),o.insertAfter(e.panels[i-1]||e.tablist)),o.attr("aria-live","polite")),o.length&&(e.panels=e.panels.add(o)),h&&l.data("ui-tabs-aria-controls",h),l.attr({"aria-controls":a,"aria-labelledby":r}),o.attr("aria-labelledby",r)}),this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role","tabpanel"),i&&(this._off(i.not(this.tabs)),this._off(n.not(this.anchors)),this._off(s.not(this.panels)))},_getList:function(){return this.tablist||this.element.find("ol,ul").eq(0)},_createPanel:function(e){return t("<div>").attr("id",e).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy",!0)},_setupDisabled:function(e){t.isArray(e)&&(e.length?e.length===this.anchors.length&&(e=!0):e=!1);for(var i,n=0;i=this.tabs[n];n++)e===!0||-1!==t.inArray(n,e)?t(i).addClass("ui-state-disabled").attr("aria-disabled","true"):t(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");this.options.disabled=e},_setupEvents:function(e){var i={};e&&t.each(e.split(" "),function(t,e){i[e]="_eventHandler"}),this._off(this.anchors.add(this.tabs).add(this.panels)),this._on(!0,this.anchors,{click:function(t){t.preventDefault()}}),this._on(this.anchors,i),this._on(this.tabs,{keydown:"_tabKeydown"}),this._on(this.panels,{keydown:"_panelKeydown"}),this._focusable(this.tabs),this._hoverable(this.tabs)},_setupHeightStyle:function(e){var i,n=this.element.parent();"fill"===e?(i=n.height(),i-=this.element.outerHeight()-this.element.height(),this.element.siblings(":visible").each(function(){var e=t(this),n=e.css("position");"absolute"!==n&&"fixed"!==n&&(i-=e.outerHeight(!0))}),this.element.children().not(this.panels).each(function(){i-=t(this).outerHeight(!0)}),this.panels.each(function(){t(this).height(Math.max(0,i-t(this).innerHeight()+t(this).height()))}).css("overflow","auto")):"auto"===e&&(i=0,this.panels.each(function(){i=Math.max(i,t(this).height("").height())}).height(i))},_eventHandler:function(e){var i=this.options,n=this.active,s=t(e.currentTarget),o=s.closest("li"),a=o[0]===n[0],r=a&&i.collapsible,l=r?t():this._getPanelForTab(o),h=n.length?this._getPanelForTab(n):t(),c={oldTab:n,oldPanel:h,newTab:r?t():o,newPanel:l};e.preventDefault(),o.hasClass("ui-state-disabled")||o.hasClass("ui-tabs-loading")||this.running||a&&!i.collapsible||this._trigger("beforeActivate",e,c)===!1||(i.active=!r&&this.tabs.index(o),this.active=a?t():o,this.xhr&&this.xhr.abort(),h.length||l.length||t.error("jQuery UI Tabs: Mismatching fragment identifier."),l.length&&this.load(this.tabs.index(o),e),this._toggle(e,c))},_toggle:function(e,i){function n(){o.running=!1,o._trigger("activate",e,i)}function s(){i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"),a.length&&o.options.show?o._show(a,o.options.show,n):(a.show(),n())}var o=this,a=i.newPanel,r=i.oldPanel;this.running=!0,r.length&&this.options.hide?this._hide(r,this.options.hide,function(){i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),s()}):(i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"),r.hide(),s()),r.attr("aria-hidden","true"),i.oldTab.attr({"aria-selected":"false","aria-expanded":"false"}),a.length&&r.length?i.oldTab.attr("tabIndex",-1):a.length&&this.tabs.filter(function(){return 0===t(this).attr("tabIndex")}).attr("tabIndex",-1),a.attr("aria-hidden","false"),i.newTab.attr({"aria-selected":"true","aria-expanded":"true",tabIndex:0})},_activate:function(e){var i,n=this._findActive(e);n[0]!==this.active[0]&&(n.length||(n=this.active),i=n.find(".ui-tabs-anchor")[0],this._eventHandler({target:i,currentTarget:i,preventDefault:t.noop}))},_findActive:function(e){return e===!1?t():this.tabs.eq(e)},_getIndex:function(t){return"string"==typeof t&&(t=this.anchors.index(this.anchors.filter("[href$='"+t+"']"))),t},_destroy:function(){this.xhr&&this.xhr.abort(),this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"),this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"),
this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(),this.tablist.unbind(this.eventNamespace),this.tabs.add(this.panels).each(function(){t.data(this,"ui-tabs-destroy")?t(this).remove():t(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")}),this.tabs.each(function(){var e=t(this),i=e.data("ui-tabs-aria-controls");i?e.attr("aria-controls",i).removeData("ui-tabs-aria-controls"):e.removeAttr("aria-controls")}),this.panels.show(),"content"!==this.options.heightStyle&&this.panels.css("height","")},enable:function(e){var i=this.options.disabled;i!==!1&&(void 0===e?i=!1:(e=this._getIndex(e),i=t.isArray(i)?t.map(i,function(t){return t!==e?t:null}):t.map(this.tabs,function(t,i){return i!==e?i:null})),this._setupDisabled(i))},disable:function(e){var i=this.options.disabled;if(i!==!0){if(void 0===e)i=!0;else{if(e=this._getIndex(e),-1!==t.inArray(e,i))return;i=t.isArray(i)?t.merge([e],i).sort():[e]}this._setupDisabled(i)}},load:function(e,i){e=this._getIndex(e);var n=this,s=this.tabs.eq(e),o=s.find(".ui-tabs-anchor"),a=this._getPanelForTab(s),r={tab:s,panel:a},l=function(t,e){"abort"===e&&n.panels.stop(!1,!0),s.removeClass("ui-tabs-loading"),a.removeAttr("aria-busy"),t===n.xhr&&delete n.xhr};this._isLocal(o[0])||(this.xhr=t.ajax(this._ajaxSettings(o,i,r)),this.xhr&&"canceled"!==this.xhr.statusText&&(s.addClass("ui-tabs-loading"),a.attr("aria-busy","true"),this.xhr.done(function(t,e,s){setTimeout(function(){a.html(t),n._trigger("load",i,r),l(s,e)},1)}).fail(function(t,e){setTimeout(function(){l(t,e)},1)})))},_ajaxSettings:function(e,i,n){var s=this;return{url:e.attr("href"),beforeSend:function(e,o){return s._trigger("beforeLoad",i,t.extend({jqXHR:e,ajaxSettings:o},n))}}},_getPanelForTab:function(e){var i=t(e).attr("aria-controls");return this.element.find(this._sanitizeSelector("#"+i))}}),t.widget("ui.tooltip",{version:"1.11.4",options:{content:function(){var e=t(this).attr("title")||"";return t("<a>").text(e).html()},hide:!0,items:"[title]:not([disabled])",position:{my:"left top+15",at:"left bottom",collision:"flipfit flip"},show:!0,tooltipClass:null,track:!1,close:null,open:null},_addDescribedBy:function(e,i){var n=(e.attr("aria-describedby")||"").split(/\s+/);n.push(i),e.data("ui-tooltip-id",i).attr("aria-describedby",t.trim(n.join(" ")))},_removeDescribedBy:function(e){var i=e.data("ui-tooltip-id"),n=(e.attr("aria-describedby")||"").split(/\s+/),s=t.inArray(i,n);-1!==s&&n.splice(s,1),e.removeData("ui-tooltip-id"),n=t.trim(n.join(" ")),n?e.attr("aria-describedby",n):e.removeAttr("aria-describedby")},_create:function(){this._on({mouseover:"open",focusin:"open"}),this.tooltips={},this.parents={},this.options.disabled&&this._disable(),this.liveRegion=t("<div>").attr({role:"log","aria-live":"assertive","aria-relevant":"additions"}).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body)},_setOption:function(e,i){var n=this;return"disabled"===e?(this[i?"_disable":"_enable"](),void(this.options[e]=i)):(this._super(e,i),void("content"===e&&t.each(this.tooltips,function(t,e){n._updateContent(e.element)})))},_disable:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event("blur");s.target=s.currentTarget=n.element[0],e.close(s,!0)}),this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.is("[title]")&&e.data("ui-tooltip-title",e.attr("title")).removeAttr("title")})},_enable:function(){this.element.find(this.options.items).addBack().each(function(){var e=t(this);e.data("ui-tooltip-title")&&e.attr("title",e.data("ui-tooltip-title"))})},open:function(e){var i=this,n=t(e?e.target:this.element).closest(this.options.items);n.length&&!n.data("ui-tooltip-id")&&(n.attr("title")&&n.data("ui-tooltip-title",n.attr("title")),n.data("ui-tooltip-open",!0),e&&"mouseover"===e.type&&n.parents().each(function(){var e,n=t(this);n.data("ui-tooltip-open")&&(e=t.Event("blur"),e.target=e.currentTarget=this,i.close(e,!0)),n.attr("title")&&(n.uniqueId(),i.parents[this.id]={element:this,title:n.attr("title")},n.attr("title",""))}),this._registerCloseHandlers(e,n),this._updateContent(n,e))},_updateContent:function(t,e){var i,n=this.options.content,s=this,o=e?e.type:null;return"string"==typeof n?this._open(e,t,n):(i=n.call(t[0],function(i){s._delay(function(){t.data("ui-tooltip-open")&&(e&&(e.type=o),this._open(e,t,i))})}),void(i&&this._open(e,t,i)))},_open:function(e,i,n){function s(t){h.of=t,a.is(":hidden")||a.position(h)}var o,a,r,l,h=t.extend({},this.options.position);if(n){if(o=this._find(i))return void o.tooltip.find(".ui-tooltip-content").html(n);i.is("[title]")&&(e&&"mouseover"===e.type?i.attr("title",""):i.removeAttr("title")),o=this._tooltip(i),a=o.tooltip,this._addDescribedBy(i,a.attr("id")),a.find(".ui-tooltip-content").html(n),this.liveRegion.children().hide(),n.clone?(l=n.clone(),l.removeAttr("id").find("[id]").removeAttr("id")):l=n,t("<div>").html(l).appendTo(this.liveRegion),this.options.track&&e&&/^mouse/.test(e.type)?(this._on(this.document,{mousemove:s}),s(e)):a.position(t.extend({of:i},this.options.position)),a.hide(),this._show(a,this.options.show),this.options.show&&this.options.show.delay&&(r=this.delayedShow=setInterval(function(){a.is(":visible")&&(s(h.of),clearInterval(r))},t.fx.interval)),this._trigger("open",e,{tooltip:a})}},_registerCloseHandlers:function(e,i){var n={keyup:function(e){if(e.keyCode===t.ui.keyCode.ESCAPE){var n=t.Event(e);n.currentTarget=i[0],this.close(n,!0)}}};i[0]!==this.element[0]&&(n.remove=function(){this._removeTooltip(this._find(i).tooltip)}),e&&"mouseover"!==e.type||(n.mouseleave="close"),e&&"focusin"!==e.type||(n.focusout="close"),this._on(!0,i,n)},close:function(e){var i,n=this,s=t(e?e.currentTarget:this.element),o=this._find(s);return o?(i=o.tooltip,void(o.closing||(clearInterval(this.delayedShow),s.data("ui-tooltip-title")&&!s.attr("title")&&s.attr("title",s.data("ui-tooltip-title")),this._removeDescribedBy(s),o.hiding=!0,i.stop(!0),this._hide(i,this.options.hide,function(){n._removeTooltip(t(this))}),s.removeData("ui-tooltip-open"),this._off(s,"mouseleave focusout keyup"),s[0]!==this.element[0]&&this._off(s,"remove"),this._off(this.document,"mousemove"),e&&"mouseleave"===e.type&&t.each(this.parents,function(e,i){t(i.element).attr("title",i.title),delete n.parents[e]}),o.closing=!0,this._trigger("close",e,{tooltip:i}),o.hiding||(o.closing=!1)))):void s.removeData("ui-tooltip-open")},_tooltip:function(e){var i=t("<div>").attr("role","tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content "+(this.options.tooltipClass||"")),n=i.uniqueId().attr("id");return t("<div>").addClass("ui-tooltip-content").appendTo(i),i.appendTo(this.document[0].body),this.tooltips[n]={element:e,tooltip:i}},_find:function(t){var e=t.data("ui-tooltip-id");return e?this.tooltips[e]:null},_removeTooltip:function(t){t.remove(),delete this.tooltips[t.attr("id")]},_destroy:function(){var e=this;t.each(this.tooltips,function(i,n){var s=t.Event("blur"),o=n.element;s.target=s.currentTarget=o[0],e.close(s,!0),t("#"+i).remove(),o.data("ui-tooltip-title")&&(o.attr("title")||o.attr("title",o.data("ui-tooltip-title")),o.removeData("ui-tooltip-title"))}),this.liveRegion.remove()}})}),"undefined"==typeof jQuery)throw new Error("Bootstrap's JavaScript requires jQuery");+function(t){"use strict";var e=t.fn.jquery.split(" ")[0].split(".");if(e[0]<2&&e[1]<9||1==e[0]&&9==e[1]&&e[2]<1)throw new Error("Bootstrap's JavaScript requires jQuery version 1.9.1 or higher")}(jQuery),+function(t){"use strict";function e(){var t=document.createElement("bootstrap"),e={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var i in e)if(void 0!==t.style[i])return{end:e[i]};return!1}t.fn.emulateTransitionEnd=function(e){var i=!1,n=this;t(this).one("bsTransitionEnd",function(){i=!0});var s=function(){i||t(n).trigger(t.support.transition.end)};return setTimeout(s,e),this},t(function(){t.support.transition=e(),t.support.transition&&(t.event.special.bsTransitionEnd={bindType:t.support.transition.end,delegateType:t.support.transition.end,handle:function(e){return t(e.target).is(this)?e.handleObj.handler.apply(this,arguments):void 0}})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var i=t(this),s=i.data("bs.alert");s||i.data("bs.alert",s=new n(this)),"string"==typeof e&&s[e].call(i)})}var i='[data-dismiss="alert"]',n=function(e){t(e).on("click",i,this.close)};n.VERSION="3.3.2",n.TRANSITION_DURATION=150,n.prototype.close=function(e){function i(){a.detach().trigger("closed.bs.alert").remove()}var s=t(this),o=s.attr("data-target");o||(o=s.attr("href"),o=o&&o.replace(/.*(?=#[^\s]*$)/,""));var a=t(o);e&&e.preventDefault(),a.length||(a=s.closest(".alert")),a.trigger(e=t.Event("close.bs.alert")),e.isDefaultPrevented()||(a.removeClass("in"),t.support.transition&&a.hasClass("fade")?a.one("bsTransitionEnd",i).emulateTransitionEnd(n.TRANSITION_DURATION):i())};var s=t.fn.alert;t.fn.alert=e,t.fn.alert.Constructor=n,t.fn.alert.noConflict=function(){return t.fn.alert=s,this},t(document).on("click.bs.alert.data-api",i,n.prototype.close)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.button"),o="object"==typeof e&&e;s||n.data("bs.button",s=new i(this,o)),"toggle"==e?s.toggle():e&&s.setState(e)})}var i=function(e,n){this.$element=t(e),this.options=t.extend({},i.DEFAULTS,n),this.isLoading=!1};i.VERSION="3.3.2",i.DEFAULTS={loadingText:"loading..."},i.prototype.setState=function(e){var i="disabled",n=this.$element,s=n.is("input")?"val":"html",o=n.data();e+="Text",null==o.resetText&&n.data("resetText",n[s]()),setTimeout(t.proxy(function(){n[s](null==o[e]?this.options[e]:o[e]),"loadingText"==e?(this.isLoading=!0,n.addClass(i).attr(i,i)):this.isLoading&&(this.isLoading=!1,n.removeClass(i).removeAttr(i))},this),0)},i.prototype.toggle=function(){var t=!0,e=this.$element.closest('[data-toggle="buttons"]');if(e.length){var i=this.$element.find("input");"radio"==i.prop("type")&&(i.prop("checked")&&this.$element.hasClass("active")?t=!1:e.find(".active").removeClass("active")),t&&i.prop("checked",!this.$element.hasClass("active")).trigger("change")}else this.$element.attr("aria-pressed",!this.$element.hasClass("active"));t&&this.$element.toggleClass("active")};var n=t.fn.button;t.fn.button=e,t.fn.button.Constructor=i,t.fn.button.noConflict=function(){return t.fn.button=n,this},t(document).on("click.bs.button.data-api",'[data-toggle^="button"]',function(i){var n=t(i.target);n.hasClass("btn")||(n=n.closest(".btn")),e.call(n,"toggle"),i.preventDefault()}).on("focus.bs.button.data-api blur.bs.button.data-api",'[data-toggle^="button"]',function(e){t(e.target).closest(".btn").toggleClass("focus",/^focus(in)?$/.test(e.type))})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.carousel"),o=t.extend({},i.DEFAULTS,n.data(),"object"==typeof e&&e),a="string"==typeof e?e:o.slide;s||n.data("bs.carousel",s=new i(this,o)),"number"==typeof e?s.to(e):a?s[a]():o.interval&&s.pause().cycle()})}var i=function(e,i){this.$element=t(e),this.$indicators=this.$element.find(".carousel-indicators"),this.options=i,this.paused=this.sliding=this.interval=this.$active=this.$items=null,this.options.keyboard&&this.$element.on("keydown.bs.carousel",t.proxy(this.keydown,this)),"hover"==this.options.pause&&!("ontouchstart"in document.documentElement)&&this.$element.on("mouseenter.bs.carousel",t.proxy(this.pause,this)).on("mouseleave.bs.carousel",t.proxy(this.cycle,this))};i.VERSION="3.3.2",i.TRANSITION_DURATION=600,i.DEFAULTS={interval:5e3,pause:"hover",wrap:!0,keyboard:!0},i.prototype.keydown=function(t){if(!/input|textarea/i.test(t.target.tagName)){switch(t.which){case 37:this.prev();break;case 39:this.next();break;default:return}t.preventDefault()}},i.prototype.cycle=function(e){return e||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(t.proxy(this.next,this),this.options.interval)),this},i.prototype.getItemIndex=function(t){return this.$items=t.parent().children(".item"),this.$items.index(t||this.$active)},i.prototype.getItemForDirection=function(t,e){var i=this.getItemIndex(e),n="prev"==t&&0===i||"next"==t&&i==this.$items.length-1;if(n&&!this.options.wrap)return e;var s="prev"==t?-1:1,o=(i+s)%this.$items.length;return this.$items.eq(o)},i.prototype.to=function(t){var e=this,i=this.getItemIndex(this.$active=this.$element.find(".item.active"));return t>this.$items.length-1||0>t?void 0:this.sliding?this.$element.one("slid.bs.carousel",function(){e.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",this.$items.eq(t))},i.prototype.pause=function(e){return e||(this.paused=!0),this.$element.find(".next, .prev").length&&t.support.transition&&(this.$element.trigger(t.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},i.prototype.next=function(){return this.sliding?void 0:this.slide("next")},i.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},i.prototype.slide=function(e,n){var s=this.$element.find(".item.active"),o=n||this.getItemForDirection(e,s),a=this.interval,r="next"==e?"left":"right",l=this;if(o.hasClass("active"))return this.sliding=!1;var h=o[0],c=t.Event("slide.bs.carousel",{relatedTarget:h,direction:r});if(this.$element.trigger(c),!c.isDefaultPrevented()){if(this.sliding=!0,a&&this.pause(),this.$indicators.length){this.$indicators.find(".active").removeClass("active");var u=t(this.$indicators.children()[this.getItemIndex(o)]);u&&u.addClass("active")}var d=t.Event("slid.bs.carousel",{relatedTarget:h,direction:r});return t.support.transition&&this.$element.hasClass("slide")?(o.addClass(e),o[0].offsetWidth,s.addClass(r),o.addClass(r),s.one("bsTransitionEnd",function(){o.removeClass([e,r].join(" ")).addClass("active"),s.removeClass(["active",r].join(" ")),l.sliding=!1,setTimeout(function(){l.$element.trigger(d)},0)}).emulateTransitionEnd(i.TRANSITION_DURATION)):(s.removeClass("active"),o.addClass("active"),this.sliding=!1,this.$element.trigger(d)),a&&this.cycle(),this}};var n=t.fn.carousel;t.fn.carousel=e,t.fn.carousel.Constructor=i,t.fn.carousel.noConflict=function(){return t.fn.carousel=n,this};var s=function(i){var n,s=t(this),o=t(s.attr("data-target")||(n=s.attr("href"))&&n.replace(/.*(?=#[^\s]+$)/,""));if(o.hasClass("carousel")){var a=t.extend({},o.data(),s.data()),r=s.attr("data-slide-to");r&&(a.interval=!1),e.call(o,a),r&&o.data("bs.carousel").to(r),i.preventDefault()}};t(document).on("click.bs.carousel.data-api","[data-slide]",s).on("click.bs.carousel.data-api","[data-slide-to]",s),t(window).on("load",function(){t('[data-ride="carousel"]').each(function(){var i=t(this);e.call(i,i.data())})})}(jQuery),+function(t){"use strict";function e(e){var i,n=e.attr("data-target")||(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]+$)/,"");return t(n)}function i(e){return this.each(function(){var i=t(this),s=i.data("bs.collapse"),o=t.extend({},n.DEFAULTS,i.data(),"object"==typeof e&&e);!s&&o.toggle&&"show"==e&&(o.toggle=!1),s||i.data("bs.collapse",s=new n(this,o)),"string"==typeof e&&s[e]()})}var n=function(e,i){this.$element=t(e),this.options=t.extend({},n.DEFAULTS,i),this.$trigger=t(this.options.trigger).filter('[href="#'+e.id+'"], [data-target="#'+e.id+'"]'),this.transitioning=null,this.options.parent?this.$parent=this.getParent():this.addAriaAndCollapsedClass(this.$element,this.$trigger),this.options.toggle&&this.toggle()};n.VERSION="3.3.2",n.TRANSITION_DURATION=350,n.DEFAULTS={toggle:!0,trigger:'[data-toggle="collapse"]'},n.prototype.dimension=function(){var t=this.$element.hasClass("width");return t?"width":"height"},n.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var e,s=this.$parent&&this.$parent.children(".panel").children(".in, .collapsing");if(!(s&&s.length&&(e=s.data("bs.collapse"),e&&e.transitioning))){var o=t.Event("show.bs.collapse");if(this.$element.trigger(o),!o.isDefaultPrevented()){s&&s.length&&(i.call(s,"hide"),e||s.data("bs.collapse",null));var a=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[a](0).attr("aria-expanded",!0),this.$trigger.removeClass("collapsed").attr("aria-expanded",!0),this.transitioning=1;var r=function(){this.$element.removeClass("collapsing").addClass("collapse in")[a](""),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!t.support.transition)return r.call(this);var l=t.camelCase(["scroll",a].join("-"));this.$element.one("bsTransitionEnd",t.proxy(r,this)).emulateTransitionEnd(n.TRANSITION_DURATION)[a](this.$element[0][l])}}}},n.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var e=t.Event("hide.bs.collapse");if(this.$element.trigger(e),!e.isDefaultPrevented()){var i=this.dimension();this.$element[i](this.$element[i]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse in").attr("aria-expanded",!1),this.$trigger.addClass("collapsed").attr("aria-expanded",!1),this.transitioning=1;var s=function(){this.transitioning=0,this.$element.removeClass("collapsing").addClass("collapse").trigger("hidden.bs.collapse")};return t.support.transition?void this.$element[i](0).one("bsTransitionEnd",t.proxy(s,this)).emulateTransitionEnd(n.TRANSITION_DURATION):s.call(this)}}},n.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()},n.prototype.getParent=function(){return t(this.options.parent).find('[data-toggle="collapse"][data-parent="'+this.options.parent+'"]').each(t.proxy(function(i,n){var s=t(n);this.addAriaAndCollapsedClass(e(s),s)},this)).end()},n.prototype.addAriaAndCollapsedClass=function(t,e){var i=t.hasClass("in");t.attr("aria-expanded",i),e.toggleClass("collapsed",!i).attr("aria-expanded",i)};var s=t.fn.collapse;t.fn.collapse=i,t.fn.collapse.Constructor=n,t.fn.collapse.noConflict=function(){return t.fn.collapse=s,this},t(document).on("click.bs.collapse.data-api",'[data-toggle="collapse"]',function(n){var s=t(this);s.attr("data-target")||n.preventDefault();var o=e(s),a=o.data("bs.collapse"),r=a?"toggle":t.extend({},s.data(),{trigger:this});i.call(o,r)})}(jQuery),+function(t){"use strict";function e(e){e&&3===e.which||(t(s).remove(),t(o).each(function(){var n=t(this),s=i(n),o={relatedTarget:this};s.hasClass("open")&&(s.trigger(e=t.Event("hide.bs.dropdown",o)),e.isDefaultPrevented()||(n.attr("aria-expanded","false"),s.removeClass("open").trigger("hidden.bs.dropdown",o)))}))}function i(e){var i=e.attr("data-target");i||(i=e.attr("href"),i=i&&/#[A-Za-z]/.test(i)&&i.replace(/.*(?=#[^\s]*$)/,""));var n=i&&t(i);return n&&n.length?n:e.parent()}function n(e){return this.each(function(){var i=t(this),n=i.data("bs.dropdown");n||i.data("bs.dropdown",n=new a(this)),"string"==typeof e&&n[e].call(i)})}var s=".dropdown-backdrop",o='[data-toggle="dropdown"]',a=function(e){t(e).on("click.bs.dropdown",this.toggle)};a.VERSION="3.3.2",a.prototype.toggle=function(n){var s=t(this);if(!s.is(".disabled, :disabled")){var o=i(s),a=o.hasClass("open");if(e(),!a){"ontouchstart"in document.documentElement&&!o.closest(".navbar-nav").length&&t('<div class="dropdown-backdrop"/>').insertAfter(t(this)).on("click",e);var r={relatedTarget:this};if(o.trigger(n=t.Event("show.bs.dropdown",r)),n.isDefaultPrevented())return;s.trigger("focus").attr("aria-expanded","true"),o.toggleClass("open").trigger("shown.bs.dropdown",r)}return!1}},a.prototype.keydown=function(e){if(/(38|40|27|32)/.test(e.which)&&!/input|textarea/i.test(e.target.tagName)){var n=t(this);if(e.preventDefault(),e.stopPropagation(),!n.is(".disabled, :disabled")){var s=i(n),a=s.hasClass("open");if(!a&&27!=e.which||a&&27==e.which)return 27==e.which&&s.find(o).trigger("focus"),n.trigger("click");var r=" li:not(.divider):visible a",l=s.find('[role="menu"]'+r+', [role="listbox"]'+r);if(l.length){var h=l.index(e.target);38==e.which&&h>0&&h--,40==e.which&&h<l.length-1&&h++,~h||(h=0),l.eq(h).trigger("focus")}}}};var r=t.fn.dropdown;t.fn.dropdown=n,t.fn.dropdown.Constructor=a,t.fn.dropdown.noConflict=function(){return t.fn.dropdown=r,this},t(document).on("click.bs.dropdown.data-api",e).on("click.bs.dropdown.data-api",".dropdown form",function(t){t.stopPropagation()}).on("click.bs.dropdown.data-api",o,a.prototype.toggle).on("keydown.bs.dropdown.data-api",o,a.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="menu"]',a.prototype.keydown).on("keydown.bs.dropdown.data-api",'[role="listbox"]',a.prototype.keydown)}(jQuery),+function(t){"use strict";function e(e,n){return this.each(function(){var s=t(this),o=s.data("bs.modal"),a=t.extend({},i.DEFAULTS,s.data(),"object"==typeof e&&e);o||s.data("bs.modal",o=new i(this,a)),"string"==typeof e?o[e](n):a.show&&o.show(n)})}var i=function(e,i){this.options=i,this.$body=t(document.body),this.$element=t(e),this.$backdrop=this.isShown=null,this.scrollbarWidth=0,this.options.remote&&this.$element.find(".modal-content").load(this.options.remote,t.proxy(function(){this.$element.trigger("loaded.bs.modal")},this))};i.VERSION="3.3.2",i.TRANSITION_DURATION=300,i.BACKDROP_TRANSITION_DURATION=150,i.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},i.prototype.toggle=function(t){return this.isShown?this.hide():this.show(t)},i.prototype.show=function(e){var n=this,s=t.Event("show.bs.modal",{relatedTarget:e});this.$element.trigger(s),this.isShown||s.isDefaultPrevented()||(this.isShown=!0,this.checkScrollbar(),this.setScrollbar(),this.$body.addClass("modal-open"),this.escape(),this.resize(),this.$element.on("click.dismiss.bs.modal",'[data-dismiss="modal"]',t.proxy(this.hide,this)),this.backdrop(function(){var s=t.support.transition&&n.$element.hasClass("fade");n.$element.parent().length||n.$element.appendTo(n.$body),n.$element.show().scrollTop(0),n.options.backdrop&&n.adjustBackdrop(),n.adjustDialog(),s&&n.$element[0].offsetWidth,n.$element.addClass("in").attr("aria-hidden",!1),n.enforceFocus();var o=t.Event("shown.bs.modal",{relatedTarget:e});s?n.$element.find(".modal-dialog").one("bsTransitionEnd",function(){n.$element.trigger("focus").trigger(o)}).emulateTransitionEnd(i.TRANSITION_DURATION):n.$element.trigger("focus").trigger(o)}))},i.prototype.hide=function(e){e&&e.preventDefault(),e=t.Event("hide.bs.modal"),this.$element.trigger(e),this.isShown&&!e.isDefaultPrevented()&&(this.isShown=!1,this.escape(),this.resize(),t(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.bs.modal"),t.support.transition&&this.$element.hasClass("fade")?this.$element.one("bsTransitionEnd",t.proxy(this.hideModal,this)).emulateTransitionEnd(i.TRANSITION_DURATION):this.hideModal())},i.prototype.enforceFocus=function(){t(document).off("focusin.bs.modal").on("focusin.bs.modal",t.proxy(function(t){this.$element[0]===t.target||this.$element.has(t.target).length||this.$element.trigger("focus")},this))},i.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keydown.dismiss.bs.modal",t.proxy(function(t){27==t.which&&this.hide()},this)):this.isShown||this.$element.off("keydown.dismiss.bs.modal")},i.prototype.resize=function(){this.isShown?t(window).on("resize.bs.modal",t.proxy(this.handleUpdate,this)):t(window).off("resize.bs.modal")},i.prototype.hideModal=function(){var t=this;this.$element.hide(),this.backdrop(function(){t.$body.removeClass("modal-open"),t.resetAdjustments(),t.resetScrollbar(),t.$element.trigger("hidden.bs.modal")})},i.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},i.prototype.backdrop=function(e){var n=this,s=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var o=t.support.transition&&s;if(this.$backdrop=t('<div class="modal-backdrop '+s+'" />').prependTo(this.$element).on("click.dismiss.bs.modal",t.proxy(function(t){t.target===t.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),o&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!e)return;o?this.$backdrop.one("bsTransitionEnd",e).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):e()}else if(!this.isShown&&this.$backdrop){this.$backdrop.removeClass("in");var a=function(){n.removeBackdrop(),e&&e()};t.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one("bsTransitionEnd",a).emulateTransitionEnd(i.BACKDROP_TRANSITION_DURATION):a()}else e&&e()},i.prototype.handleUpdate=function(){this.options.backdrop&&this.adjustBackdrop(),this.adjustDialog()},i.prototype.adjustBackdrop=function(){this.$backdrop.css("height",0).css("height",this.$element[0].scrollHeight)},i.prototype.adjustDialog=function(){var t=this.$element[0].scrollHeight>document.documentElement.clientHeight;this.$element.css({paddingLeft:!this.bodyIsOverflowing&&t?this.scrollbarWidth:"",paddingRight:this.bodyIsOverflowing&&!t?this.scrollbarWidth:""})},i.prototype.resetAdjustments=function(){this.$element.css({paddingLeft:"",paddingRight:""})},i.prototype.checkScrollbar=function(){this.bodyIsOverflowing=document.body.scrollHeight>document.documentElement.clientHeight,this.scrollbarWidth=this.measureScrollbar()},i.prototype.setScrollbar=function(){var t=parseInt(this.$body.css("padding-right")||0,10);this.bodyIsOverflowing&&this.$body.css("padding-right",t+this.scrollbarWidth)},i.prototype.resetScrollbar=function(){this.$body.css("padding-right","")},i.prototype.measureScrollbar=function(){var t=document.createElement("div");t.className="modal-scrollbar-measure",this.$body.append(t);var e=t.offsetWidth-t.clientWidth;return this.$body[0].removeChild(t),e};var n=t.fn.modal;t.fn.modal=e,t.fn.modal.Constructor=i,t.fn.modal.noConflict=function(){return t.fn.modal=n,this},t(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(i){var n=t(this),s=n.attr("href"),o=t(n.attr("data-target")||s&&s.replace(/.*(?=#[^\s]+$)/,"")),a=o.data("bs.modal")?"toggle":t.extend({remote:!/#/.test(s)&&s},o.data(),n.data());n.is("a")&&i.preventDefault(),o.one("show.bs.modal",function(t){t.isDefaultPrevented()||o.one("hidden.bs.modal",function(){n.is(":visible")&&n.trigger("focus")})}),e.call(o,a,this)})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.tooltip"),o="object"==typeof e&&e;(s||"destroy"!=e)&&(s||n.data("bs.tooltip",s=new i(this,o)),"string"==typeof e&&s[e]())})}var i=function(t,e){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",t,e)};i.VERSION="3.3.2",i.TRANSITION_DURATION=150,i.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0}},i.prototype.init=function(e,i,n){this.enabled=!0,this.type=e,this.$element=t(i),this.options=this.getOptions(n),this.$viewport=this.options.viewport&&t(this.options.viewport.selector||this.options.viewport);for(var s=this.options.trigger.split(" "),o=s.length;o--;){var a=s[o];if("click"==a)this.$element.on("click."+this.type,this.options.selector,t.proxy(this.toggle,this));else if("manual"!=a){var r="hover"==a?"mouseenter":"focusin",l="hover"==a?"mouseleave":"focusout";this.$element.on(r+"."+this.type,this.options.selector,t.proxy(this.enter,this)),this.$element.on(l+"."+this.type,this.options.selector,t.proxy(this.leave,this))}}this.options.selector?this._options=t.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.getOptions=function(e){return e=t.extend({},this.getDefaults(),this.$element.data(),e),e.delay&&"number"==typeof e.delay&&(e.delay={show:e.delay,hide:e.delay}),e},i.prototype.getDelegateOptions=function(){var e={},i=this.getDefaults();return this._options&&t.each(this._options,function(t,n){i[t]!=n&&(e[t]=n)}),e},i.prototype.enter=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i&&i.$tip&&i.$tip.is(":visible")?void(i.hoverState="in"):(i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),clearTimeout(i.timeout),i.hoverState="in",i.options.delay&&i.options.delay.show?void(i.timeout=setTimeout(function(){"in"==i.hoverState&&i.show()},i.options.delay.show)):i.show())},i.prototype.leave=function(e){var i=e instanceof this.constructor?e:t(e.currentTarget).data("bs."+this.type);return i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i)),clearTimeout(i.timeout),i.hoverState="out",i.options.delay&&i.options.delay.hide?void(i.timeout=setTimeout(function(){"out"==i.hoverState&&i.hide()},i.options.delay.hide)):i.hide()},i.prototype.show=function(){var e=t.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(e);var n=t.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(e.isDefaultPrevented()||!n)return;var s=this,o=this.tip(),a=this.getUID(this.type);this.setContent(),o.attr("id",a),this.$element.attr("aria-describedby",a),this.options.animation&&o.addClass("fade");var r="function"==typeof this.options.placement?this.options.placement.call(this,o[0],this.$element[0]):this.options.placement,l=/\s?auto?\s?/i,h=l.test(r);h&&(r=r.replace(l,"")||"top"),o.detach().css({top:0,left:0,display:"block"}).addClass(r).data("bs."+this.type,this),this.options.container?o.appendTo(this.options.container):o.insertAfter(this.$element);var c=this.getPosition(),u=o[0].offsetWidth,d=o[0].offsetHeight;if(h){var f=r,p=this.options.container?t(this.options.container):this.$element.parent(),m=this.getPosition(p);r="bottom"==r&&c.bottom+d>m.bottom?"top":"top"==r&&c.top-d<m.top?"bottom":"right"==r&&c.right+u>m.width?"left":"left"==r&&c.left-u<m.left?"right":r,o.removeClass(f).addClass(r)}var g=this.getCalculatedOffset(r,c,u,d);this.applyPlacement(g,r);var v=function(){var t=s.hoverState;s.$element.trigger("shown.bs."+s.type),s.hoverState=null,"out"==t&&s.leave(s)};t.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",v).emulateTransitionEnd(i.TRANSITION_DURATION):v()}},i.prototype.applyPlacement=function(e,i){var n=this.tip(),s=n[0].offsetWidth,o=n[0].offsetHeight,a=parseInt(n.css("margin-top"),10),r=parseInt(n.css("margin-left"),10);isNaN(a)&&(a=0),isNaN(r)&&(r=0),e.top=e.top+a,e.left=e.left+r,t.offset.setOffset(n[0],t.extend({using:function(t){n.css({top:Math.round(t.top),left:Math.round(t.left)})}},e),0),n.addClass("in");var l=n[0].offsetWidth,h=n[0].offsetHeight;"top"==i&&h!=o&&(e.top=e.top+o-h);var c=this.getViewportAdjustedDelta(i,e,l,h);c.left?e.left+=c.left:e.top+=c.top;var u=/top|bottom/.test(i),d=u?2*c.left-s+l:2*c.top-o+h,f=u?"offsetWidth":"offsetHeight";n.offset(e),this.replaceArrow(d,n[0][f],u)},i.prototype.replaceArrow=function(t,e,i){this.arrow().css(i?"left":"top",50*(1-t/e)+"%").css(i?"top":"left","")},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle();t.find(".tooltip-inner")[this.options.html?"html":"text"](e),t.removeClass("fade in top bottom left right")},i.prototype.hide=function(e){function n(){"in"!=s.hoverState&&o.detach(),s.$element.removeAttr("aria-describedby").trigger("hidden.bs."+s.type),e&&e()}var s=this,o=this.tip(),a=t.Event("hide.bs."+this.type);return this.$element.trigger(a),a.isDefaultPrevented()?void 0:(o.removeClass("in"),t.support.transition&&this.$tip.hasClass("fade")?o.one("bsTransitionEnd",n).emulateTransitionEnd(i.TRANSITION_DURATION):n(),
this.hoverState=null,this)},i.prototype.fixTitle=function(){var t=this.$element;(t.attr("title")||"string"!=typeof t.attr("data-original-title"))&&t.attr("data-original-title",t.attr("title")||"").attr("title","")},i.prototype.hasContent=function(){return this.getTitle()},i.prototype.getPosition=function(e){e=e||this.$element;var i=e[0],n="BODY"==i.tagName,s=i.getBoundingClientRect();null==s.width&&(s=t.extend({},s,{width:s.right-s.left,height:s.bottom-s.top}));var o=n?{top:0,left:0}:e.offset(),a={scroll:n?document.documentElement.scrollTop||document.body.scrollTop:e.scrollTop()},r=n?{width:t(window).width(),height:t(window).height()}:null;return t.extend({},s,a,r,o)},i.prototype.getCalculatedOffset=function(t,e,i,n){return"bottom"==t?{top:e.top+e.height,left:e.left+e.width/2-i/2}:"top"==t?{top:e.top-n,left:e.left+e.width/2-i/2}:"left"==t?{top:e.top+e.height/2-n/2,left:e.left-i}:{top:e.top+e.height/2-n/2,left:e.left+e.width}},i.prototype.getViewportAdjustedDelta=function(t,e,i,n){var s={top:0,left:0};if(!this.$viewport)return s;var o=this.options.viewport&&this.options.viewport.padding||0,a=this.getPosition(this.$viewport);if(/right|left/.test(t)){var r=e.top-o-a.scroll,l=e.top+o-a.scroll+n;r<a.top?s.top=a.top-r:l>a.top+a.height&&(s.top=a.top+a.height-l)}else{var h=e.left-o,c=e.left+o+i;h<a.left?s.left=a.left-h:c>a.width&&(s.left=a.left+a.width-c)}return s},i.prototype.getTitle=function(){var t,e=this.$element,i=this.options;return t=e.attr("data-original-title")||("function"==typeof i.title?i.title.call(e[0]):i.title)},i.prototype.getUID=function(t){do t+=~~(1e6*Math.random());while(document.getElementById(t));return t},i.prototype.tip=function(){return this.$tip=this.$tip||t(this.options.template)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},i.prototype.enable=function(){this.enabled=!0},i.prototype.disable=function(){this.enabled=!1},i.prototype.toggleEnabled=function(){this.enabled=!this.enabled},i.prototype.toggle=function(e){var i=this;e&&(i=t(e.currentTarget).data("bs."+this.type),i||(i=new this.constructor(e.currentTarget,this.getDelegateOptions()),t(e.currentTarget).data("bs."+this.type,i))),i.tip().hasClass("in")?i.leave(i):i.enter(i)},i.prototype.destroy=function(){var t=this;clearTimeout(this.timeout),this.hide(function(){t.$element.off("."+t.type).removeData("bs."+t.type)})};var n=t.fn.tooltip;t.fn.tooltip=e,t.fn.tooltip.Constructor=i,t.fn.tooltip.noConflict=function(){return t.fn.tooltip=n,this}}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.popover"),o="object"==typeof e&&e;(s||"destroy"!=e)&&(s||n.data("bs.popover",s=new i(this,o)),"string"==typeof e&&s[e]())})}var i=function(t,e){this.init("popover",t,e)};if(!t.fn.tooltip)throw new Error("Popover requires tooltip.js");i.VERSION="3.3.2",i.DEFAULTS=t.extend({},t.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),i.prototype=t.extend({},t.fn.tooltip.Constructor.prototype),i.prototype.constructor=i,i.prototype.getDefaults=function(){return i.DEFAULTS},i.prototype.setContent=function(){var t=this.tip(),e=this.getTitle(),i=this.getContent();t.find(".popover-title")[this.options.html?"html":"text"](e),t.find(".popover-content").children().detach().end()[this.options.html?"string"==typeof i?"html":"append":"text"](i),t.removeClass("fade top bottom left right in"),t.find(".popover-title").html()||t.find(".popover-title").hide()},i.prototype.hasContent=function(){return this.getTitle()||this.getContent()},i.prototype.getContent=function(){var t=this.$element,e=this.options;return t.attr("data-content")||("function"==typeof e.content?e.content.call(t[0]):e.content)},i.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},i.prototype.tip=function(){return this.$tip||(this.$tip=t(this.options.template)),this.$tip};var n=t.fn.popover;t.fn.popover=e,t.fn.popover.Constructor=i,t.fn.popover.noConflict=function(){return t.fn.popover=n,this}}(jQuery),+function(t){"use strict";function e(i,n){var s=t.proxy(this.process,this);this.$body=t("body"),this.$scrollElement=t(t(i).is("body")?window:i),this.options=t.extend({},e.DEFAULTS,n),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",s),this.refresh(),this.process()}function i(i){return this.each(function(){var n=t(this),s=n.data("bs.scrollspy"),o="object"==typeof i&&i;s||n.data("bs.scrollspy",s=new e(this,o)),"string"==typeof i&&s[i]()})}e.VERSION="3.3.2",e.DEFAULTS={offset:10},e.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},e.prototype.refresh=function(){var e="offset",i=0;t.isWindow(this.$scrollElement[0])||(e="position",i=this.$scrollElement.scrollTop()),this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight();var n=this;this.$body.find(this.selector).map(function(){var n=t(this),s=n.data("target")||n.attr("href"),o=/^#./.test(s)&&t(s);return o&&o.length&&o.is(":visible")&&[[o[e]().top+i,s]]||null}).sort(function(t,e){return t[0]-e[0]}).each(function(){n.offsets.push(this[0]),n.targets.push(this[1])})},e.prototype.process=function(){var t,e=this.$scrollElement.scrollTop()+this.options.offset,i=this.getScrollHeight(),n=this.options.offset+i-this.$scrollElement.height(),s=this.offsets,o=this.targets,a=this.activeTarget;if(this.scrollHeight!=i&&this.refresh(),e>=n)return a!=(t=o[o.length-1])&&this.activate(t);if(a&&e<s[0])return this.activeTarget=null,this.clear();for(t=s.length;t--;)a!=o[t]&&e>=s[t]&&(!s[t+1]||e<=s[t+1])&&this.activate(o[t])},e.prototype.activate=function(e){this.activeTarget=e,this.clear();var i=this.selector+'[data-target="'+e+'"],'+this.selector+'[href="'+e+'"]',n=t(i).parents("li").addClass("active");n.parent(".dropdown-menu").length&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate.bs.scrollspy")},e.prototype.clear=function(){t(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};var n=t.fn.scrollspy;t.fn.scrollspy=i,t.fn.scrollspy.Constructor=e,t.fn.scrollspy.noConflict=function(){return t.fn.scrollspy=n,this},t(window).on("load.bs.scrollspy.data-api",function(){t('[data-spy="scroll"]').each(function(){var e=t(this);i.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.tab");s||n.data("bs.tab",s=new i(this)),"string"==typeof e&&s[e]()})}var i=function(e){this.element=t(e)};i.VERSION="3.3.2",i.TRANSITION_DURATION=150,i.prototype.show=function(){var e=this.element,i=e.closest("ul:not(.dropdown-menu)"),n=e.data("target");if(n||(n=e.attr("href"),n=n&&n.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var s=i.find(".active:last a"),o=t.Event("hide.bs.tab",{relatedTarget:e[0]}),a=t.Event("show.bs.tab",{relatedTarget:s[0]});if(s.trigger(o),e.trigger(a),!a.isDefaultPrevented()&&!o.isDefaultPrevented()){var r=t(n);this.activate(e.closest("li"),i),this.activate(r,r.parent(),function(){s.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:s[0]})})}}},i.prototype.activate=function(e,n,s){function o(){a.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),r?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu")&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),s&&s()}var a=n.find("> .active"),r=s&&t.support.transition&&(a.length&&a.hasClass("fade")||!!n.find("> .fade").length);a.length&&r?a.one("bsTransitionEnd",o).emulateTransitionEnd(i.TRANSITION_DURATION):o(),a.removeClass("in")};var n=t.fn.tab;t.fn.tab=e,t.fn.tab.Constructor=i,t.fn.tab.noConflict=function(){return t.fn.tab=n,this};var s=function(i){i.preventDefault(),e.call(t(this),"show")};t(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',s).on("click.bs.tab.data-api",'[data-toggle="pill"]',s)}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.affix"),o="object"==typeof e&&e;s||n.data("bs.affix",s=new i(this,o)),"string"==typeof e&&s[e]()})}var i=function(e,n){this.options=t.extend({},i.DEFAULTS,n),this.$target=t(this.options.target).on("scroll.bs.affix.data-api",t.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",t.proxy(this.checkPositionWithEventLoop,this)),this.$element=t(e),this.affixed=this.unpin=this.pinnedOffset=null,this.checkPosition()};i.VERSION="3.3.2",i.RESET="affix affix-top affix-bottom",i.DEFAULTS={offset:0,target:window},i.prototype.getState=function(t,e,i,n){var s=this.$target.scrollTop(),o=this.$element.offset(),a=this.$target.height();if(null!=i&&"top"==this.affixed)return i>s&&"top";if("bottom"==this.affixed)return null!=i?!(s+this.unpin<=o.top)&&"bottom":!(t-n>=s+a)&&"bottom";var r=null==this.affixed,l=r?s:o.top,h=r?a:e;return null!=i&&i>=s?"top":null!=n&&l+h>=t-n&&"bottom"},i.prototype.getPinnedOffset=function(){if(this.pinnedOffset)return this.pinnedOffset;this.$element.removeClass(i.RESET).addClass("affix");var t=this.$target.scrollTop(),e=this.$element.offset();return this.pinnedOffset=e.top-t},i.prototype.checkPositionWithEventLoop=function(){setTimeout(t.proxy(this.checkPosition,this),1)},i.prototype.checkPosition=function(){if(this.$element.is(":visible")){var e=this.$element.height(),n=this.options.offset,s=n.top,o=n.bottom,a=t("body").height();"object"!=typeof n&&(o=s=n),"function"==typeof s&&(s=n.top(this.$element)),"function"==typeof o&&(o=n.bottom(this.$element));var r=this.getState(a,e,s,o);if(this.affixed!=r){null!=this.unpin&&this.$element.css("top","");var l="affix"+(r?"-"+r:""),h=t.Event(l+".bs.affix");if(this.$element.trigger(h),h.isDefaultPrevented())return;this.affixed=r,this.unpin="bottom"==r?this.getPinnedOffset():null,this.$element.removeClass(i.RESET).addClass(l).trigger(l.replace("affix","affixed")+".bs.affix")}"bottom"==r&&this.$element.offset({top:a-e-o})}};var n=t.fn.affix;t.fn.affix=e,t.fn.affix.Constructor=i,t.fn.affix.noConflict=function(){return t.fn.affix=n,this},t(window).on("load",function(){t('[data-spy="affix"]').each(function(){var i=t(this),n=i.data();n.offset=n.offset||{},null!=n.offsetBottom&&(n.offset.bottom=n.offsetBottom),null!=n.offsetTop&&(n.offset.top=n.offsetTop),e.call(i,n)})})}(jQuery),function(t){"use strict";function e(t,e){return t.toUpperCase().indexOf(e.toUpperCase())>-1}function i(e){var i=[{re:/[\xC0-\xC6]/g,ch:"A"},{re:/[\xE0-\xE6]/g,ch:"a"},{re:/[\xC8-\xCB]/g,ch:"E"},{re:/[\xE8-\xEB]/g,ch:"e"},{re:/[\xCC-\xCF]/g,ch:"I"},{re:/[\xEC-\xEF]/g,ch:"i"},{re:/[\xD2-\xD6]/g,ch:"O"},{re:/[\xF2-\xF6]/g,ch:"o"},{re:/[\xD9-\xDC]/g,ch:"U"},{re:/[\xF9-\xFC]/g,ch:"u"},{re:/[\xC7-\xE7]/g,ch:"c"},{re:/[\xD1]/g,ch:"N"},{re:/[\xF1]/g,ch:"n"}];return t.each(i,function(){e=e.replace(this.re,this.ch)}),e}function n(t){var e={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},i="(?:"+Object.keys(e).join("|")+")",n=new RegExp(i),s=new RegExp(i,"g"),o=null==t?"":""+t;return n.test(o)?o.replace(s,function(t){return e[t]}):o}function s(e,i){var n=arguments,s=e,e=n[0],i=n[1];[].shift.apply(n),"undefined"==typeof e&&(e=s);var a,r=this.each(function(){var s=t(this);if(s.is("select")){var r=s.data("selectpicker"),l="object"==typeof e&&e;if(r){if(l)for(var h in l)l.hasOwnProperty(h)&&(r.options[h]=l[h])}else{var c=t.extend({},o.DEFAULTS,t.fn.selectpicker.defaults||{},s.data(),l);s.data("selectpicker",r=new o(this,c,i))}"string"==typeof e&&(a=r[e]instanceof Function?r[e].apply(r,n):r.options[e])}});return"undefined"!=typeof a?a:r}t.expr[":"].icontains=function(i,n,s){return e(t(i).text(),s[3])},t.expr[":"].aicontains=function(i,n,s){return e(t(i).data("normalizedText")||t(i).text(),s[3])};var o=function(e,i,n){n&&(n.stopPropagation(),n.preventDefault()),this.$element=t(e),this.$newElement=null,this.$button=null,this.$menu=null,this.$lis=null,this.options=i,null===this.options.title&&(this.options.title=this.$element.attr("title")),this.val=o.prototype.val,this.render=o.prototype.render,this.refresh=o.prototype.refresh,this.setStyle=o.prototype.setStyle,this.selectAll=o.prototype.selectAll,this.deselectAll=o.prototype.deselectAll,this.destroy=o.prototype.remove,this.remove=o.prototype.remove,this.show=o.prototype.show,this.hide=o.prototype.hide,this.init()};o.VERSION="1.6.3",o.DEFAULTS={noneSelectedText:"Nothing selected",noneResultsText:"No results match",countSelectedText:function(t,e){return 1==t?"{0} item selected":"{0} items selected"},maxOptionsText:function(t,e){var i=[];return i[0]=1==t?"Limit reached ({n} item max)":"Limit reached ({n} items max)",i[1]=1==e?"Group limit reached ({n} item max)":"Group limit reached ({n} items max)",i},selectAllText:"Select All",deselectAllText:"Deselect All",multipleSeparator:", ",style:"btn-light",size:"auto",title:null,selectedTextFormat:"values",width:!1,container:!1,hideDisabled:!1,showSubtext:!1,showIcon:!0,showContent:!0,dropupAuto:!0,header:!1,liveSearch:!1,actionsBox:!1,iconBase:"fa",tickIcon:"fa-check",maxOptions:!1,mobile:!1,selectOnTab:!1,dropdownAlignRight:!1,searchAccentInsensitive:!1},o.prototype={constructor:o,init:function(){var e=this,i=this.$element.attr("id");this.$element.hide(),this.multiple=this.$element.prop("multiple"),this.autofocus=this.$element.prop("autofocus"),this.$newElement=this.createView(),this.$element.after(this.$newElement),this.$menu=this.$newElement.find("> .dropdown-menu"),this.$button=this.$newElement.find("> button"),this.$searchbox=this.$newElement.find("input"),this.options.dropdownAlignRight&&this.$menu.addClass("dropdown-menu-right"),"undefined"!=typeof i&&(this.$button.attr("data-id",i),t('label[for="'+i+'"]').click(function(t){t.preventDefault(),e.$button.focus()})),this.checkDisabled(),this.clickListener(),this.options.liveSearch&&this.liveSearchListener(),this.render(),this.liHeight(),this.setStyle(),this.setWidth(),this.options.container&&this.selectPosition(),this.$menu.data("this",this),this.$newElement.data("this",this),this.options.mobile&&this.mobile()},createDropdown:function(){var e=this.multiple?" show-tick":"",i=this.$element.parent().hasClass("input-group")?" input-group-btn":"",n=this.autofocus?" autofocus":"",s=this.$element.parents().hasClass("form-group-lg")?" btn-lg":this.$element.parents().hasClass("form-group-sm")?" btn-sm":"",o=this.options.header?'<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>'+this.options.header+"</div>":"",a=this.options.liveSearch?'<div class="bs-searchbox"><input type="text" class="input-block-level form-control" autocomplete="off" /></div>':"",r=this.options.actionsBox?'<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">'+this.options.selectAllText+'</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">'+this.options.deselectAllText+"</button></div></div>":"",l='<div class="btn-group bootstrap-select'+e+i+'"><button type="button" class="btn dropdown-toggle selectpicker'+s+'" data-toggle="dropdown"'+n+'><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">'+o+a+r+'<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>';return t(l)},createView:function(){var t=this.createDropdown(),e=this.createLi();return t.find("ul").append(e),t},reloadLi:function(){this.destroyLi();var t=this.createLi();this.$menu.find("ul").append(t)},destroyLi:function(){this.$menu.find("li").remove()},createLi:function(){var e=this,s=[],o=0,a=function(t,e,i){return"<li"+("undefined"!=typeof i?' class="'+i+'"':"")+("undefined"!=typeof e|null===e?' data-original-index="'+e+'"':"")+">"+t+"</li>"},r=function(t,s,o,a){var r=i(n(t));return'<a tabindex="0"'+("undefined"!=typeof s?' class="'+s+'"':"")+("undefined"!=typeof o?' style="'+o+'"':"")+("undefined"!=typeof a?'data-optgroup="'+a+'"':"")+' data-normalized-text="'+r+'">'+t+'<span class="'+e.options.iconBase+" "+e.options.tickIcon+' check-mark"></span></a>'};return this.$element.find("option").each(function(){var i=t(this),n=i.attr("class")||"",l=i.attr("style"),h=i.data("content")?i.data("content"):i.html(),c="undefined"!=typeof i.data("subtext")?'<small class="text-st">'+i.data("subtext")+"</small>":"",u="undefined"!=typeof i.data("icon")?'<span class="'+e.options.iconBase+" "+i.data("icon")+'"></span> ':"",d=i.is(":disabled")||i.parent().is(":disabled"),f=i[0].index;if(""!==u&&d&&(u="<span>"+u+"</span>"),i.data("content")||(h=u+'<span class="text">'+h+c+"</span>"),!e.options.hideDisabled||!d)if(i.parent().is("optgroup")&&i.data("divider")!==!0){if(0===i.index()){o+=1;var p=i.parent().attr("label"),m="undefined"!=typeof i.parent().data("subtext")?'<small class="muted text-muted">'+i.parent().data("subtext")+"</small>":"",g=i.parent().data("icon")?'<span class="'+e.options.iconBase+" "+i.parent().data("icon")+'"></span> ':"";p=g+'<span class="text">'+p+m+"</span>",0!==f&&s.length>0&&s.push(a("",null,"divider")),s.push(a(p,null,"dropdown-header"))}s.push(a(r(h,"opt "+n,l,o),f))}else i.data("divider")===!0?s.push(a("",f,"divider")):i.data("hidden")===!0?s.push(a(r(h,n,l),f,"hide is-hidden")):s.push(a(r(h,n,l),f))}),this.multiple||0!==this.$element.find("option:selected").length||this.options.title||this.$element.find("option").eq(0).prop("selected",!0).attr("selected","selected"),t(s.join(""))},findLis:function(){return null==this.$lis&&(this.$lis=this.$menu.find("li")),this.$lis},render:function(e){var i=this;e!==!1&&this.$element.find("option").each(function(e){i.setDisabled(e,t(this).is(":disabled")||t(this).parent().is(":disabled")),i.setSelected(e,t(this).is(":selected"))}),this.tabIndex();var s=this.options.hideDisabled?":not([disabled])":"",o=this.$element.find("option:selected"+s).map(function(){var e,n=t(this),s=n.data("icon")&&i.options.showIcon?'<i class="'+i.options.iconBase+" "+n.data("icon")+'"></i> ':"";return e=i.options.showSubtext&&n.attr("data-subtext")&&!i.multiple?' <small class="muted text-muted">'+n.data("subtext")+"</small>":"",n.data("content")&&i.options.showContent?n.data("content"):"undefined"!=typeof n.attr("title")?n.attr("title"):s+n.html()+e}).toArray(),a=this.multiple?o.join(this.options.multipleSeparator):o[0];if(this.multiple&&this.options.selectedTextFormat.indexOf("count")>-1){var r=this.options.selectedTextFormat.split(">");if(r.length>1&&o.length>r[1]||1==r.length&&o.length>=2){s=this.options.hideDisabled?", [disabled]":"";var l=this.$element.find("option").not('[data-divider="true"], [data-hidden="true"]'+s).length,h="function"==typeof this.options.countSelectedText?this.options.countSelectedText(o.length,l):this.options.countSelectedText;a=h.replace("{0}",o.length.toString()).replace("{1}",l.toString())}}this.options.title=this.$element.attr("title"),"static"==this.options.selectedTextFormat&&(a=this.options.title),a||(a="undefined"!=typeof this.options.title?this.options.title:this.options.noneSelectedText),this.$button.attr("title",n(a)),this.$newElement.find(".filter-option").html(a)},setStyle:function(t,e){this.$element.attr("class")&&this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|validate\[.*\]/gi,""));var i=t?t:this.options.style;"add"==e?this.$button.addClass(i):"remove"==e?this.$button.removeClass(i):(this.$button.removeClass(this.options.style),this.$button.addClass(i))},liHeight:function(){if(this.options.size!==!1){var t=this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus",!1).end().appendTo("body"),e=t.addClass("open").find("> .dropdown-menu"),i=e.find("li").not(".divider").not(".dropdown-header").filter(":visible").children("a").outerHeight(),n=this.options.header?e.find(".popover-title").outerHeight():0,s=this.options.liveSearch?e.find(".bs-searchbox").outerHeight():0,o=this.options.actionsBox?e.find(".bs-actionsbox").outerHeight():0;t.remove(),this.$newElement.data("liHeight",i).data("headerHeight",n).data("searchHeight",s).data("actionsHeight",o)}},setSize:function(){this.findLis();var e,i,n,s=this,o=this.$menu,a=o.find(".inner"),r=this.$newElement.outerHeight(),l=this.$newElement.data("liHeight"),h=this.$newElement.data("headerHeight"),c=this.$newElement.data("searchHeight"),u=this.$newElement.data("actionsHeight"),d=this.$lis.filter(".divider").outerHeight(!0),f=parseInt(o.css("padding-top"))+parseInt(o.css("padding-bottom"))+parseInt(o.css("border-top-width"))+parseInt(o.css("border-bottom-width")),p=this.options.hideDisabled?", .disabled":"",m=t(window),g=f+parseInt(o.css("margin-top"))+parseInt(o.css("margin-bottom"))+2,v=function(){i=s.$newElement.offset().top-m.scrollTop(),n=m.height()-i-r};if(v(),this.options.header&&o.css("padding-top",0),"auto"==this.options.size){var b=function(){var t,r=s.$lis.not(".hide");v(),e=n-g,s.options.dropupAuto&&s.$newElement.toggleClass("dropup",i>n&&e-g<o.height()),s.$newElement.hasClass("dropup")&&(e=i-g),t=r.length+r.filter(".dropdown-header").length>3?3*l+g-2:0,o.css({"max-height":e+"px",overflow:"hidden","min-height":t+h+c+u+"px"}),a.css({"max-height":e-h-c-u-f+"px","overflow-y":"auto","min-height":Math.max(t-f,0)+"px"})};b(),this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize",b),t(window).off("resize.getSize").on("resize.getSize",b),t(window).off("scroll.getSize").on("scroll.getSize",b)}else if(this.options.size&&"auto"!=this.options.size&&o.find("li"+p).length>this.options.size){var y=this.$lis.not(".divider"+p).find(" > *").slice(0,this.options.size).last().parent().index(),_=this.$lis.slice(0,y+1).filter(".divider").length;e=l*this.options.size+_*d+f,s.options.dropupAuto&&this.$newElement.toggleClass("dropup",i>n&&e<o.height()),o.css({"max-height":e+h+c+u+"px",overflow:"hidden"}),a.css({"max-height":e-f+"px","overflow-y":"auto"})}},setWidth:function(){if("auto"==this.options.width){this.$menu.css("min-width","0");var t=this.$newElement.clone().appendTo("body"),e=t.find("> .dropdown-menu").css("width"),i=t.css("width","auto").find("> button").css("width");t.remove(),this.$newElement.css("width",Math.max(parseInt(e),parseInt(i))+"px")}else"fit"==this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width","").addClass("fit-width")):this.options.width?(this.$menu.css("min-width",""),this.$newElement.css("width",this.options.width)):(this.$menu.css("min-width",""),this.$newElement.css("width",""));this.$newElement.hasClass("fit-width")&&"fit"!==this.options.width&&this.$newElement.removeClass("fit-width")},selectPosition:function(){var e,i,n=this,s="<div />",o=t(s),a=function(t){o.addClass(t.attr("class").replace(/form-control/gi,"")).toggleClass("dropup",t.hasClass("dropup")),e=t.offset(),i=t.hasClass("dropup")?0:t[0].offsetHeight,o.css({top:e.top+i,left:e.left,width:t[0].offsetWidth,position:"absolute"})};this.$newElement.on("click",function(){n.isDisabled()||(a(t(this)),o.appendTo(n.options.container),o.toggleClass("open",!t(this).hasClass("open")),o.append(n.$menu))}),t(window).resize(function(){a(n.$newElement)}),t(window).on("scroll",function(){a(n.$newElement)}),t("html").on("click",function(e){t(e.target).closest(n.$newElement).length<1&&o.removeClass("open")})},setSelected:function(t,e){this.findLis(),this.$lis.filter('[data-original-index="'+t+'"]').toggleClass("selected",e)},setDisabled:function(t,e){this.findLis(),e?this.$lis.filter('[data-original-index="'+t+'"]').addClass("disabled").find("a").attr("href","#").attr("tabindex",-1):this.$lis.filter('[data-original-index="'+t+'"]').removeClass("disabled").find("a").removeAttr("href").attr("tabindex",0)},isDisabled:function(){return this.$element.is(":disabled")},checkDisabled:function(){var t=this;this.isDisabled()?this.$button.addClass("disabled").attr("tabindex",-1):(this.$button.hasClass("disabled")&&this.$button.removeClass("disabled"),this.$button.attr("tabindex")==-1&&(this.$element.data("tabindex")||this.$button.removeAttr("tabindex"))),this.$button.click(function(){return!t.isDisabled()})},tabIndex:function(){this.$element.is("[tabindex]")&&(this.$element.data("tabindex",this.$element.attr("tabindex")),this.$button.attr("tabindex",this.$element.data("tabindex")))},clickListener:function(){var e=this;this.$newElement.on("touchstart.dropdown",".dropdown-menu",function(t){t.stopPropagation()}),this.$newElement.on("click",function(){e.setSize(),e.options.liveSearch||e.multiple||setTimeout(function(){e.$menu.find(".selected a").focus()},10)}),this.$menu.on("click","li a",function(i){var n=t(this),s=n.parent().data("originalIndex"),o=e.$element.val(),a=e.$element.prop("selectedIndex");if(e.multiple&&i.stopPropagation(),i.preventDefault(),!e.isDisabled()&&!n.parent().hasClass("disabled")){var r=e.$element.find("option"),l=r.eq(s),h=l.prop("selected"),c=l.parent("optgroup"),u=e.options.maxOptions,d=c.data("maxOptions")||!1;if(e.multiple){if(l.prop("selected",!h),e.setSelected(s,!h),n.blur(),u!==!1||d!==!1){var f=u<r.filter(":selected").length,p=d<c.find("option:selected").length;if(u&&f||d&&p)if(u&&1==u)r.prop("selected",!1),l.prop("selected",!0),e.$menu.find(".selected").removeClass("selected"),e.setSelected(s,!0);else if(d&&1==d){c.find("option:selected").prop("selected",!1),l.prop("selected",!0);var m=n.data("optgroup");e.$menu.find(".selected").has('a[data-optgroup="'+m+'"]').removeClass("selected"),e.setSelected(s,!0)}else{var g="function"==typeof e.options.maxOptionsText?e.options.maxOptionsText(u,d):e.options.maxOptionsText,v=g[0].replace("{n}",u),b=g[1].replace("{n}",d),y=t('<div class="notify"></div>');g[2]&&(v=v.replace("{var}",g[2][u>1?0:1]),b=b.replace("{var}",g[2][d>1?0:1])),l.prop("selected",!1),e.$menu.append(y),u&&f&&(y.append(t("<div>"+v+"</div>")),e.$element.trigger("maxReached.bs.select")),d&&p&&(y.append(t("<div>"+b+"</div>")),e.$element.trigger("maxReachedGrp.bs.select")),setTimeout(function(){e.setSelected(s,!1)},10),y.delay(750).fadeOut(300,function(){t(this).remove()})}}}else r.prop("selected",!1),l.prop("selected",!0),e.$menu.find(".selected").removeClass("selected"),e.setSelected(s,!0);e.multiple?e.options.liveSearch&&e.$searchbox.focus():e.$button.focus(),(o!=e.$element.val()&&e.multiple||a!=e.$element.prop("selectedIndex")&&!e.multiple)&&e.$element.change()}}),this.$menu.on("click","li.disabled a, .popover-title, .popover-title :not(.close)",function(t){t.target==this&&(t.preventDefault(),t.stopPropagation(),e.options.liveSearch?e.$searchbox.focus():e.$button.focus())}),this.$menu.on("click","li.divider, li.dropdown-header",function(t){t.preventDefault(),t.stopPropagation(),e.options.liveSearch?e.$searchbox.focus():e.$button.focus()}),this.$menu.on("click",".popover-title .close",function(){e.$button.focus()}),this.$searchbox.on("click",function(t){t.stopPropagation()}),this.$menu.on("click",".actions-btn",function(i){e.options.liveSearch?e.$searchbox.focus():e.$button.focus(),i.preventDefault(),i.stopPropagation(),t(this).is(".bs-select-all")?e.selectAll():e.deselectAll(),e.$element.change()}),this.$element.change(function(){e.render(!1)})},liveSearchListener:function(){var e=this,s=t('<li class="no-results"></li>');this.$newElement.on("click.dropdown.data-api touchstart.dropdown.data-api",function(){e.$menu.find(".active").removeClass("active"),e.$searchbox.val()&&(e.$searchbox.val(""),e.$lis.not(".is-hidden").removeClass("hide"),s.parent().length&&s.remove()),e.multiple||e.$menu.find(".selected").addClass("active"),setTimeout(function(){e.$searchbox.focus()},10)}),this.$searchbox.on("click.dropdown.data-api focus.dropdown.data-api touchend.dropdown.data-api",function(t){t.stopPropagation()}),this.$searchbox.on("input propertychange",function(){e.$searchbox.val()?(e.options.searchAccentInsensitive?e.$lis.not(".is-hidden").removeClass("hide").find("a").not(":aicontains("+i(e.$searchbox.val())+")").parent().addClass("hide"):e.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains("+e.$searchbox.val()+")").parent().addClass("hide"),e.$menu.find("li").filter(":visible:not(.no-results)").length?s.parent().length&&s.remove():(s.parent().length&&s.remove(),s.html(e.options.noneResultsText+' "'+n(e.$searchbox.val())+'"').show(),e.$menu.find("li").last().after(s))):(e.$lis.not(".is-hidden").removeClass("hide"),s.parent().length&&s.remove()),e.$menu.find("li.active").removeClass("active"),e.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(),t(this).focus()})},val:function(t){return"undefined"!=typeof t?(this.$element.val(t),this.render(),this.$element):this.$element.val()},selectAll:function(){this.findLis(),this.$lis.not(".divider").not(".disabled").not(".selected").filter(":visible").find("a").click()},deselectAll:function(){this.findLis(),this.$lis.not(".divider").not(".disabled").filter(".selected").filter(":visible").find("a").click()},keydown:function(e){var n,s,o,a,r,l,h,c,u,d=t(this),f=d.is("input")?d.parent().parent():d.parent(),p=f.data("this"),m={32:" ",48:"0",49:"1",50:"2",51:"3",52:"4",53:"5",54:"6",55:"7",56:"8",57:"9",59:";",65:"a",66:"b",67:"c",68:"d",69:"e",70:"f",71:"g",72:"h",73:"i",74:"j",75:"k",76:"l",77:"m",78:"n",79:"o",80:"p",81:"q",82:"r",83:"s",84:"t",85:"u",86:"v",87:"w",88:"x",89:"y",90:"z",96:"0",97:"1",98:"2",99:"3",100:"4",101:"5",102:"6",103:"7",104:"8",105:"9"};if(p.options.liveSearch&&(f=d.parent().parent()),p.options.container&&(f=p.$menu),n=t("[role=menu] li a",f),u=p.$menu.parent().hasClass("open"),!u&&/([0-9]|[A-z])/.test(String.fromCharCode(e.keyCode))&&(p.options.container?p.$newElement.trigger("click"):(p.setSize(),p.$menu.parent().addClass("open"),u=!0),p.$searchbox.focus()),p.options.liveSearch&&(/(^9$|27)/.test(e.keyCode.toString(10))&&u&&0===p.$menu.find(".active").length&&(e.preventDefault(),p.$menu.parent().removeClass("open"),p.$button.focus()),n=t("[role=menu] li:not(.divider):not(.dropdown-header):visible",f),d.val()||/(38|40)/.test(e.keyCode.toString(10))||0===n.filter(".active").length&&(n=p.options.searchAccentInsensitive?p.$newElement.find("li").filter(":aicontains("+i(m[e.keyCode])+")"):p.$newElement.find("li").filter(":icontains("+m[e.keyCode]+")"))),n.length){if(/(38|40)/.test(e.keyCode.toString(10)))s=n.index(n.filter(":focus")),a=n.parent(":not(.disabled):visible").first().index(),r=n.parent(":not(.disabled):visible").last().index(),o=n.eq(s).parent().nextAll(":not(.disabled):visible").eq(0).index(),l=n.eq(s).parent().prevAll(":not(.disabled):visible").eq(0).index(),h=n.eq(o).parent().prevAll(":not(.disabled):visible").eq(0).index(),p.options.liveSearch&&(n.each(function(e){t(this).is(":not(.disabled)")&&t(this).data("index",e)}),s=n.index(n.filter(".active")),a=n.filter(":not(.disabled):visible").first().data("index"),r=n.filter(":not(.disabled):visible").last().data("index"),o=n.eq(s).nextAll(":not(.disabled):visible").eq(0).data("index"),l=n.eq(s).prevAll(":not(.disabled):visible").eq(0).data("index"),h=n.eq(o).prevAll(":not(.disabled):visible").eq(0).data("index")),c=d.data("prevIndex"),38==e.keyCode&&(p.options.liveSearch&&(s-=1),s!=h&&s>l&&(s=l),s<a&&(s=a),s==c&&(s=r)),40==e.keyCode&&(p.options.liveSearch&&(s+=1),s==-1&&(s=0),s!=h&&s<o&&(s=o),s>r&&(s=r),s==c&&(s=a)),d.data("prevIndex",s),p.options.liveSearch?(e.preventDefault(),d.is(".dropdown-toggle")||(n.removeClass("active"),n.eq(s).addClass("active").find("a").focus(),d.focus())):n.eq(s).focus();else if(!d.is("input")){var g,v,b=[];n.each(function(){t(this).parent().is(":not(.disabled)")&&t.trim(t(this).text().toLowerCase()).substring(0,1)==m[e.keyCode]&&b.push(t(this).parent().index());
}),g=t(document).data("keycount"),g++,t(document).data("keycount",g),v=t.trim(t(":focus").text().toLowerCase()).substring(0,1),v!=m[e.keyCode]?(g=1,t(document).data("keycount",g)):g>=b.length&&(t(document).data("keycount",0),g>b.length&&(g=1)),n.eq(b[g-1]).focus()}(/(13|32)/.test(e.keyCode.toString(10))||/(^9$)/.test(e.keyCode.toString(10))&&p.options.selectOnTab)&&u&&(/(32)/.test(e.keyCode.toString(10))||e.preventDefault(),p.options.liveSearch?/(32)/.test(e.keyCode.toString(10))||(p.$menu.find(".active a").click(),d.focus()):t(":focus").click(),t(document).data("keycount",0)),(/(^9$|27)/.test(e.keyCode.toString(10))&&u&&(p.multiple||p.options.liveSearch)||/(27)/.test(e.keyCode.toString(10))&&!u)&&(p.$menu.parent().removeClass("open"),p.$button.focus())}},mobile:function(){this.$element.addClass("mobile-device").appendTo(this.$newElement),this.options.container&&this.$menu.hide()},refresh:function(){this.$lis=null,this.reloadLi(),this.render(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},update:function(){this.reloadLi(),this.setWidth(),this.setStyle(),this.checkDisabled(),this.liHeight()},hide:function(){this.$newElement.hide()},show:function(){this.$newElement.show()},remove:function(){this.$newElement.remove(),this.$element.remove()}};var a=t.fn.selectpicker;t.fn.selectpicker=s,t.fn.selectpicker.Constructor=o,t.fn.selectpicker.noConflict=function(){return t.fn.selectpicker=a,this},t(document).data("keycount",0).on("keydown",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bs-searchbox input",o.prototype.keydown).on("focusin.modal",".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bs-searchbox input",function(t){t.stopPropagation()}),t(window).on("load.bs.select.data-api",function(){t(".selectpicker").each(function(){var e=t(this);s.call(e,e.data())})})}(jQuery),+function(t){"use strict";function e(e){return this.each(function(){var n=t(this),s=n.data("bs.toggle"),o="object"==typeof e&&e;s||n.data("bs.toggle",s=new i(this,o)),"string"==typeof e&&s[e]&&s[e]()})}var i=function(e,i){this.$element=t(e),this.options=t.extend({},this.defaults(),i),this.render()};i.VERSION="2.2.0",i.DEFAULTS={on:"On",off:"Off",onstyle:"light",offstyle:"light",size:"normal",style:"",width:null,height:null},i.prototype.defaults=function(){return{on:this.$element.attr("data-on")||i.DEFAULTS.on,off:this.$element.attr("data-off")||i.DEFAULTS.off,onstyle:this.$element.attr("data-onstyle")||i.DEFAULTS.onstyle,offstyle:this.$element.attr("data-offstyle")||i.DEFAULTS.offstyle,size:this.$element.attr("data-size")||i.DEFAULTS.size,style:this.$element.attr("data-style")||i.DEFAULTS.style,width:this.$element.attr("data-width")||i.DEFAULTS.width,height:this.$element.attr("data-height")||i.DEFAULTS.height}},i.prototype.render=function(){this._onstyle="btn-"+this.options.onstyle,this._offstyle="btn-"+this.options.offstyle;var e="large"===this.options.size?"btn-lg":"small"===this.options.size?"btn-sm":"mini"===this.options.size?"btn-xs":"",i=t('<label class="btn">').html(this.options.on).addClass(this._onstyle+" "+e),n=t('<label class="btn">').html(this.options.off).addClass(this._offstyle+" "+e+" active"),s=t('<span class="toggle-handle btn btn-toggle">').addClass(e),o=t('<div class="toggle-group">').append(i,n,s),a=t('<div class="toggle btn" data-toggle="toggle">').addClass(this.$element.prop("checked")?this._onstyle:this._offstyle+" off").addClass(e).addClass(this.options.style);this.$element.wrap(a),t.extend(this,{$toggle:this.$element.parent(),$toggleOn:i,$toggleOff:n,$toggleGroup:o}),this.$toggle.append(o);var r=this.options.width||Math.max(i.outerWidth(),n.outerWidth())+s.outerWidth()/2,l=this.options.height||Math.max(i.outerHeight(),n.outerHeight());i.addClass("toggle-on"),n.addClass("toggle-off"),this.$toggle.css({width:r,height:l}),this.options.height&&(i.css("line-height",i.height()+"px"),n.css("line-height",n.height()+"px")),this.update(!0),this.trigger(!0)},i.prototype.toggle=function(){this.$element.prop("checked")?this.off():this.on()},i.prototype.on=function(t){return!this.$element.prop("disabled")&&(this.$toggle.removeClass(this._offstyle+" off").addClass(this._onstyle),this.$element.prop("checked",!0),void(t||this.trigger()))},i.prototype.off=function(t){return!this.$element.prop("disabled")&&(this.$toggle.removeClass(this._onstyle).addClass(this._offstyle+" off"),this.$element.prop("checked",!1),void(t||this.trigger()))},i.prototype.enable=function(){this.$toggle.removeAttr("disabled"),this.$element.prop("disabled",!1)},i.prototype.disable=function(){this.$toggle.attr("disabled","disabled"),this.$element.prop("disabled",!0)},i.prototype.update=function(t){this.$element.prop("disabled")?this.disable():this.enable(),this.$element.prop("checked")?this.on(t):this.off(t)},i.prototype.trigger=function(e){this.$element.off("change.bs.toggle"),e||this.$element.change(),this.$element.on("change.bs.toggle",t.proxy(function(){this.update()},this))},i.prototype.destroy=function(){this.$element.off("change.bs.toggle"),this.$toggleGroup.remove(),this.$element.removeData("bs.toggle"),this.$element.unwrap()};var n=t.fn.bootstrapToggle;t.fn.bootstrapToggle=e,t.fn.bootstrapToggle.Constructor=i,t.fn.toggle.noConflict=function(){return t.fn.bootstrapToggle=n,this},t(function(){t("input[type=checkbox][data-toggle^=toggle]").bootstrapToggle()}),t(document).on("click.bs.toggle","div[data-toggle^=toggle]",function(e){var i=t(this).find("input[type=checkbox]");i.bootstrapToggle("toggle"),e.preventDefault()})}(jQuery),$(document).ready(function(){$("#showtop").click(function(){$("#alerttop").fadeToggle(350)})}),$(document).ready(function(){$("#showbottom").click(function(){$("#alertbottom").fadeToggle(350)})}),$(document).ready(function(){$("#showtopleft").click(function(){$("#alerttopleft").fadeToggle(350)})}),$(document).ready(function(){$("#showtopright").click(function(){$("#alerttopright").fadeToggle(350)})}),$(document).ready(function(){$("#showbottomleft").click(function(){$("#alertbottomleft").fadeToggle(350)})}),$(document).ready(function(){$("#showbottomright").click(function(){$("#alertbottomright").fadeToggle(350)})}),!function(t,e,i){function n(t){var e=x(),i=e.querySelector("h2"),n=e.querySelector("p"),s=e.querySelector("button.cancel"),o=e.querySelector("button.confirm");if(i.innerHTML=t.html?t.title:k(t.title).split("\n").join("<br>"),n.innerHTML=t.html?t.text:k(t.text||"").split("\n").join("<br>"),t.text&&M(n),t.customClass)S(e,t.customClass),e.setAttribute("data-custom-class",t.customClass);else{var a=e.getAttribute("data-custom-class");T(e,a),e.setAttribute("data-custom-class","")}if(A(e.querySelectorAll(".sa-icon")),t.type&&!c()){for(var l=!1,h=0;h<_.length;h++)if(t.type===_[h]){l=!0;break}if(!l)return u("Unknown alert type: "+t.type),!1;var d=e.querySelector(".sa-icon.sa-"+t.type);switch(M(d),t.type){case"success":S(d,"animate"),S(d.querySelector(".sa-tip"),"animateSuccessTip"),S(d.querySelector(".sa-long"),"animateSuccessLong");break;case"error":S(d,"animateErrorIcon"),S(d.querySelector(".sa-x-mark"),"animateXMark");break;case"warning":S(d,"pulseWarning"),S(d.querySelector(".sa-body"),"pulseWarningIns"),S(d.querySelector(".sa-dot"),"pulseWarningIns")}}if(t.imageUrl){var f=e.querySelector(".sa-icon.sa-custom");f.style.backgroundImage="url("+t.imageUrl+")",M(f);var p=80,m=80;if(t.imageSize){var g=t.imageSize.toString().split("x"),v=g[0],b=g[1];v&&b?(p=v,m=b):u("Parameter imageSize expects value with format WIDTHxHEIGHT, got "+t.imageSize)}f.setAttribute("style",f.getAttribute("style")+"width:"+p+"px; height:"+m+"px")}e.setAttribute("data-has-cancel-button",t.showCancelButton),t.showCancelButton?s.style.display="inline-block":A(s),e.setAttribute("data-has-confirm-button",t.showConfirmButton),t.showConfirmButton?o.style.display="inline-block":A(o),t.cancelButtonText&&(s.innerHTML=k(t.cancelButtonText)),t.confirmButtonText&&(o.innerHTML=k(t.confirmButtonText)),o.style.backgroundColor=t.confirmButtonColor,r(o,t.confirmButtonColor),e.setAttribute("data-allow-ouside-click",t.allowOutsideClick);var y=!!t.doneFunction;e.setAttribute("data-has-done-function",y),t.animation?e.setAttribute("data-animation","pop"):e.setAttribute("data-animation","none"),e.setAttribute("data-timer",t.timer)}function s(t,e){t=String(t).replace(/[^0-9a-f]/gi,""),t.length<6&&(t=t[0]+t[0]+t[1]+t[1]+t[2]+t[2]),e=e||0;var i,n,s="#";for(n=0;3>n;n++)i=parseInt(t.substr(2*n,2),16),i=Math.round(Math.min(Math.max(0,i+i*e),255)).toString(16),s+=("00"+i).substr(i.length);return s}function o(t,e){for(var i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}function a(t){var e=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(t);return e?parseInt(e[1],16)+", "+parseInt(e[2],16)+", "+parseInt(e[3],16):null}function r(t,e){var i=a(e);t.style.boxShadow="0 0 2px rgba("+i+", 0.8), inset 0 0 0 1px rgba(0, 0, 0, 0.05)"}function l(){var t=x();O(D(),10),M(t),S(t,"showSweetAlert"),T(t,"hideSweetAlert"),d=e.activeElement;var i=t.querySelector("button.confirm");i.focus(),setTimeout(function(){S(t,"visible")},500);var n=t.getAttribute("data-timer");"null"!==n&&""!==n&&(t.timeout=setTimeout(function(){g.close()},n))}function h(){var t=x();t.style.marginTop=H(x())}function c(){return!(!t.attachEvent||t.addEventListener)}function u(e){t.console&&t.console.log("SweetAlert: "+e)}var d,f,p,m,g,v,b=".sweet-alert",y=".sweet-overlay",_=["error","warning","info","success"],w={title:"",text:"",type:null,allowOutsideClick:!1,showConfirmButton:!0,showCancelButton:!1,closeOnConfirm:!0,closeOnCancel:!0,confirmButtonText:"OK",confirmButtonColor:"#399BFF",cancelButtonText:"Cancel",imageUrl:null,imageSize:null,timer:null,customClass:"",html:!1,animation:!0,allowEscapeKey:!0},x=function(){var t=e.querySelector(b);return t||(F(),t=x()),t},D=function(){return e.querySelector(y)},C=function(t,e){return new RegExp(" "+e+" ").test(" "+t.className+" ")},S=function(t,e){C(t,e)||(t.className+=" "+e)},T=function(t,e){var i=" "+t.className.replace(/[\t\r\n]/g," ")+" ";if(C(t,e)){for(;i.indexOf(" "+e+" ")>=0;)i=i.replace(" "+e+" "," ");t.className=i.replace(/^\s+|\s+$/g,"")}},k=function(t){var i=e.createElement("div");return i.appendChild(e.createTextNode(t)),i.innerHTML},E=function(t){t.style.opacity="",t.style.display="block"},M=function(t){if(t&&!t.length)return E(t);for(var e=0;e<t.length;++e)E(t[e])},I=function(t){t.style.opacity="",t.style.display="none"},A=function(t){if(t&&!t.length)return I(t);for(var e=0;e<t.length;++e)I(t[e])},P=function(t,e){for(var i=e.parentNode;null!==i;){if(i===t)return!0;i=i.parentNode}return!1},H=function(t){t.style.left="-9999px",t.style.display="block";var e,i=t.clientHeight;return e="undefined"!=typeof getComputedStyle?parseInt(getComputedStyle(t).getPropertyValue("padding"),10):parseInt(t.currentStyle.padding),t.style.left="",t.style.display="none","-"+parseInt(i/2+e)+"px"},O=function(t,e){if(+t.style.opacity<1){e=e||16,t.style.opacity=0,t.style.display="block";var i=+new Date,n=function(){t.style.opacity=+t.style.opacity+(new Date-i)/100,i=+new Date,+t.style.opacity<1&&setTimeout(n,e)};n()}t.style.display="block"},N=function(t,e){e=e||16,t.style.opacity=1;var i=+new Date,n=function(){t.style.opacity=+t.style.opacity-(new Date-i)/100,i=+new Date,+t.style.opacity>0?setTimeout(n,e):t.style.display="none"};n()},L=function(i){if("function"==typeof MouseEvent){var n=new MouseEvent("click",{view:t,bubbles:!1,cancelable:!0});i.dispatchEvent(n)}else if(e.createEvent){var s=e.createEvent("MouseEvents");s.initEvent("click",!1,!1),i.dispatchEvent(s)}else e.createEventObject?i.fireEvent("onclick"):"function"==typeof i.onclick&&i.onclick()},R=function(e){"function"==typeof e.stopPropagation?(e.stopPropagation(),e.preventDefault()):t.event&&t.event.hasOwnProperty("cancelBubble")&&(t.event.cancelBubble=!0)},F=function(){var t='<div class="sweet-overlay" tabIndex="-1"></div><div class="sweet-alert" tabIndex="-1"><div class="sa-icon sa-error"><span class="sa-x-mark"><span class="sa-line sa-left"></span><span class="sa-line sa-right"></span></span></div><div class="sa-icon sa-warning"> <span class="sa-body"></span> <span class="sa-dot"></span> </div> <div class="sa-icon sa-info"></div> <div class="sa-icon sa-success"> <span class="sa-line sa-tip"></span> <span class="sa-line sa-long"></span> <div class="sa-placeholder"></div> <div class="sa-fix"></div> </div> <div class="sa-icon sa-custom"></div> <h2>Title</h2><p>Text</p><button class="cancel" tabIndex="2">Cancel</button><button class="confirm" tabIndex="1">OK</button></div>',i=e.createElement("div");for(i.innerHTML=t;i.firstChild;)e.body.appendChild(i.firstChild)};g=v=function(){function a(t){var e=v;return"undefined"!=typeof e[t]?e[t]:w[t]}function c(e){var n=e||t.event,s=n.keyCode||n.which;if(-1!==[9,13,32,27].indexOf(s)){for(var o=n.target||n.srcElement,a=-1,l=0;l<H.length;l++)if(o===H[l]){a=l;break}9===s?(o=-1===a?I:a===H.length-1?H[0]:H[a+1],R(n),o.focus(),r(o,b.confirmButtonColor)):(o=13===s||32===s?-1===a?I:i:27===s&&b.allowEscapeKey===!0?A:i,o!==i&&L(o,n))}}function d(e){var i=e||t.event,n=i.target||i.srcElement,s=i.relatedTarget,o=C(T,"visible");if(o){var a=-1;if(null!==s){for(var r=0;r<H.length;r++)if(s===H[r]){a=r;break}-1===a&&n.focus()}else m=n}}var v=arguments[0];if(arguments[0]===i)return u("SweetAlert expects at least 1 attribute!"),!1;var b=o({},w);switch(typeof arguments[0]){case"string":b.title=arguments[0],b.text=arguments[1]||"",b.type=arguments[2]||"";break;case"object":if(arguments[0].title===i)return u('Missing "title" argument!'),!1;b.title=arguments[0].title;for(var y=["text","type","customClass","allowOutsideClick","showConfirmButton","showCancelButton","closeOnConfirm","closeOnCancel","timer","confirmButtonColor","cancelButtonText","imageUrl","imageSize","html","animation","allowEscapeKey"],_=y.length,D=0;_>D;D++){var S=y[D];b[S]=a(S)}b.confirmButtonText=b.showCancelButton?"Confirm":w.confirmButtonText,b.confirmButtonText=a("confirmButtonText"),b.doneFunction=arguments[1]||null;break;default:return u('Unexpected type of argument! Expected "string" or "object", got '+typeof arguments[0]),!1}n(b),h(),l();for(var T=x(),k=function(e){var i=e||t.event,n=i.target||i.srcElement,o=-1!==n.className.indexOf("confirm"),a=C(T,"visible"),r=b.doneFunction&&"true"===T.getAttribute("data-has-done-function");switch(i.type){case"mouseover":o&&(n.style.backgroundColor=s(b.confirmButtonColor,-.04));break;case"mouseout":o&&(n.style.backgroundColor=b.confirmButtonColor);break;case"mousedown":o&&(n.style.backgroundColor=s(b.confirmButtonColor,-.14));break;case"mouseup":o&&(n.style.backgroundColor=s(b.confirmButtonColor,-.04));break;case"focus":var l=T.querySelector("button.confirm"),h=T.querySelector("button.cancel");o?h.style.boxShadow="none":l.style.boxShadow="none";break;case"click":if(o&&r&&a)b.doneFunction(!0),b.closeOnConfirm&&g.close();else if(r&&a){var c=String(b.doneFunction).replace(/\s/g,""),u="function("===c.substring(0,9)&&")"!==c.substring(9,10);u&&b.doneFunction(!1),b.closeOnCancel&&g.close()}else g.close()}},E=T.querySelectorAll("button"),M=0;M<E.length;M++)E[M].onclick=k,E[M].onmouseover=k,E[M].onmouseout=k,E[M].onmousedown=k,E[M].onfocus=k;f=e.onclick,e.onclick=function(e){var i=e||t.event,n=i.target||i.srcElement,s=T===n,o=P(T,n),a=C(T,"visible"),r="true"===T.getAttribute("data-allow-ouside-click");!s&&!o&&a&&r&&g.close()};var I=T.querySelector("button.confirm"),A=T.querySelector("button.cancel"),H=T.querySelectorAll("button[tabindex]");p=t.onkeydown,t.onkeydown=c,I.onblur=d,A.onblur=d,t.onfocus=function(){t.setTimeout(function(){m!==i&&(m.focus(),m=i)},0)}},g.setDefaults=v.setDefaults=function(t){if(!t)throw new Error("userParams is required");if("object"!=typeof t)throw new Error("userParams has to be a object");o(w,t)},g.close=v.close=function(){var n=x();N(D(),5),N(n,5),T(n,"showSweetAlert"),S(n,"hideSweetAlert"),T(n,"visible");var s=n.querySelector(".sa-icon.sa-success");T(s,"animate"),T(s.querySelector(".sa-tip"),"animateSuccessTip"),T(s.querySelector(".sa-long"),"animateSuccessLong");var o=n.querySelector(".sa-icon.sa-error");T(o,"animateErrorIcon"),T(o.querySelector(".sa-x-mark"),"animateXMark");var a=n.querySelector(".sa-icon.sa-warning");T(a,"pulseWarning"),T(a.querySelector(".sa-body"),"pulseWarningIns"),T(a.querySelector(".sa-dot"),"pulseWarningIns"),t.onkeydown=p,e.onclick=f,d&&d.focus(),m=i,clearTimeout(n.timeout)},"function"==typeof define&&define.amd?define(function(){return g}):"undefined"!=typeof module&&module.exports?module.exports=g:"undefined"!=typeof t&&(t.sweetAlert=t.swal=g)}(window,document),!function(t,e){"use strict";var i={"font-styles":"<li class='dropdown'><a class='btn dropdown-toggle' data-toggle='dropdown' href='#'><i class='icon-font'></i>&nbsp;<span class='current-font'>Normal text</span>&nbsp;<b class='caret'></b></a><ul class='dropdown-menu'><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='div'>Normal text</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h1'>Heading 1</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h2'>Heading 2</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h3'>Heading 3</a></li><li><a data-wysihtml5-command='formatBlock' data-wysihtml5-command-value='h4'>Heading 4</a></li></ul></li>",emphasis:"<li><div class='btn-group'><a class='btn' data-wysihtml5-command='bold' title='CTRL+B'>Bold</a><a class='btn' data-wysihtml5-command='italic' title='CTRL+I'>Italic</a><a class='btn' data-wysihtml5-command='underline' title='CTRL+U'>Underline</a></div></li>",lists:"<li><div class='btn-group'><a class='btn' data-wysihtml5-command='insertUnorderedList' title='Unordered List'><i class='fa fa-list'></i></a><a class='btn' data-wysihtml5-command='insertOrderedList' title='Ordered List'><i class='fa fa-th-list'></i></a><a class='btn' data-wysihtml5-command='Outdent' title='Outdent'><i class='fa fa-outdent'></i></a><a class='btn' data-wysihtml5-command='Indent' title='Indent'><i class='fa fa-indent'></i></a></div></li>",link:"<li><div class='bootstrap-wysihtml5-insert-link-modal modal hide fade'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h3>Insert Link</h3></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-link-url input-xlarge'></div><div class='modal-footer'><a href='#' class='btn' data-dismiss='modal'>Cancel</a><a href='#' class='btn btn-primary' data-dismiss='modal'>Insert link</a></div></div><a class='btn' data-wysihtml5-command='createLink' title='Link'><i class='fa fa-external-link'></i></a></li>",image:"<li><div class='bootstrap-wysihtml5-insert-image-modal modal hide fade'><div class='modal-header'><a class='close' data-dismiss='modal'>&times;</a><h3>Insert Image</h3></div><div class='modal-body'><input value='http://' class='bootstrap-wysihtml5-insert-image-url input-xlarge'></div><div class='modal-footer'><a href='#' class='btn' data-dismiss='modal'>Cancel</a><a href='#' class='btn btn-primary' data-dismiss='modal'>Insert image</a></div></div><a class='btn' data-wysihtml5-command='insertImage' title='Insert image'><i class='fa fa-image'></i></a></li>",html:"<li><div class='btn-group'><a class='btn' data-wysihtml5-action='change_view' title='Edit HTML'><i class='icon-pencil'></i></a></div></li>"},n={"font-styles":!0,emphasis:!0,lists:!0,html:!1,link:!1,image:!1,events:{},parserRules:{tags:{b:{},i:{},br:{},ol:{},ul:{},li:{},h1:{},h2:{},u:1,img:{check_attributes:{width:"numbers",alt:"alt",src:"url",height:"numbers"}},a:{set_attributes:{target:"_blank",rel:"nofollow"},check_attributes:{href:"url"}}}},stylesheets:[]},s=function(e,i){this.el=e,this.toolbar=this.createToolbar(e,i||n),this.editor=this.createEditor(i),window.editor=this.editor,t("iframe.wysihtml5-sandbox").each(function(e,i){t(i.contentWindow).off("focus.wysihtml5").on({"focus.wysihtml5":function(){t("li.dropdown").removeClass("open")}})})};s.prototype={constructor:s,createEditor:function(i){i=t.extend(n,i||{}),i.toolbar=this.toolbar[0];var s=new e.Editor(this.el[0],i);if(i&&i.events)for(var o in i.events)s.on(o,i.events[o]);return s},createToolbar:function(e,s){var o=this,a=t("<ul/>",{"class":"wysihtml5-toolbar",style:"display:none"});for(var r in n){var l=!1;void 0!==s[r]?s[r]===!0&&(l=!0):l=n[r],l===!0&&(a.append(i[r]),"html"==r&&this.initHtml(a),"link"==r&&this.initInsertLink(a),"image"==r&&this.initInsertImage(a))}return a.find("a[data-wysihtml5-command='formatBlock']").click(function(e){var i=t(e.srcElement);o.toolbar.find(".current-font").text(i.html())}),this.el.before(a),a},initHtml:function(t){var e="a[data-wysihtml5-action='change_view']";t.find(e).click(function(i){t.find("a.btn").not(e).toggleClass("disabled")})},initInsertImage:function(t){var e=this,i=t.find(".bootstrap-wysihtml5-insert-image-modal"),n=i.find(".bootstrap-wysihtml5-insert-image-url"),s=i.find("a.btn-primary"),o=n.val(),a=function(){var t=n.val();n.val(o),e.editor.composer.commands.exec("insertImage",t)};n.keypress(function(t){13==t.which&&(a(),i.modal("hide"))}),s.click(a),i.on("shown",function(){n.focus()}),i.on("hide",function(){e.editor.currentView.element.focus()}),t.find("a[data-wysihtml5-command=insertImage]").click(function(){return i.modal("show"),i.on("click.dismiss.modal",'[data-dismiss="modal"]',function(t){t.stopPropagation()}),!1})},initInsertLink:function(t){var e=this,i=t.find(".bootstrap-wysihtml5-insert-link-modal"),n=i.find(".bootstrap-wysihtml5-insert-link-url"),s=i.find("a.btn-default"),o=n.val(),a=function(){var t=n.val();n.val(o),e.editor.composer.commands.exec("createLink",{href:t,target:"_blank",rel:"nofollow"})};n.keypress(function(t){13==t.which&&(a(),i.modal("hide"))}),s.click(a),i.on("shown",function(){n.focus()}),i.on("hide",function(){e.editor.currentView.element.focus()}),t.find("a[data-wysihtml5-command=createLink]").click(function(){return i.modal("show"),i.on("click.dismiss.modal",'[data-dismiss="modal"]',function(t){t.stopPropagation()}),!1})}},t.fn.wysihtml5=function(e){return this.each(function(){var i=t(this);i.data("wysihtml5",new s(i,e))})},t.fn.wysihtml5.Constructor=s}(window.jQuery,window.wysihtml5),function(t,e){"function"==typeof define&&define.amd?define([],function(){return t.Chartist=e()}):"object"==typeof exports?module.exports=e():t.Chartist=e()}(this,function(){var t={version:"0.7.3"};return function(t,e,i){"use strict";i.noop=function(t){return t},i.alphaNumerate=function(t){return String.fromCharCode(97+t%26)},i.extend=function(t){t=t||{};var e=Array.prototype.slice.call(arguments,1);return e.forEach(function(e){for(var n in e)"object"!=typeof e[n]||e[n]instanceof Array?t[n]=e[n]:t[n]=i.extend({},t[n],e[n])}),t},i.replaceAll=function(t,e,i){return t.replace(new RegExp(e,"g"),i)},i.stripUnit=function(t){return"string"==typeof t&&(t=t.replace(/[^0-9\+-\.]/g,"")),+t},i.ensureUnit=function(t,e){return"number"==typeof t&&(t+=e),t},i.querySelector=function(t){return t instanceof Node?t:e.querySelector(t)},i.times=function(t){return Array.apply(null,new Array(t))},i.sum=function(t,e){return t+e},i.serialMap=function(t,e){var n=[],s=Math.max.apply(null,t.map(function(t){return t.length}));return i.times(s).forEach(function(i,s){var o=t.map(function(t){return t[s]});n[s]=e.apply(null,o)}),n},i.roundWithPrecision=function(t,e){var n=Math.pow(10,e||i.precision);return Math.round(t*n)/n},i.precision=8,i.escapingMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"},i.serialize=function(t){return null===t||void 0===t?t:("number"==typeof t?t=""+t:"object"==typeof t&&(t=JSON.stringify({data:t})),Object.keys(i.escapingMap).reduce(function(t,e){return i.replaceAll(t,e,i.escapingMap[e])},t))},i.deserialize=function(t){if("string"!=typeof t)return t;t=Object.keys(i.escapingMap).reduce(function(t,e){return i.replaceAll(t,i.escapingMap[e],e)},t);try{t=JSON.parse(t),t=void 0!==t.data?t.data:t}catch(e){}return t},i.createSvg=function(t,e,n,s){var o;return e=e||"100%",n=n||"100%",Array.prototype.slice.call(t.querySelectorAll("svg")).filter(function(t){return t.getAttribute(i.xmlNs.qualifiedName)}).forEach(function(e){t.removeChild(e)}),o=new i.Svg("svg").attr({width:e,height:n}).addClass(s).attr({style:"width: "+e+"; height: "+n+";"}),t.appendChild(o._node),o},i.reverseData=function(t){t.labels.reverse(),t.series.reverse();for(var e=0;e<t.series.length;e++)"object"==typeof t.series[e]&&void 0!==t.series[e].data?t.series[e].data.reverse():t.series[e].reverse()},i.getDataArray=function(t,e){var n,s,o=[];(e&&!t.reversed||!e&&t.reversed)&&(i.reverseData(t),t.reversed=!t.reversed);for(var a=0;a<t.series.length;a++){s="object"==typeof t.series[a]&&void 0!==t.series[a].data?t.series[a].data:t.series[a],s instanceof Array?(o[a]=[],Array.prototype.push.apply(o[a],s)):o[a]=s;for(var r=0;r<o[a].length;r++)n=o[a][r],n=0===n.value?0:n.value||n,o[a][r]=+n}return o},i.normalizePadding=function(t,e){return e=e||0,"number"==typeof t?{top:t,right:t,bottom:t,left:t}:{top:"number"==typeof t.top?t.top:e,right:"number"==typeof t.right?t.right:e,bottom:"number"==typeof t.bottom?t.bottom:e,left:"number"==typeof t.left?t.left:e}},i.normalizeDataArray=function(t,e){for(var i=0;i<t.length;i++)if(t[i].length!==e)for(var n=t[i].length;n<e;n++)t[i][n]=0;return t},i.getMetaData=function(t,e){var n=t.data?t.data[e]:t[e];return n?i.serialize(n.meta):void 0},i.orderOfMagnitude=function(t){return Math.floor(Math.log(Math.abs(t))/Math.LN10)},i.projectLength=function(t,e,i){return e/i.range*t},i.getAvailableHeight=function(t,e){return Math.max((i.stripUnit(e.height)||t.height())-(e.chartPadding.top+e.chartPadding.bottom)-e.axisX.offset,0)},i.getHighLow=function(t){var e,i,n={high:-Number.MAX_VALUE,low:Number.MAX_VALUE};for(e=0;e<t.length;e++)for(i=0;i<t[e].length;i++)t[e][i]>n.high&&(n.high=t[e][i]),t[e][i]<n.low&&(n.low=t[e][i]);return n},i.getBounds=function(t,e,n,s){var o,a,r,l={high:e.high,low:e.low};l.high===l.low&&(0===l.low?l.high=1:l.low<0?l.high=0:l.low=0),(s||0===s)&&(l.high=Math.max(s,l.high),l.low=Math.min(s,l.low)),l.valueRange=l.high-l.low,l.oom=i.orderOfMagnitude(l.valueRange),l.min=Math.floor(l.low/Math.pow(10,l.oom))*Math.pow(10,l.oom),l.max=Math.ceil(l.high/Math.pow(10,l.oom))*Math.pow(10,l.oom),l.range=l.max-l.min,l.step=Math.pow(10,l.oom),l.numberOfSteps=Math.round(l.range/l.step);for(var h=i.projectLength(t,l.step,l),c=h<n;;)if(c&&i.projectLength(t,l.step,l)<=n)l.step*=2;else{if(c||!(i.projectLength(t,l.step/2,l)>=n))break;l.step/=2}for(a=l.min,r=l.max,o=l.min;o<=l.max;o+=l.step)o+l.step<l.low&&(a+=l.step),o-l.step>=l.high&&(r-=l.step);for(l.min=a,l.max=r,l.range=l.max-l.min,l.values=[],o=l.min;o<=l.max;o+=l.step)l.values.push(i.roundWithPrecision(o));return l},i.polarToCartesian=function(t,e,i,n){var s=(n-90)*Math.PI/180;return{x:t+i*Math.cos(s),y:e+i*Math.sin(s)}},i.createChartRect=function(t,e,n){var s=e.axisY?e.axisY.offset||0:0,o=e.axisX?e.axisX.offset||0:0,a=i.stripUnit(e.width)||t.width(),r=i.stripUnit(e.height)||t.height(),l=i.normalizePadding(e.chartPadding,n);return{x1:l.left+s,y1:Math.max(r-l.bottom-o,l.bottom),x2:Math.max(a-l.right,l.right+s),y2:l.top,width:function(){return this.x2-this.x1},height:function(){return this.y1-this.y2}}},i.createGrid=function(t,e,n,s,o,a,r,l){var h={};h[n.units.pos+"1"]=t.pos,h[n.units.pos+"2"]=t.pos,h[n.counterUnits.pos+"1"]=s,h[n.counterUnits.pos+"2"]=s+o;var c=a.elem("line",h,r.join(" "));l.emit("draw",i.extend({type:"grid",axis:n.units.pos,index:e,group:a,element:c},h))},i.createLabel=function(t,e,n,s,o,a,r,l,h,c){var u,d={};if(d[s.units.pos]=t.pos+a[s.units.pos],d[s.counterUnits.pos]=a[s.counterUnits.pos],d[s.units.len]=t.len,d[s.counterUnits.len]=o,h){var f='<span class="'+l.join(" ")+'">'+n[e]+"</span>";u=r.foreignObject(f,i.extend({style:"overflow: visible;"},d))}else u=r.elem("text",d,l.join(" ")).text(n[e]);c.emit("draw",i.extend({type:"label",axis:s,index:e,group:r,element:u,text:n[e]},d))},i.createAxis=function(t,e,n,s,o,a,r,l){var h=r["axis"+t.units.pos.toUpperCase()],c=e.map(t.projectValue.bind(t)).map(t.transform),u=e.map(h.labelInterpolationFnc);c.forEach(function(e,c){(u[c]||0===u[c])&&(h.showGrid&&i.createGrid(e,c,t,t.gridOffset,n[t.counterUnits.len](),s,[r.classNames.grid,r.classNames[t.units.dir]],l),h.showLabel&&i.createLabel(e,c,u,t,h.offset,t.labelOffset,o,[r.classNames.label,r.classNames[t.units.dir]],a,l))})},i.optionsProvider=function(e,n,s){function o(e){var o=r;if(r=i.extend({},h),n)for(l=0;l<n.length;l++){var a=t.matchMedia(n[l][0]);a.matches&&(r=i.extend(r,n[l][1]))}s&&!e&&s.emit("optionsChanged",{previousOptions:o,currentOptions:r})}function a(){c.forEach(function(t){t.removeListener(o)})}var r,l,h=i.extend({},e),c=[];if(!t.matchMedia)throw"window.matchMedia not found! Make sure you're using a polyfill.";if(n)for(l=0;l<n.length;l++){var u=t.matchMedia(n[l][0]);u.addListener(o),c.push(u)}return o(!0),{get currentOptions(){return i.extend({},r)},removeMediaQueryListeners:a}}}(window,document,t),function(t,e,i){"use strict";i.Interpolation={},i.Interpolation.none=function(){return function(t){for(var e=(new i.Svg.Path).move(t[0],t[1]),n=3;n<t.length;n+=2)e.line(t[n-1],t[n]);return e}},i.Interpolation.simple=function(t){var e={divisor:2};t=i.extend({},e,t);var n=1/Math.max(1,t.divisor);return function(t){for(var e=(new i.Svg.Path).move(t[0],t[1]),s=2;s<t.length;s+=2){var o=t[s-2],a=t[s-1],r=t[s],l=t[s+1],h=(r-o)*n;e.curve(o+h,a,r-h,l,r,l)}return e}},i.Interpolation.cardinal=function(t){var e={tension:1};t=i.extend({},e,t);var n=Math.min(1,Math.max(0,t.tension)),s=1-n;return function(t){if(t.length<=4)return i.Interpolation.none()(t);for(var e,o=(new i.Svg.Path).move(t[0],t[1]),a=0,r=t.length;r-2*!e>a;a+=2){var l=[{x:+t[a-2],y:+t[a-1]},{x:+t[a],y:+t[a+1]},{x:+t[a+2],y:+t[a+3]},{x:+t[a+4],y:+t[a+5]}];e?a?r-4===a?l[3]={x:+t[0],y:+t[1]}:r-2===a&&(l[2]={x:+t[0],y:+t[1]},l[3]={x:+t[2],y:+t[3]}):l[0]={x:+t[r-2],y:+t[r-1]}:r-4===a?l[3]=l[2]:a||(l[0]={x:+t[a],y:+t[a+1]}),o.curve(n*(-l[0].x+6*l[1].x+l[2].x)/6+s*l[2].x,n*(-l[0].y+6*l[1].y+l[2].y)/6+s*l[2].y,n*(l[1].x+6*l[2].x-l[3].x)/6+s*l[2].x,n*(l[1].y+6*l[2].y-l[3].y)/6+s*l[2].y,l[2].x,l[2].y)}return o}}}(window,document,t),function(t,e,i){"use strict";i.EventEmitter=function(){function t(t,e){n[t]=n[t]||[],n[t].push(e)}function e(t,e){n[t]&&(e?(n[t].splice(n[t].indexOf(e),1),0===n[t].length&&delete n[t]):delete n[t])}function i(t,e){n[t]&&n[t].forEach(function(t){t(e)}),n["*"]&&n["*"].forEach(function(i){i(t,e)})}var n=[];return{addEventHandler:t,removeEventHandler:e,emit:i}}}(window,document,t),function(t,e,i){"use strict";function n(t){var e=[];if(t.length)for(var i=0;i<t.length;i++)e.push(t[i]);return e}function s(t,e){var n=e||this.prototype||i.Class,s=Object.create(n);i.Class.cloneDefinitions(s,t);var o=function(){var t,e=s.constructor||function(){};return t=this===i?Object.create(s):this,e.apply(t,Array.prototype.slice.call(arguments,0)),t};return o.prototype=s,o["super"]=n,o.extend=this.extend,o}function o(){var t=n(arguments),e=t[0];return t.splice(1,t.length-1).forEach(function(t){Object.getOwnPropertyNames(t).forEach(function(i){delete e[i],Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(t,i))})}),e}i.Class={extend:s,cloneDefinitions:o}}(window,document,t),function(t,e,i){"use strict";function n(t,e,n){return t&&(this.data=t,this.eventEmitter.emit("data",{type:"update",data:this.data})),e&&(this.options=i.extend({},n?this.options:this.defaultOptions,e),this.initializeTimeoutId||(this.optionsProvider.removeMediaQueryListeners(),this.optionsProvider=i.optionsProvider(this.options,this.responsiveOptions,this.eventEmitter))),this.initializeTimeoutId||this.createChart(this.optionsProvider.currentOptions),this}function s(){return t.removeEventListener("resize",this.resizeListener),this.optionsProvider.removeMediaQueryListeners(),this}function o(t,e){return this.eventEmitter.addEventHandler(t,e),this}function a(t,e){return this.eventEmitter.removeEventHandler(t,e),this}function r(){t.addEventListener("resize",this.resizeListener),
this.optionsProvider=i.optionsProvider(this.options,this.responsiveOptions,this.eventEmitter),this.eventEmitter.addEventHandler("optionsChanged",function(){this.update()}.bind(this)),this.options.plugins&&this.options.plugins.forEach(function(t){t instanceof Array?t[0](this,t[1]):t(this)}.bind(this)),this.eventEmitter.emit("data",{type:"initial",data:this.data}),this.createChart(this.optionsProvider.currentOptions),this.initializeTimeoutId=void 0}function l(e,n,s,o,a){this.container=i.querySelector(e),this.data=n,this.defaultOptions=s,this.options=o,this.responsiveOptions=a,this.eventEmitter=i.EventEmitter(),this.supportsForeignObject=i.Svg.isSupported("Extensibility"),this.supportsAnimations=i.Svg.isSupported("AnimationEventsAttribute"),this.resizeListener=function(){this.update()}.bind(this),this.container&&(this.container.__chartist__&&(this.container.__chartist__.initializeTimeoutId?t.clearTimeout(this.container.__chartist__.initializeTimeoutId):this.container.__chartist__.detach()),this.container.__chartist__=this),this.initializeTimeoutId=setTimeout(r.bind(this),0)}i.Base=i.Class.extend({constructor:l,optionsProvider:void 0,container:void 0,svg:void 0,eventEmitter:void 0,createChart:function(){throw new Error("Base chart type can't be instantiated!")},update:n,detach:s,on:o,off:a,version:i.version,supportsForeignObject:!1})}(window,document,t),function(t,e,i){"use strict";function n(t,n,s,o,a){t instanceof SVGElement?this._node=t:(this._node=e.createElementNS(C,t),"svg"===t&&this._node.setAttributeNS(S,i.xmlNs.qualifiedName,i.xmlNs.uri),n&&this.attr(n),s&&this.addClass(s),o&&(a&&o._node.firstChild?o._node.insertBefore(this._node,o._node.firstChild):o._node.appendChild(this._node)))}function s(t,e){return"string"==typeof t?e?this._node.getAttributeNS(e,t):this._node.getAttribute(t):(Object.keys(t).forEach(function(n){void 0!==t[n]&&(e?this._node.setAttributeNS(e,[i.xmlNs.prefix,":",n].join(""),t[n]):this._node.setAttribute(n,t[n]))}.bind(this)),this)}function o(t,e,n,s){return new i.Svg(t,e,n,this,s)}function a(){return this._node.parentNode instanceof SVGElement?new i.Svg(this._node.parentNode):null}function r(){for(var t=this._node;"svg"!==t.nodeName;)t=t.parentNode;return new i.Svg(t)}function l(t){var e=this._node.querySelector(t);return e?new i.Svg(e):null}function h(t){var e=this._node.querySelectorAll(t);return e.length?new i.Svg.List(e):null}function c(t,i,n,s){if("string"==typeof t){var o=e.createElement("div");o.innerHTML=t,t=o.firstChild}t.setAttribute("xmlns",T);var a=this.elem("foreignObject",i,n,s);return a._node.appendChild(t),a}function u(t){return this._node.appendChild(e.createTextNode(t)),this}function d(){for(;this._node.firstChild;)this._node.removeChild(this._node.firstChild);return this}function f(){return this._node.parentNode.removeChild(this._node),this.parent()}function p(t){return this._node.parentNode.replaceChild(t._node,this._node),t}function m(t,e){return e&&this._node.firstChild?this._node.insertBefore(t._node,this._node.firstChild):this._node.appendChild(t._node),this}function g(){return this._node.getAttribute("class")?this._node.getAttribute("class").trim().split(/\s+/):[]}function v(t){return this._node.setAttribute("class",this.classes(this._node).concat(t.trim().split(/\s+/)).filter(function(t,e,i){return i.indexOf(t)===e}).join(" ")),this}function b(t){var e=t.trim().split(/\s+/);return this._node.setAttribute("class",this.classes(this._node).filter(function(t){return e.indexOf(t)===-1}).join(" ")),this}function y(){return this._node.setAttribute("class",""),this}function _(){return this._node.clientHeight||Math.round(this._node.getBBox().height)||this._node.parentNode.clientHeight}function w(){return this._node.clientWidth||Math.round(this._node.getBBox().width)||this._node.parentNode.clientWidth}function x(t,e,n){return void 0===e&&(e=!0),Object.keys(t).forEach(function(s){function o(t,e){var o,a,r,l={};t.easing&&(r=t.easing instanceof Array?t.easing:i.Svg.Easing[t.easing],delete t.easing),t.begin=i.ensureUnit(t.begin,"ms"),t.dur=i.ensureUnit(t.dur,"ms"),r&&(t.calcMode="spline",t.keySplines=r.join(" "),t.keyTimes="0;1"),e&&(t.fill="freeze",l[s]=t.from,this.attr(l),a=i.stripUnit(t.begin||0),t.begin="indefinite"),o=this.elem("animate",i.extend({attributeName:s},t)),e&&setTimeout(function(){try{o._node.beginElement()}catch(e){l[s]=t.to,this.attr(l),o.remove()}}.bind(this),a),n&&o._node.addEventListener("beginEvent",function(){n.emit("animationBegin",{element:this,animate:o._node,params:t})}.bind(this)),o._node.addEventListener("endEvent",function(){n&&n.emit("animationEnd",{element:this,animate:o._node,params:t}),e&&(l[s]=t.to,this.attr(l),o.remove())}.bind(this))}t[s]instanceof Array?t[s].forEach(function(t){o.bind(this)(t,!1)}.bind(this)):o.bind(this)(t[s],e)}.bind(this)),this}function D(t){var e=this;this.svgElements=[];for(var n=0;n<t.length;n++)this.svgElements.push(new i.Svg(t[n]));Object.keys(i.Svg.prototype).filter(function(t){return["constructor","parent","querySelector","querySelectorAll","replace","append","classes","height","width"].indexOf(t)===-1}).forEach(function(t){e[t]=function(){var n=Array.prototype.slice.call(arguments,0);return e.svgElements.forEach(function(e){i.Svg.prototype[t].apply(e,n)}),e}})}var C="http://www.w3.org/2000/svg",S="http://www.w3.org/2000/xmlns/",T="http://www.w3.org/1999/xhtml";i.xmlNs={qualifiedName:"xmlns:ct",prefix:"ct",uri:"http://gionkunz.github.com/chartist-js/ct"},i.Svg=i.Class.extend({constructor:n,attr:s,elem:o,parent:a,root:r,querySelector:l,querySelectorAll:h,foreignObject:c,text:u,empty:d,remove:f,replace:p,append:m,classes:g,addClass:v,removeClass:b,removeAllClasses:y,height:_,width:w,animate:x}),i.Svg.isSupported=function(t){return e.implementation.hasFeature("www.http://w3.org/TR/SVG11/feature#"+t,"1.1")};var k={easeInSine:[.47,0,.745,.715],easeOutSine:[.39,.575,.565,1],easeInOutSine:[.445,.05,.55,.95],easeInQuad:[.55,.085,.68,.53],easeOutQuad:[.25,.46,.45,.94],easeInOutQuad:[.455,.03,.515,.955],easeInCubic:[.55,.055,.675,.19],easeOutCubic:[.215,.61,.355,1],easeInOutCubic:[.645,.045,.355,1],easeInQuart:[.895,.03,.685,.22],easeOutQuart:[.165,.84,.44,1],easeInOutQuart:[.77,0,.175,1],easeInQuint:[.755,.05,.855,.06],easeOutQuint:[.23,1,.32,1],easeInOutQuint:[.86,0,.07,1],easeInExpo:[.95,.05,.795,.035],easeOutExpo:[.19,1,.22,1],easeInOutExpo:[1,0,0,1],easeInCirc:[.6,.04,.98,.335],easeOutCirc:[.075,.82,.165,1],easeInOutCirc:[.785,.135,.15,.86],easeInBack:[.6,-.28,.735,.045],easeOutBack:[.175,.885,.32,1.275],easeInOutBack:[.68,-.55,.265,1.55]};i.Svg.Easing=k,i.Svg.List=i.Class.extend({constructor:D})}(window,document,t),function(t,e,i){"use strict";function n(t,e,n,s,o){n.splice(s,0,i.extend({command:o?t.toLowerCase():t.toUpperCase()},e))}function s(t,e){t.forEach(function(i,n){v[i.command.toLowerCase()].forEach(function(s,o){e(i,s,n,o,t)})})}function o(t,e){this.pathElements=[],this.pos=0,this.close=t,this.options=i.extend({},b,e)}function a(t){return void 0!==t?(this.pos=Math.max(0,Math.min(this.pathElements.length,t)),this):this.pos}function r(t){return this.pathElements.splice(this.pos,t),this}function l(t,e,i){return n("M",{x:+t,y:+e},this.pathElements,this.pos++,i),this}function h(t,e,i){return n("L",{x:+t,y:+e},this.pathElements,this.pos++,i),this}function c(t,e,i,s,o,a,r){return n("C",{x1:+t,y1:+e,x2:+i,y2:+s,x:+o,y:+a},this.pathElements,this.pos++,r),this}function u(t){var e=t.replace(/([A-Za-z])([0-9])/g,"$1 $2").replace(/([0-9])([A-Za-z])/g,"$1 $2").split(/[\s,]+/).reduce(function(t,e){return e.match(/[A-Za-z]/)&&t.push([]),t[t.length-1].push(e),t},[]);"Z"===e[e.length-1][0].toUpperCase()&&e.pop();var n=e.map(function(t){var e=t.shift(),n=v[e.toLowerCase()];return i.extend({command:e},n.reduce(function(e,i,n){return e[i]=+t[n],e},{}))}),s=[this.pos,0];return Array.prototype.push.apply(s,n),Array.prototype.splice.apply(this.pathElements,s),this.pos+=n.length,this}function d(){var t=Math.pow(10,this.options.accuracy);return this.pathElements.reduce(function(e,i){var n=v[i.command.toLowerCase()].map(function(e){return this.options.accuracy?Math.round(i[e]*t)/t:i[e]}.bind(this));return e+i.command+n.join(",")}.bind(this),"")+(this.close?"Z":"")}function f(t,e){return s(this.pathElements,function(i,n){i[n]*="x"===n[0]?t:e}),this}function p(t,e){return s(this.pathElements,function(i,n){i[n]+="x"===n[0]?t:e}),this}function m(t){return s(this.pathElements,function(e,i,n,s,o){var a=t(e,i,n,s,o);(a||0===a)&&(e[i]=a)}),this}function g(){var t=new i.Svg.Path(this.close);return t.pos=this.pos,t.pathElements=this.pathElements.slice().map(function(t){return i.extend({},t)}),t.options=i.extend({},this.options),t}var v={m:["x","y"],l:["x","y"],c:["x1","y1","x2","y2","x","y"]},b={accuracy:3};i.Svg.Path=i.Class.extend({constructor:o,position:a,remove:r,move:l,line:h,curve:c,scale:f,translate:p,transform:m,parse:u,stringify:d,clone:g}),i.Svg.Path.elementDescriptions=v}(window,document,t),function(t,e,i){"use strict";function n(t,e,i,n,o){this.units=t,this.counterUnits=t===s.x?s.y:s.x,this.chartRect=e,this.axisLength=e[t.rectEnd]-e[t.rectStart],this.gridOffset=e[t.rectOffset],this.transform=i,this.labelOffset=n,this.options=o}var s={x:{pos:"x",len:"width",dir:"horizontal",rectStart:"x1",rectEnd:"x2",rectOffset:"y2"},y:{pos:"y",len:"height",dir:"vertical",rectStart:"y2",rectEnd:"y1",rectOffset:"x1"}};i.Axis=i.Class.extend({constructor:n,projectValue:function(t,e,i){throw new Error("Base axis can't be instantiated!")}}),i.Axis.units=s}(window,document,t),function(t,e,i){"use strict";function n(t,e,n,s,o){i.LinearScaleAxis["super"].constructor.call(this,t,e,n,s,o),this.bounds=i.getBounds(this.axisLength,o.highLow,o.scaleMinSpace,o.referenceValue)}function s(t){return{pos:this.axisLength*(t-this.bounds.min)/(this.bounds.range+this.bounds.step),len:i.projectLength(this.axisLength,this.bounds.step,this.bounds)}}i.LinearScaleAxis=i.Axis.extend({constructor:n,projectValue:s})}(window,document,t),function(t,e,i){"use strict";function n(t,e,n,s,o){i.StepAxis["super"].constructor.call(this,t,e,n,s,o),this.stepLength=this.axisLength/(o.stepCount-(o.stretch?1:0))}function s(t,e){return{pos:this.stepLength*e,len:this.stepLength}}i.StepAxis=i.Axis.extend({constructor:n,projectValue:s})}(window,document,t),function(t,e,i){"use strict";function n(t){var e=[],n=i.normalizeDataArray(i.getDataArray(this.data,t.reverseData),this.data.labels.length),s=i.normalizePadding(t.chartPadding,o.padding);this.svg=i.createSvg(this.container,t.width,t.height,t.classNames.chart);var a=i.createChartRect(this.svg,t,o.padding),r=i.getHighLow(n);r.high=+t.high||(0===t.high?0:r.high),r.low=+t.low||(0===t.low?0:r.low);var l=new i.StepAxis(i.Axis.units.x,a,function(t){return t.pos=a.x1+t.pos,t},{x:t.axisX.labelOffset.x,y:a.y1+t.axisX.labelOffset.y+(this.supportsForeignObject?5:20)},{stepCount:this.data.labels.length,stretch:t.fullWidth}),h=new i.LinearScaleAxis(i.Axis.units.y,a,function(t){return t.pos=a.y1-t.pos,t},{x:s.left+t.axisY.labelOffset.x+(this.supportsForeignObject?-10:0),y:t.axisY.labelOffset.y+(this.supportsForeignObject?-15:0)},{highLow:r,scaleMinSpace:t.axisY.scaleMinSpace}),c=this.svg.elem("g").addClass(t.classNames.labelGroup),u=this.svg.elem("g").addClass(t.classNames.gridGroup);i.createAxis(l,this.data.labels,a,u,c,this.supportsForeignObject,t,this.eventEmitter),i.createAxis(h,h.bounds.values,a,u,c,this.supportsForeignObject,t,this.eventEmitter),this.data.series.forEach(function(s,o){e[o]=this.svg.elem("g"),e[o].attr({"series-name":s.name,meta:i.serialize(s.meta)},i.xmlNs.uri),e[o].addClass([t.classNames.series,s.className||t.classNames.series+"-"+i.alphaNumerate(o)].join(" "));var r=[];if(n[o].forEach(function(c,u){var d={x:a.x1+l.projectValue(c,u,n[o]).pos,y:a.y1-h.projectValue(c,u,n[o]).pos};if(r.push(d.x,d.y),t.showPoint){var f=e[o].elem("line",{x1:d.x,y1:d.y,x2:d.x+.01,y2:d.y},t.classNames.point).attr({value:c,meta:i.getMetaData(s,u)},i.xmlNs.uri);this.eventEmitter.emit("draw",{type:"point",value:c,index:u,group:e[o],element:f,x:d.x,y:d.y})}}.bind(this)),t.showLine||t.showArea){var c="function"==typeof t.lineSmooth?t.lineSmooth:t.lineSmooth?i.Interpolation.cardinal():i.Interpolation.none(),u=c(r);if(t.showLine){var d=e[o].elem("path",{d:u.stringify()},t.classNames.line,!0).attr({values:n[o]},i.xmlNs.uri);this.eventEmitter.emit("draw",{type:"line",values:n[o],path:u.clone(),chartRect:a,index:o,group:e[o],element:d})}if(t.showArea){var f=Math.max(Math.min(t.areaBase,h.bounds.max),h.bounds.min),p=a.y1-h.projectValue(f).pos,m=u.clone();m.position(0).remove(1).move(a.x1,p).line(r[0],r[1]).position(m.pathElements.length).line(r[r.length-2],p);var g=e[o].elem("path",{d:m.stringify()},t.classNames.area,!0).attr({values:n[o]},i.xmlNs.uri);this.eventEmitter.emit("draw",{type:"area",values:n[o],path:m.clone(),chartRect:a,index:o,group:e[o],element:g})}}}.bind(this)),this.eventEmitter.emit("created",{bounds:h.bounds,chartRect:a,svg:this.svg,options:t})}function s(t,e,n,s){i.Line["super"].constructor.call(this,t,e,o,i.extend({},o,n),s)}var o={axisX:{offset:30,labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:i.noop},axisY:{offset:40,labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:i.noop,scaleMinSpace:20},width:void 0,height:void 0,showLine:!0,showPoint:!0,showArea:!1,areaBase:0,lineSmooth:!0,low:void 0,high:void 0,chartPadding:5,fullWidth:!1,reverseData:!1,classNames:{chart:"ct-chart-line",label:"ct-label",labelGroup:"ct-labels",series:"ct-series",line:"ct-line",point:"ct-point",area:"ct-area",grid:"ct-grid",gridGroup:"ct-grids",vertical:"ct-vertical",horizontal:"ct-horizontal"}};i.Line=i.Base.extend({constructor:s,createChart:n})}(window,document,t),function(t,e,i){"use strict";function n(t){var e,n=[],s=i.normalizeDataArray(i.getDataArray(this.data,t.reverseData),this.data.labels.length),a=i.normalizePadding(t.chartPadding,o.padding);if(this.svg=i.createSvg(this.container,t.width,t.height,t.classNames.chart),t.stackBars){var r=i.serialMap(s,function(){return Array.prototype.slice.call(arguments).reduce(i.sum,0)});e=i.getHighLow([r])}else e=i.getHighLow(s);e.high=+t.high||(0===t.high?0:e.high),e.low=+t.low||(0===t.low?0:e.low);var l,h,c=i.createChartRect(this.svg,t,o.padding);t.horizontalBars?(h=new i.StepAxis(i.Axis.units.y,c,function(t){return t.pos=c.y1-t.pos,t},{x:a.left+t.axisY.labelOffset.x+(this.supportsForeignObject?-10:0),y:t.axisY.labelOffset.y-c.height()/this.data.labels.length},{stepCount:this.data.labels.length,stretch:t.fullHeight}),l=new i.LinearScaleAxis(i.Axis.units.x,c,function(t){return t.pos=c.x1+t.pos,t},{x:t.axisX.labelOffset.x,y:c.y1+t.axisX.labelOffset.y+(this.supportsForeignObject?5:20)},{highLow:e,scaleMinSpace:t.axisX.scaleMinSpace,referenceValue:0})):(h=new i.StepAxis(i.Axis.units.x,c,function(t){return t.pos=c.x1+t.pos,t},{x:t.axisX.labelOffset.x,y:c.y1+t.axisX.labelOffset.y+(this.supportsForeignObject?5:20)},{stepCount:this.data.labels.length}),l=new i.LinearScaleAxis(i.Axis.units.y,c,function(t){return t.pos=c.y1-t.pos,t},{x:a.left+t.axisY.labelOffset.x+(this.supportsForeignObject?-10:0),y:t.axisY.labelOffset.y+(this.supportsForeignObject?-15:0)},{highLow:e,scaleMinSpace:t.axisY.scaleMinSpace,referenceValue:0}));var u=this.svg.elem("g").addClass(t.classNames.labelGroup),d=this.svg.elem("g").addClass(t.classNames.gridGroup),f=t.horizontalBars?c.x1+l.projectValue(0).pos:c.y1-l.projectValue(0).pos,p=[];i.createAxis(h,this.data.labels,c,d,u,this.supportsForeignObject,t,this.eventEmitter),i.createAxis(l,l.bounds.values,c,d,u,this.supportsForeignObject,t,this.eventEmitter),this.data.series.forEach(function(e,o){var a=o-(this.data.series.length-1)/2,r=c[h.units.len]()/s[o].length/2;n[o]=this.svg.elem("g"),n[o].attr({"series-name":e.name,meta:i.serialize(e.meta)},i.xmlNs.uri),n[o].addClass([t.classNames.series,e.className||t.classNames.series+"-"+i.alphaNumerate(o)].join(" ")),s[o].forEach(function(u,d){var m,g,v={x:c.x1+(t.horizontalBars?l:h).projectValue(u,d,s[o]).pos,y:c.y1-(t.horizontalBars?h:l).projectValue(u,d,s[o]).pos};v[h.units.pos]+=r*(t.horizontalBars?-1:1),v[h.units.pos]+=t.stackBars?0:a*t.seriesBarDistance*(t.horizontalBars?-1:1),g=p[d]||f,p[d]=g-(f-v[h.counterUnits.pos]);var b={};b[h.units.pos+"1"]=v[h.units.pos],b[h.units.pos+"2"]=v[h.units.pos],b[h.counterUnits.pos+"1"]=t.stackBars?g:f,b[h.counterUnits.pos+"2"]=t.stackBars?p[d]:v[h.counterUnits.pos],m=n[o].elem("line",b,t.classNames.bar).attr({value:u,meta:i.getMetaData(e,d)},i.xmlNs.uri),this.eventEmitter.emit("draw",i.extend({type:"bar",value:u,index:d,chartRect:c,group:n[o],element:m},b))}.bind(this))}.bind(this)),this.eventEmitter.emit("created",{bounds:l.bounds,chartRect:c,svg:this.svg,options:t})}function s(t,e,n,s){i.Bar["super"].constructor.call(this,t,e,o,i.extend({},o,n),s)}var o={axisX:{offset:30,labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:i.noop,scaleMinSpace:40},axisY:{offset:40,labelOffset:{x:0,y:0},showLabel:!0,showGrid:!0,labelInterpolationFnc:i.noop,scaleMinSpace:20},width:void 0,height:void 0,high:void 0,low:void 0,chartPadding:5,seriesBarDistance:15,stackBars:!1,horizontalBars:!1,reverseData:!1,classNames:{chart:"ct-chart-bar",label:"ct-label",labelGroup:"ct-labels",series:"ct-series",bar:"ct-bar",grid:"ct-grid",gridGroup:"ct-grids",vertical:"ct-vertical",horizontal:"ct-horizontal"}};i.Bar=i.Base.extend({constructor:s,createChart:n})}(window,document,t),function(t,e,i){"use strict";function n(t,e,i){var n=e.x>t.x;return n&&"explode"===i||!n&&"implode"===i?"start":n&&"implode"===i||!n&&"explode"===i?"end":"middle"}function s(t){var e,s,o,r,l=[],h=t.startAngle,c=i.getDataArray(this.data,t.reverseData);this.svg=i.createSvg(this.container,t.width,t.height,t.classNames.chart),e=i.createChartRect(this.svg,t,a.padding),s=Math.min(e.width()/2,e.height()/2),r=t.total||c.reduce(function(t,e){return t+e},0),s-=t.donut?t.donutWidth/2:0,o=t.donut?s:s/2,o+=t.labelOffset;for(var u={x:e.x1+e.width()/2,y:e.y2+e.height()/2},d=1===this.data.series.filter(function(t){return 0!==t}).length,f=0;f<this.data.series.length;f++){l[f]=this.svg.elem("g",null,null,!0),this.data.series[f].name&&l[f].attr({"series-name":this.data.series[f].name,meta:i.serialize(this.data.series[f].meta)},i.xmlNs.uri),l[f].addClass([t.classNames.series,this.data.series[f].className||t.classNames.series+"-"+i.alphaNumerate(f)].join(" "));var p=h+c[f]/r*360;p-h===360&&(p-=.01);var m=i.polarToCartesian(u.x,u.y,s,h-(0===f||d?0:.2)),g=i.polarToCartesian(u.x,u.y,s,p),v=p-h<=180?"0":"1",b=["M",g.x,g.y,"A",s,s,0,v,0,m.x,m.y];t.donut===!1&&b.push("L",u.x,u.y);var y=l[f].elem("path",{d:b.join(" ")},t.classNames.slice+(t.donut?" "+t.classNames.donut:""));if(y.attr({value:c[f]},i.xmlNs.uri),t.donut===!0&&y.attr({style:"stroke-width: "+ +t.donutWidth+"px"}),this.eventEmitter.emit("draw",{type:"slice",value:c[f],totalDataSum:r,index:f,group:l[f],element:y,center:u,radius:s,startAngle:h,endAngle:p}),t.showLabel){var _=i.polarToCartesian(u.x,u.y,o,h+(p-h)/2),w=t.labelInterpolationFnc(this.data.labels?this.data.labels[f]:c[f],f),x=l[f].elem("text",{dx:_.x,dy:_.y,"text-anchor":n(u,_,t.labelDirection)},t.classNames.label).text(""+w);this.eventEmitter.emit("draw",{type:"label",index:f,group:l[f],element:x,text:""+w,x:_.x,y:_.y})}h=p}this.eventEmitter.emit("created",{chartRect:e,svg:this.svg,options:t})}function o(t,e,n,s){i.Pie["super"].constructor.call(this,t,e,a,i.extend({},a,n),s)}var a={width:void 0,height:void 0,chartPadding:5,classNames:{chart:"ct-chart-pie",series:"ct-series",slice:"ct-slice",donut:"ct-donut",label:"ct-label"},startAngle:0,total:void 0,donut:!1,donutWidth:60,showLabel:!0,labelOffset:0,labelInterpolationFnc:i.noop,labelDirection:"neutral",reverseData:!1};i.Pie=i.Base.extend({constructor:o,createChart:s,determineAnchorPosition:n})}(window,document,t),t}),function(t,e,i){var n=function(n){function s(t){var e,i,o={};n.each(t,function(n){(e=n.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(e[1]+" ")&&(i=n.replace(e[0],e[2].toLowerCase()),o[i]=n,"o"===e[1]&&s(t[n]))}),t._hungarianMap=o}function o(t,e,a){t._hungarianMap||s(t);var r;n.each(e,function(s){r=t._hungarianMap[s],r===i||!a&&e[r]!==i||("o"===r.charAt(0)?(e[r]||(e[r]={}),n.extend(!0,e[r],e[s]),o(t[r],e[r],a)):e[r]=e[s])})}function a(t){var e=Ut.defaults.oLanguage,i=t.sZeroRecords;!t.sEmptyTable&&i&&"No data available in table"===e.sEmptyTable&&Nt(t,t,"sZeroRecords","sEmptyTable"),!t.sLoadingRecords&&i&&"Loading..."===e.sLoadingRecords&&Nt(t,t,"sZeroRecords","sLoadingRecords"),t.sInfoThousands&&(t.sThousands=t.sInfoThousands),(t=t.sDecimal)&&Bt(t)}function r(t){if(pe(t,"ordering","bSort"),pe(t,"orderMulti","bSortMulti"),pe(t,"orderClasses","bSortClasses"),pe(t,"orderCellsTop","bSortCellsTop"),pe(t,"order","aaSorting"),pe(t,"orderFixed","aaSortingFixed"),pe(t,"paging","bPaginate"),pe(t,"pagingType","sPaginationType"),pe(t,"pageLength","iDisplayLength"),pe(t,"searching","bFilter"),t=t.aoSearchCols)for(var e=0,i=t.length;e<i;e++)t[e]&&o(Ut.models.oSearch,t[e])}function l(t){pe(t,"orderable","bSortable"),pe(t,"orderData","aDataSort"),pe(t,"orderSequence","asSorting"),pe(t,"orderDataType","sortDataType")}function h(t){var t=t.oBrowser,e=n("<div/>").css({position:"absolute",top:0,left:0,height:1,width:1,overflow:"hidden"}).append(n("<div/>").css({position:"absolute",top:1,left:1,width:100,overflow:"scroll"}).append(n('<div class="test"/>').css({width:"100%",height:10}))).appendTo("body"),i=e.find(".test");t.bScrollOversize=100===i[0].offsetWidth,t.bScrollbarLeft=1!==i.offset().left,e.remove()}function c(t,e,n,s,o,a){var r,l=!1;for(n!==i&&(r=n,l=!0);s!==o;)t.hasOwnProperty(s)&&(r=l?e(r,t[s],s,t):t[s],l=!0,s+=a);return r}function u(t,i){var s=Ut.defaults.column,o=t.aoColumns.length,s=n.extend({},Ut.models.oColumn,s,{nTh:i?i:e.createElement("th"),sTitle:s.sTitle?s.sTitle:i?i.innerHTML:"",aDataSort:s.aDataSort?s.aDataSort:[o],mData:s.mData?s.mData:o,idx:o});t.aoColumns.push(s),s=t.aoPreSearchCols,s[o]=n.extend({},Ut.models.oSearch,s[o]),d(t,o,n(i).data())}function d(t,e,s){var e=t.aoColumns[e],a=t.oClasses,r=n(e.nTh);if(!e.sWidthOrig){e.sWidthOrig=r.attr("width")||null;var h=(r.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);h&&(e.sWidthOrig=h[1])}s!==i&&null!==s&&(l(s),o(Ut.defaults.column,s),s.mDataProp!==i&&!s.mData&&(s.mData=s.mDataProp),s.sType&&(e._sManualType=s.sType),s.className&&!s.sClass&&(s.sClass=s.className),n.extend(e,s),Nt(e,s,"sWidth","sWidthOrig"),"number"==typeof s.iDataSort&&(e.aDataSort=[s.iDataSort]),Nt(e,s,"aDataSort"));var c=e.mData,u=S(c),d=e.mRender?S(e.mRender):null,s=function(t){return"string"==typeof t&&-1!==t.indexOf("@")};e._bAttrSrc=n.isPlainObject(c)&&(s(c.sort)||s(c.type)||s(c.filter)),e.fnGetData=function(t,e,n){var s=u(t,e,i,n);return d&&e?d(s,e,t,n):s},e.fnSetData=function(t,e,i){return T(c)(t,e,i)},"number"!=typeof c&&(t._rowReadObject=!0),t.oFeatures.bSort||(e.bSortable=!1,r.addClass(a.sSortableNone)),t=-1!==n.inArray("asc",e.asSorting),s=-1!==n.inArray("desc",e.asSorting),e.bSortable&&(t||s)?t&&!s?(e.sSortingClass=a.sSortableAsc,e.sSortingClassJUI=a.sSortJUIAscAllowed):!t&&s?(e.sSortingClass=a.sSortableDesc,e.sSortingClassJUI=a.sSortJUIDescAllowed):(e.sSortingClass=a.sSortable,e.sSortingClassJUI=a.sSortJUI):(e.sSortingClass=a.sSortableNone,e.sSortingClassJUI="")}function f(t){if(!1!==t.oFeatures.bAutoWidth){var e=t.aoColumns;gt(t);for(var i=0,n=e.length;i<n;i++)e[i].nTh.style.width=e[i].sWidth}e=t.oScroll,(""!==e.sY||""!==e.sX)&&pt(t),zt(t,null,"column-sizing",[t])}function p(t,e){var i=v(t,"bVisible");return"number"==typeof i[e]?i[e]:null}function m(t,e){var i=v(t,"bVisible"),i=n.inArray(e,i);return-1!==i?i:null}function g(t){return v(t,"bVisible").length}function v(t,e){var i=[];return n.map(t.aoColumns,function(t,n){t[e]&&i.push(n)}),i}function b(t){var e,n,s,o,a,r,l,h,c,u=t.aoColumns,d=t.aoData,f=Ut.ext.type.detect;for(e=0,n=u.length;e<n;e++)if(l=u[e],c=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){for(s=0,o=f.length;s<o;s++){for(a=0,r=d.length;a<r&&(c[a]===i&&(c[a]=x(t,a,e,"type")),h=f[s](c[a],t),h||s===f.length-1)&&"html"!==h;a++);if(h){l.sType=h;break}}l.sType||(l.sType="string")}}function y(t,e,s,o){var a,r,l,h,c,d,f=t.aoColumns;if(e)for(a=e.length-1;0<=a;a--){d=e[a];var p=d.targets!==i?d.targets:d.aTargets;for(n.isArray(p)||(p=[p]),r=0,l=p.length;r<l;r++)if("number"==typeof p[r]&&0<=p[r]){for(;f.length<=p[r];)u(t);o(p[r],d)}else if("number"==typeof p[r]&&0>p[r])o(f.length+p[r],d);else if("string"==typeof p[r])for(h=0,c=f.length;h<c;h++)("_all"==p[r]||n(f[h].nTh).hasClass(p[r]))&&o(h,d)}if(s)for(a=0,t=s.length;a<t;a++)o(a,s[a])}function _(t,e,i,s){var o=t.aoData.length,a=n.extend(!0,{},Ut.models.oRow,{src:i?"dom":"data"});a._aData=e,t.aoData.push(a);for(var e=t.aoColumns,a=0,r=e.length;a<r;a++)i&&D(t,o,a,x(t,o,a)),e[a].sType=null;return t.aiDisplayMaster.push(o),(i||!t.oFeatures.bDeferRender)&&P(t,o,i,s),o}function w(t,e){var i;return e instanceof n||(e=n(e)),e.map(function(e,n){return i=A(t,n),_(t,i.data,n,i.cells)})}function x(t,e,n,s){var o=t.iDraw,a=t.aoColumns[n],r=t.aoData[e]._aData,l=a.sDefaultContent,n=a.fnGetData(r,s,{settings:t,row:e,col:n});if(n===i)return t.iDrawError!=o&&null===l&&(Ot(t,0,"Requested unknown parameter "+("function"==typeof a.mData?"{function}":"'"+a.mData+"'")+" for row "+e,4),t.iDrawError=o),l;if(n!==r&&null!==n||null===l){if("function"==typeof n)return n.call(r)}else n=l;return null===n&&"display"==s?"":n}function D(t,e,i,n){t.aoColumns[i].fnSetData(t.aoData[e]._aData,n,{settings:t,row:e,col:i})}function C(t){return n.map(t.match(/(\\.|[^\.])+/g),function(t){return t.replace(/\\./g,".")})}function S(t){if(n.isPlainObject(t)){var e={};return n.each(t,function(t,i){i&&(e[t]=S(i))}),function(t,n,s,o){var a=e[n]||e._;return a!==i?a(t,n,s,o):t}}if(null===t)return function(t){return t};if("function"==typeof t)return function(e,i,n,s){return t(e,i,n,s)};if("string"==typeof t&&(-1!==t.indexOf(".")||-1!==t.indexOf("[")||-1!==t.indexOf("("))){var s=function(t,e,n){var o,a;if(""!==n){a=C(n);for(var r=0,l=a.length;r<l;r++){if(n=a[r].match(me),o=a[r].match(ge),n){for(a[r]=a[r].replace(me,""),""!==a[r]&&(t=t[a[r]]),o=[],a.splice(0,r+1),a=a.join("."),r=0,l=t.length;r<l;r++)o.push(s(t[r],e,a));t=n[0].substring(1,n[0].length-1),t=""===t?o:o.join(t);break}if(o)a[r]=a[r].replace(ge,""),t=t[a[r]]();else{if(null===t||t[a[r]]===i)return i;t=t[a[r]]}}}return t};return function(e,i){return s(e,i,t)}}return function(e){return e[t]}}function T(t){if(n.isPlainObject(t))return T(t._);if(null===t)return function(){};if("function"==typeof t)return function(e,i,n){t(e,"set",i,n)};if("string"==typeof t&&(-1!==t.indexOf(".")||-1!==t.indexOf("[")||-1!==t.indexOf("("))){var e=function(t,n,s){var o,s=C(s);o=s[s.length-1];for(var a,r,l=0,h=s.length-1;l<h;l++){if(a=s[l].match(me),r=s[l].match(ge),a){for(s[l]=s[l].replace(me,""),t[s[l]]=[],o=s.slice(),o.splice(0,l+1),a=o.join("."),r=0,h=n.length;r<h;r++)o={},e(o,n[r],a),t[s[l]].push(o);return}r&&(s[l]=s[l].replace(ge,""),t=t[s[l]](n)),null!==t[s[l]]&&t[s[l]]!==i||(t[s[l]]={}),t=t[s[l]]}o.match(ge)?t[o.replace(ge,"")](n):t[o.replace(me,"")]=n};return function(i,n){return e(i,n,t)}}return function(e,i){e[t]=i}}function k(t){return he(t.aoData,"_aData")}function E(t){t.aoData.length=0,t.aiDisplayMaster.length=0,t.aiDisplay.length=0}function M(t,e,n){for(var s=-1,o=0,a=t.length;o<a;o++)t[o]==e?s=o:t[o]>e&&t[o]--;-1!=s&&n===i&&t.splice(s,1)}function I(t,e,n,s){var o,a=t.aoData[e],r=function(i,n){for(;i.childNodes.length;)i.removeChild(i.firstChild);i.innerHTML=x(t,e,n,"display")};if("dom"!==n&&(n&&"auto"!==n||"dom"!==a.src)){var l=a.anCells;if(l)if(s!==i)r(l[s],s);else for(n=0,o=l.length;n<o;n++)r(l[n],n)}else a._aData=A(t,a,s,s===i?i:a._aData).data;if(a._aSortData=null,a._aFilterData=null,r=t.aoColumns,s!==i)r[s].sType=null;else{for(n=0,o=r.length;n<o;n++)r[n].sType=null;H(a)}}function A(t,e,s,o){var a,r,l=[],h=e.firstChild,c=0,u=t.aoColumns,d=t._rowReadObject,o=o||d?{}:[],f=function(t,e){if("string"==typeof t){var i=t.indexOf("@");-1!==i&&(i=t.substring(i+1),T(t)(o,e.getAttribute(i)))}},t=function(t){s!==i&&s!==c||(a=u[c],r=n.trim(t.innerHTML),a&&a._bAttrSrc?(T(a.mData._)(o,r),f(a.mData.sort,t),f(a.mData.type,t),f(a.mData.filter,t)):d?(a._setter||(a._setter=T(a.mData)),a._setter(o,r)):o[c]=r),c++};if(h)for(;h;)e=h.nodeName.toUpperCase(),"TD"!=e&&"TH"!=e||(t(h),l.push(h)),h=h.nextSibling;else for(l=e.anCells,h=0,e=l.length;h<e;h++)t(l[h]);return{data:o,cells:l}}function P(t,i,n,s){var o,a,r,l,h,c=t.aoData[i],u=c._aData,d=[];if(null===c.nTr){for(o=n||e.createElement("tr"),c.nTr=o,c.anCells=d,o._DT_RowIndex=i,H(c),l=0,h=t.aoColumns.length;l<h;l++)r=t.aoColumns[l],a=n?s[l]:e.createElement(r.sCellType),d.push(a),n&&!r.mRender&&r.mData===l||(a.innerHTML=x(t,i,l,"display")),r.sClass&&(a.className+=" "+r.sClass),r.bVisible&&!n?o.appendChild(a):!r.bVisible&&n&&a.parentNode.removeChild(a),r.fnCreatedCell&&r.fnCreatedCell.call(t.oInstance,a,x(t,i,l),u,i,l);zt(t,"aoRowCreatedCallback",null,[o,u,i])}c.nTr.setAttribute("role","row")}function H(t){var e=t.nTr,i=t._aData;if(e){if(i.DT_RowId&&(e.id=i.DT_RowId),i.DT_RowClass){var s=i.DT_RowClass.split(" ");t.__rowc=t.__rowc?fe(t.__rowc.concat(s)):s,n(e).removeClass(t.__rowc.join(" ")).addClass(i.DT_RowClass)}i.DT_RowAttr&&n(e).attr(i.DT_RowAttr),i.DT_RowData&&n(e).data(i.DT_RowData)}}function O(t){var e,i,s,o,a,r=t.nTHead,l=t.nTFoot,h=0===n("th, td",r).length,c=t.oClasses,u=t.aoColumns;for(h&&(o=n("<tr/>").appendTo(r)),e=0,i=u.length;e<i;e++)a=u[e],s=n(a.nTh).addClass(a.sClass),h&&s.appendTo(o),t.oFeatures.bSort&&(s.addClass(a.sSortingClass),!1!==a.bSortable&&(s.attr("tabindex",t.iTabIndex).attr("aria-controls",t.sTableId),Et(t,a.nTh,e))),a.sTitle!=s.html()&&s.html(a.sTitle),Wt(t,"header")(t,s,a,c);if(h&&z(t.aoHeader,r),n(r).find(">tr").attr("role","row"),n(r).find(">tr>th, >tr>td").addClass(c.sHeaderTH),n(l).find(">tr>th, >tr>td").addClass(c.sFooterTH),null!==l)for(t=t.aoFooter[0],e=0,i=t.length;e<i;e++)a=u[e],a.nTf=t[e].cell,a.sClass&&n(a.nTf).addClass(a.sClass)}function N(t,e,s){var o,a,r,l,h=[],c=[],u=t.aoColumns.length;if(e){for(s===i&&(s=!1),o=0,a=e.length;o<a;o++){for(h[o]=e[o].slice(),h[o].nTr=e[o].nTr,r=u-1;0<=r;r--)!t.aoColumns[r].bVisible&&!s&&h[o].splice(r,1);c.push([])}for(o=0,a=h.length;o<a;o++){if(t=h[o].nTr)for(;r=t.firstChild;)t.removeChild(r);for(r=0,e=h[o].length;r<e;r++)if(l=u=1,c[o][r]===i){for(t.appendChild(h[o][r].cell),c[o][r]=1;h[o+u]!==i&&h[o][r].cell==h[o+u][r].cell;)c[o+u][r]=1,u++;for(;h[o][r+l]!==i&&h[o][r].cell==h[o][r+l].cell;){for(s=0;s<u;s++)c[o+s][r+l]=1;l++}n(h[o][r].cell).attr("rowspan",u).attr("colspan",l)}}}}function L(t){var e=zt(t,"aoPreDrawCallback","preDraw",[t]);if(-1!==n.inArray(!1,e))dt(t,!1);else{var e=[],s=0,o=t.asStripeClasses,a=o.length,r=t.oLanguage,l=t.iInitDisplayStart,h="ssp"==jt(t),c=t.aiDisplay;t.bDrawing=!0,l!==i&&-1!==l&&(t._iDisplayStart=h?l:l>=t.fnRecordsDisplay()?0:l,t.iInitDisplayStart=-1);var l=t._iDisplayStart,u=t.fnDisplayEnd();if(t.bDeferLoading)t.bDeferLoading=!1,t.iDraw++,dt(t,!1);else if(h){if(!t.bDestroying&&!j(t))return}else t.iDraw++;if(0!==c.length)for(r=h?t.aoData.length:u,h=h?0:l;h<r;h++){var d=c[h],f=t.aoData[d];if(null===f.nTr&&P(t,d),d=f.nTr,0!==a){var p=o[s%a];f._sRowStripe!=p&&(n(d).removeClass(f._sRowStripe).addClass(p),f._sRowStripe=p)}zt(t,"aoRowCallback",null,[d,f._aData,s,h]),e.push(d),s++}else s=r.sZeroRecords,1==t.iDraw&&"ajax"==jt(t)?s=r.sLoadingRecords:r.sEmptyTable&&0===t.fnRecordsTotal()&&(s=r.sEmptyTable),e[0]=n("<tr/>",{"class":a?o[0]:""}).append(n("<td />",{valign:"top",colSpan:g(t),"class":t.oClasses.sRowEmpty}).html(s))[0];zt(t,"aoHeaderCallback","header",[n(t.nTHead).children("tr")[0],k(t),l,u,c]),zt(t,"aoFooterCallback","footer",[n(t.nTFoot).children("tr")[0],k(t),l,u,c]),o=n(t.nTBody),o.children().detach(),o.append(n(e)),zt(t,"aoDrawCallback","draw",[t]),t.bSorted=!1,t.bFiltered=!1,t.bDrawing=!1}}function R(t,e){var i=t.oFeatures,n=i.bFilter;i.bSort&&St(t),n?V(t,t.oPreviousSearch):t.aiDisplay=t.aiDisplayMaster.slice(),
!0!==e&&(t._iDisplayStart=0),t._drawHold=e,L(t),t._drawHold=!1}function F(t){var e=t.oClasses,i=n(t.nTable),i=n("<div/>").insertBefore(i),s=t.oFeatures,o=n("<div/>",{id:t.sTableId+"_wrapper","class":e.sWrapper+(t.nTFoot?"":" "+e.sNoFooter)});t.nHolding=i[0],t.nTableWrapper=o[0],t.nTableReinsertBefore=t.nTable.nextSibling;for(var a,r,l,h,c,u,d=t.sDom.split(""),f=0;f<d.length;f++){if(a=null,r=d[f],"<"==r){if(l=n("<div/>")[0],h=d[f+1],"'"==h||'"'==h){for(c="",u=2;d[f+u]!=h;)c+=d[f+u],u++;"H"==c?c=e.sJUIHeader:"F"==c&&(c=e.sJUIFooter),-1!=c.indexOf(".")?(h=c.split("."),l.id=h[0].substr(1,h[0].length-1),l.className=h[1]):"#"==c.charAt(0)?l.id=c.substr(1,c.length-1):l.className=c,f+=u}o.append(l),o=n(l)}else if(">"==r)o=o.parent();else if("l"==r&&s.bPaginate&&s.bLengthChange)a=lt(t);else if("f"==r&&s.bFilter)a=U(t);else if("r"==r&&s.bProcessing)a=ut(t);else if("t"==r)a=ft(t);else if("i"==r&&s.bInfo)a=it(t);else if("p"==r&&s.bPaginate)a=ht(t);else if(0!==Ut.ext.feature.length)for(l=Ut.ext.feature,u=0,h=l.length;u<h;u++)if(r==l[u].cFeature){a=l[u].fnInit(t);break}a&&(l=t.aanFeatures,l[r]||(l[r]=[]),l[r].push(a),o.append(a))}i.replaceWith(o)}function z(t,e){var i,s,o,a,r,l,h,c,u,d,f=n(e).children("tr");for(t.splice(0,t.length),o=0,l=f.length;o<l;o++)t.push([]);for(o=0,l=f.length;o<l;o++)for(i=f[o],s=i.firstChild;s;){if("TD"==s.nodeName.toUpperCase()||"TH"==s.nodeName.toUpperCase()){for(c=1*s.getAttribute("colspan"),u=1*s.getAttribute("rowspan"),c=c&&0!==c&&1!==c?c:1,u=u&&0!==u&&1!==u?u:1,a=0,r=t[o];r[a];)a++;for(h=a,d=1===c,r=0;r<c;r++)for(a=0;a<u;a++)t[o+a][h+r]={cell:s,unique:d},t[o+a].nTr=i}s=s.nextSibling}}function $(t,e,i){var n=[];i||(i=t.aoHeader,e&&(i=[],z(i,e)));for(var e=0,s=i.length;e<s;e++)for(var o=0,a=i[e].length;o<a;o++)!i[e][o].unique||n[o]&&t.bSortCellsTop||(n[o]=i[e][o].cell);return n}function W(t,e,i){if(zt(t,"aoServerParams","serverParams",[e]),e&&n.isArray(e)){var s={},o=/(.*?)\[\]$/;n.each(e,function(t,e){var i=e.name.match(o);i?(i=i[0],s[i]||(s[i]=[]),s[i].push(e.value)):s[e.name]=e.value}),e=s}var a,r=t.ajax,l=t.oInstance;if(n.isPlainObject(r)&&r.data){a=r.data;var h=n.isFunction(a)?a(e):a,e=n.isFunction(a)&&h?h:n.extend(!0,e,h);delete r.data}h={data:e,success:function(e){var n=e.error||e.sError;n&&t.oApi._fnLog(t,0,n),t.json=e,zt(t,null,"xhr",[t,e]),i(e)},dataType:"json",cache:!1,type:t.sServerMethod,error:function(e,i){var n=t.oApi._fnLog;"parsererror"==i?n(t,0,"Invalid JSON response",1):4===e.readyState&&n(t,0,"Ajax error",7),dt(t,!1)}},t.oAjaxData=e,zt(t,null,"preXhr",[t,e]),t.fnServerData?t.fnServerData.call(l,t.sAjaxSource,n.map(e,function(t,e){return{name:e,value:t}}),i,t):t.sAjaxSource||"string"==typeof r?t.jqXHR=n.ajax(n.extend(h,{url:r||t.sAjaxSource})):n.isFunction(r)?t.jqXHR=r.call(l,e,i,t):(t.jqXHR=n.ajax(n.extend(h,r)),r.data=a)}function j(t){return!t.bAjaxDataGet||(t.iDraw++,dt(t,!0),W(t,Y(t),function(e){B(t,e)}),!1)}function Y(t){var e,i,s,o,a=t.aoColumns,r=a.length,l=t.oFeatures,h=t.oPreviousSearch,c=t.aoPreSearchCols,u=[],d=Ct(t);e=t._iDisplayStart,i=!1!==l.bPaginate?t._iDisplayLength:-1;var f=function(t,e){u.push({name:t,value:e})};f("sEcho",t.iDraw),f("iColumns",r),f("sColumns",he(a,"sName").join(",")),f("iDisplayStart",e),f("iDisplayLength",i);var p={draw:t.iDraw,columns:[],order:[],start:e,length:i,search:{value:h.sSearch,regex:h.bRegex}};for(e=0;e<r;e++)s=a[e],o=c[e],i="function"==typeof s.mData?"function":s.mData,p.columns.push({data:i,name:s.sName,searchable:s.bSearchable,orderable:s.bSortable,search:{value:o.sSearch,regex:o.bRegex}}),f("mDataProp_"+e,i),l.bFilter&&(f("sSearch_"+e,o.sSearch),f("bRegex_"+e,o.bRegex),f("bSearchable_"+e,s.bSearchable)),l.bSort&&f("bSortable_"+e,s.bSortable);return l.bFilter&&(f("sSearch",h.sSearch),f("bRegex",h.bRegex)),l.bSort&&(n.each(d,function(t,e){p.order.push({column:e.col,dir:e.dir}),f("iSortCol_"+t,e.col),f("sSortDir_"+t,e.dir)}),f("iSortingCols",d.length)),a=Ut.ext.legacy.ajax,null===a?t.sAjaxSource?u:p:a?u:p}function B(t,e){var n=e.sEcho!==i?e.sEcho:e.draw,s=e.iTotalRecords!==i?e.iTotalRecords:e.recordsTotal,o=e.iTotalDisplayRecords!==i?e.iTotalDisplayRecords:e.recordsFiltered;if(n){if(1*n<t.iDraw)return;t.iDraw=1*n}for(E(t),t._iRecordsTotal=parseInt(s,10),t._iRecordsDisplay=parseInt(o,10),n=q(t,e),s=0,o=n.length;s<o;s++)_(t,n[s]);t.aiDisplay=t.aiDisplayMaster.slice(),t.bAjaxDataGet=!1,L(t),t._bInitComplete||at(t,e),t.bAjaxDataGet=!0,dt(t,!1)}function q(t,e){var s=n.isPlainObject(t.ajax)&&t.ajax.dataSrc!==i?t.ajax.dataSrc:t.sAjaxDataProp;return"data"===s?e.aaData||e[s]:""!==s?S(s)(e):e}function U(t){var i=t.oClasses,s=t.sTableId,o=t.oLanguage,a=t.oPreviousSearch,r=t.aanFeatures,l='<input type="search" class="'+i.sFilterInput+'"/>',h=o.sSearch,h=h.match(/_INPUT_/)?h.replace("_INPUT_",l):h+l,i=n("<div/>",{id:r.f?null:s+"_filter","class":i.sFilter}).append(n("<label/>").append(h)),r=function(){var e=this.value?this.value:"";e!=a.sSearch&&(V(t,{sSearch:e,bRegex:a.bRegex,bSmart:a.bSmart,bCaseInsensitive:a.bCaseInsensitive}),t._iDisplayStart=0,L(t))},l=null!==t.searchDelay?t.searchDelay:"ssp"===jt(t)?400:0,c=n("input",i).val(a.sSearch).attr("placeholder",o.sSearchPlaceholder).bind("keyup.DT search.DT input.DT paste.DT cut.DT",l?vt(r,l):r).bind("keypress.DT",function(t){if(13==t.keyCode)return!1}).attr("aria-controls",s);return n(t.nTable).on("search.dt.DT",function(i,n){if(t===n)try{c[0]!==e.activeElement&&c.val(a.sSearch)}catch(s){}}),i[0]}function V(t,e,n){var s=t.oPreviousSearch,o=t.aoPreSearchCols,a=function(t){s.sSearch=t.sSearch,s.bRegex=t.bRegex,s.bSmart=t.bSmart,s.bCaseInsensitive=t.bCaseInsensitive};if(b(t),"ssp"!=jt(t)){for(Z(t,e.sSearch,n,e.bEscapeRegex!==i?!e.bEscapeRegex:e.bRegex,e.bSmart,e.bCaseInsensitive),a(e),e=0;e<o.length;e++)X(t,o[e].sSearch,e,o[e].bEscapeRegex!==i?!o[e].bEscapeRegex:o[e].bRegex,o[e].bSmart,o[e].bCaseInsensitive);G(t)}else a(e);t.bFiltered=!0,zt(t,null,"search",[t])}function G(t){for(var e,i,n=Ut.ext.search,s=t.aiDisplay,o=0,a=n.length;o<a;o++){for(var r=[],l=0,h=s.length;l<h;l++)i=s[l],e=t.aoData[i],n[o](t,e._aFilterData,i,e._aData,l)&&r.push(i);s.length=0,s.push.apply(s,r)}}function X(t,e,i,n,s,o){if(""!==e)for(var a=t.aiDisplay,n=K(e,n,s,o),s=a.length-1;0<=s;s--)e=t.aoData[a[s]]._aFilterData[i],n.test(e)||a.splice(s,1)}function Z(t,e,i,n,s,o){var a,n=K(e,n,s,o),s=t.oPreviousSearch.sSearch,o=t.aiDisplayMaster;if(0!==Ut.ext.search.length&&(i=!0),a=Q(t),0>=e.length)t.aiDisplay=o.slice();else for((a||i||s.length>e.length||0!==e.indexOf(s)||t.bSorted)&&(t.aiDisplay=o.slice()),e=t.aiDisplay,i=e.length-1;0<=i;i--)n.test(t.aoData[e[i]]._sFilterRow)||e.splice(i,1)}function K(t,e,i,s){return t=e?t:J(t),i&&(t="^(?=.*?"+n.map(t.match(/"[^"]+"|[^ ]+/g)||"",function(t){if('"'===t.charAt(0))var e=t.match(/^"(.*)"$/),t=e?e[1]:t;return t.replace('"',"")}).join(")(?=.*?")+").*$"),RegExp(t,s?"i":"")}function J(t){return t.replace(ie,"\\$1")}function Q(t){var e,i,n,s,o,a,r,l,h=t.aoColumns,c=Ut.ext.type.search;for(e=!1,i=0,s=t.aoData.length;i<s;i++)if(l=t.aoData[i],!l._aFilterData){for(a=[],n=0,o=h.length;n<o;n++)e=h[n],e.bSearchable?(r=x(t,i,n,"filter"),c[e.sType]&&(r=c[e.sType](r)),null===r&&(r=""),"string"!=typeof r&&r.toString&&(r=r.toString())):r="",r.indexOf&&-1!==r.indexOf("&")&&(ve.innerHTML=r,r=be?ve.textContent:ve.innerText),r.replace&&(r=r.replace(/[\r\n]/g,"")),a.push(r);l._aFilterData=a,l._sFilterRow=a.join("  "),e=!0}return e}function tt(t){return{search:t.sSearch,smart:t.bSmart,regex:t.bRegex,caseInsensitive:t.bCaseInsensitive}}function et(t){return{sSearch:t.search,bSmart:t.smart,bRegex:t.regex,bCaseInsensitive:t.caseInsensitive}}function it(t){var e=t.sTableId,i=t.aanFeatures.i,s=n("<div/>",{"class":t.oClasses.sInfo,id:i?null:e+"_info"});return i||(t.aoDrawCallback.push({fn:nt,sName:"information"}),s.attr("role","status").attr("aria-live","polite"),n(t.nTable).attr("aria-describedby",e+"_info")),s[0]}function nt(t){var e=t.aanFeatures.i;if(0!==e.length){var i=t.oLanguage,s=t._iDisplayStart+1,o=t.fnDisplayEnd(),a=t.fnRecordsTotal(),r=t.fnRecordsDisplay(),l=r?i.sInfo:i.sInfoEmpty;r!==a&&(l+=" "+i.sInfoFiltered),l+=i.sInfoPostFix,l=st(t,l),i=i.fnInfoCallback,null!==i&&(l=i.call(t.oInstance,t,s,o,a,r,l)),n(e).html(l)}}function st(t,e){var i=t.fnFormatNumber,n=t._iDisplayStart+1,s=t._iDisplayLength,o=t.fnRecordsDisplay(),a=-1===s;return e.replace(/_START_/g,i.call(t,n)).replace(/_END_/g,i.call(t,t.fnDisplayEnd())).replace(/_MAX_/g,i.call(t,t.fnRecordsTotal())).replace(/_TOTAL_/g,i.call(t,o)).replace(/_PAGE_/g,i.call(t,a?1:Math.ceil(n/s))).replace(/_PAGES_/g,i.call(t,a?1:Math.ceil(o/s)))}function ot(t){var e,i,n,s=t.iInitDisplayStart,o=t.aoColumns;if(i=t.oFeatures,t.bInitialised){for(F(t),O(t),N(t,t.aoHeader),N(t,t.aoFooter),dt(t,!0),i.bAutoWidth&&gt(t),e=0,i=o.length;e<i;e++)n=o[e],n.sWidth&&(n.nTh.style.width=xt(n.sWidth));R(t),o=jt(t),"ssp"!=o&&("ajax"==o?W(t,[],function(i){var n=q(t,i);for(e=0;e<n.length;e++)_(t,n[e]);t.iInitDisplayStart=s,R(t),dt(t,!1),at(t,i)},t):(dt(t,!1),at(t)))}else setTimeout(function(){ot(t)},200)}function at(t,e){t._bInitComplete=!0,e&&f(t),zt(t,"aoInitComplete","init",[t,e])}function rt(t,e){var i=parseInt(e,10);t._iDisplayLength=i,$t(t),zt(t,null,"length",[t,i])}function lt(t){for(var e=t.oClasses,i=t.sTableId,s=t.aLengthMenu,o=n.isArray(s[0]),a=o?s[0]:s,s=o?s[1]:s,o=n("<select/>",{name:i+"_length","aria-controls":i,"class":e.sLengthSelect}),r=0,l=a.length;r<l;r++)o[0][r]=new Option(s[r],a[r]);var h=n("<div><label/></div>").addClass(e.sLength);return t.aanFeatures.l||(h[0].id=i+"_length"),h.children().append(t.oLanguage.sLengthMenu.replace("_MENU_",o[0].outerHTML)),n("select",h).val(t._iDisplayLength).bind("change.DT",function(){rt(t,n(this).val()),L(t)}),n(t.nTable).bind("length.dt.DT",function(e,i,s){t===i&&n("select",h).val(s)}),h[0]}function ht(t){var e=t.sPaginationType,i=Ut.ext.pager[e],s="function"==typeof i,o=function(t){L(t)},e=n("<div/>").addClass(t.oClasses.sPaging+e)[0],a=t.aanFeatures;return s||i.fnInit(t,e,o),a.p||(e.id=t.sTableId+"_paginate",t.aoDrawCallback.push({fn:function(t){if(s){var e,n=t._iDisplayStart,r=t._iDisplayLength,l=t.fnRecordsDisplay(),h=-1===r,n=h?0:Math.ceil(n/r),r=h?1:Math.ceil(l/r),l=i(n,r),h=0;for(e=a.p.length;h<e;h++)Wt(t,"pageButton")(t,a.p[h],h,l,n,r)}else i.fnUpdate(t,o)},sName:"pagination"})),e}function ct(t,e,i){var n=t._iDisplayStart,s=t._iDisplayLength,o=t.fnRecordsDisplay();return 0===o||-1===s?n=0:"number"==typeof e?(n=e*s,n>o&&(n=0)):"first"==e?n=0:"previous"==e?(n=0<=s?n-s:0,0>n&&(n=0)):"next"==e?n+s<o&&(n+=s):"last"==e?n=Math.floor((o-1)/s)*s:Ot(t,0,"Unknown paging action: "+e,5),e=t._iDisplayStart!==n,t._iDisplayStart=n,e&&(zt(t,null,"page",[t]),i&&L(t)),e}function ut(t){return n("<div/>",{id:t.aanFeatures.r?null:t.sTableId+"_processing","class":t.oClasses.sProcessing}).html(t.oLanguage.sProcessing).insertBefore(t.nTable)[0]}function dt(t,e){t.oFeatures.bProcessing&&n(t.aanFeatures.r).css("display",e?"block":"none"),zt(t,null,"processing",[t,e])}function ft(t){var e=n(t.nTable);e.attr("role","grid");var i=t.oScroll;if(""===i.sX&&""===i.sY)return t.nTable;var s=i.sX,o=i.sY,a=t.oClasses,r=e.children("caption"),l=r.length?r[0]._captionSide:null,h=n(e[0].cloneNode(!1)),c=n(e[0].cloneNode(!1)),u=e.children("tfoot");i.sX&&"100%"===e.attr("width")&&e.removeAttr("width"),u.length||(u=null),i=n("<div/>",{"class":a.sScrollWrapper}).append(n("<div/>",{"class":a.sScrollHead}).css({overflow:"hidden",position:"relative",border:0,width:s?s?xt(s):null:"100%"}).append(n("<div/>",{"class":a.sScrollHeadInner}).css({"box-sizing":"content-box",width:i.sXInner||"100%"}).append(h.removeAttr("id").css("margin-left",0).append("top"===l?r:null).append(e.children("thead"))))).append(n("<div/>",{"class":a.sScrollBody}).css({overflow:"auto",height:o?xt(o):null,width:s?xt(s):null}).append(e)),u&&i.append(n("<div/>",{"class":a.sScrollFoot}).css({overflow:"hidden",border:0,width:s?s?xt(s):null:"100%"}).append(n("<div/>",{"class":a.sScrollFootInner}).append(c.removeAttr("id").css("margin-left",0).append("bottom"===l?r:null).append(e.children("tfoot")))));var e=i.children(),d=e[0],a=e[1],f=u?e[2]:null;return s&&n(a).on("scroll.DT",function(){var t=this.scrollLeft;d.scrollLeft=t,u&&(f.scrollLeft=t)}),t.nScrollHead=d,t.nScrollBody=a,t.nScrollFoot=f,t.aoDrawCallback.push({fn:pt,sName:"scrolling"}),i[0]}function pt(t){var e,i,s,o,a,r,l=t.oScroll,h=l.sX,c=l.sXInner,u=l.sY,d=l.iBarWidth,f=n(t.nScrollHead),m=f[0].style,g=f.children("div"),v=g[0].style,b=g.children("table"),g=t.nScrollBody,y=n(g),_=g.style,w=n(t.nScrollFoot).children("div"),x=w.children("table"),D=n(t.nTHead),C=n(t.nTable),S=C[0],T=S.style,k=t.nTFoot?n(t.nTFoot):null,E=t.oBrowser,M=E.bScrollOversize,I=[],A=[],P=[],H=function(t){t=t.style,t.paddingTop="0",t.paddingBottom="0",t.borderTopWidth="0",t.borderBottomWidth="0",t.height=0};C.children("thead, tfoot").remove(),a=D.clone().prependTo(C),e=D.find("tr"),s=a.find("tr"),a.find("th, td").removeAttr("tabindex"),k&&(o=k.clone().prependTo(C),i=k.find("tr"),o=o.find("tr")),h||(_.width="100%",f[0].style.width="100%"),n.each($(t,a),function(e,i){r=p(t,e),i.style.width=t.aoColumns[r].sWidth}),k&&mt(function(t){t.style.width=""},o),l.bCollapse&&""!==u&&(_.height=y[0].offsetHeight+D[0].offsetHeight+"px"),f=C.outerWidth(),""===h?(T.width="100%",M&&(C.find("tbody").height()>g.offsetHeight||"scroll"==y.css("overflow-y"))&&(T.width=xt(C.outerWidth()-d))):""!==c?T.width=xt(c):f==y.width()&&y.height()<C.height()?(T.width=xt(f-d),C.outerWidth()>f-d&&(T.width=xt(f))):T.width=xt(f),f=C.outerWidth(),mt(H,s),mt(function(t){P.push(t.innerHTML),I.push(xt(n(t).css("width")))},s),mt(function(t,e){t.style.width=I[e]},e),n(s).height(0),k&&(mt(H,o),mt(function(t){A.push(xt(n(t).css("width")))},o),mt(function(t,e){t.style.width=A[e]},i),n(o).height(0)),mt(function(t,e){t.innerHTML='<div class="dataTables_sizing" style="height:0;overflow:hidden;">'+P[e]+"</div>",t.style.width=I[e]},s),k&&mt(function(t,e){t.innerHTML="",t.style.width=A[e]},o),C.outerWidth()<f?(i=g.scrollHeight>g.offsetHeight||"scroll"==y.css("overflow-y")?f+d:f,M&&(g.scrollHeight>g.offsetHeight||"scroll"==y.css("overflow-y"))&&(T.width=xt(i-d)),(""===h||""!==c)&&Ot(t,1,"Possible column misalignment",6)):i="100%",_.width=xt(i),m.width=xt(i),k&&(t.nScrollFoot.style.width=xt(i)),!u&&M&&(_.height=xt(S.offsetHeight+d)),u&&l.bCollapse&&(_.height=xt(u),l=h&&S.offsetWidth>g.offsetWidth?d:0,S.offsetHeight<g.offsetHeight&&(_.height=xt(S.offsetHeight+l))),l=C.outerWidth(),b[0].style.width=xt(l),v.width=xt(l),b=C.height()>g.clientHeight||"scroll"==y.css("overflow-y"),E="padding"+(E.bScrollbarLeft?"Left":"Right"),v[E]=b?d+"px":"0px",k&&(x[0].style.width=xt(l),w[0].style.width=xt(l),w[0].style[E]=b?d+"px":"0px"),y.scroll(),!t.bSorted&&!t.bFiltered||t._drawHold||(g.scrollTop=0)}function mt(t,e,i){for(var n,s,o=0,a=0,r=e.length;a<r;){for(n=e[a].firstChild,s=i?i[a].firstChild:null;n;)1===n.nodeType&&(i?t(n,s,o):t(n,o),o++),n=n.nextSibling,s=i?s.nextSibling:null;a++}}function gt(e){var i,s,o=e.nTable,a=e.aoColumns,r=e.oScroll,l=r.sY,h=r.sX,c=r.sXInner,u=a.length,r=v(e,"bVisible"),d=n("th",e.nTHead),p=o.style.width||o.getAttribute("width"),m=o.parentNode,b=!1;for(i=0;i<r.length;i++)s=a[r[i]],null!==s.sWidth&&(s.sWidth=bt(s.sWidthOrig,m),b=!0);if(b||h||l||u!=g(e)||u!=d.length){u=n(o).clone().empty().css("visibility","hidden").removeAttr("id").append(n(e.nTHead).clone(!1)).append(n(e.nTFoot).clone(!1)).append(n("<tbody><tr/></tbody>")),u.find("tfoot th, tfoot td").css("width","");var y=u.find("tbody tr"),d=$(e,u.find("thead")[0]);for(i=0;i<r.length;i++)s=a[r[i]],d[i].style.width=null!==s.sWidthOrig&&""!==s.sWidthOrig?xt(s.sWidthOrig):"";if(e.aoData.length)for(i=0;i<r.length;i++)b=r[i],s=a[b],n(_t(e,b)).clone(!1).append(s.sContentPadding).appendTo(y);if(u.appendTo(m),h&&c?u.width(c):h?(u.css("width","auto"),u.width()<m.offsetWidth&&u.width(m.offsetWidth)):l?u.width(m.offsetWidth):p&&u.width(p),yt(e,u[0]),h){for(i=c=0;i<r.length;i++)s=a[r[i]],l=n(d[i]).outerWidth(),c+=null===s.sWidthOrig?l:parseInt(s.sWidth,10)+l-n(d[i]).width();u.width(xt(c)),o.style.width=xt(c)}for(i=0;i<r.length;i++)s=a[r[i]],(l=n(d[i]).width())&&(s.sWidth=xt(l));o.style.width=xt(u.css("width")),u.remove()}else for(i=0;i<u;i++)a[i].sWidth=xt(d.eq(i).width());p&&(o.style.width=xt(p)),!p&&!h||e._reszEvt||(n(t).bind("resize.DT-"+e.sInstance,vt(function(){f(e)})),e._reszEvt=!0)}function vt(t,e){var n,s,o=e!==i?e:200;return function(){var e=this,a=+new Date,r=arguments;n&&a<n+o?(clearTimeout(s),s=setTimeout(function(){n=i,t.apply(e,r)},o)):(n=a,t.apply(e,r))}}function bt(t,i){if(!t)return 0;var s=n("<div/>").css("width",xt(t)).appendTo(i||e.body),o=s[0].offsetWidth;return s.remove(),o}function yt(t,e){var i=t.oScroll;(i.sX||i.sY)&&(i=i.sX?0:i.iBarWidth,e.style.width=xt(n(e).outerWidth()-i))}function _t(t,e){var i=wt(t,e);if(0>i)return null;var s=t.aoData[i];return s.nTr?s.anCells[e]:n("<td/>").html(x(t,i,e,"display"))[0]}function wt(t,e){for(var i,n=-1,s=-1,o=0,a=t.aoData.length;o<a;o++)i=x(t,o,e,"display")+"",i=i.replace(ye,""),i.length>n&&(n=i.length,s=o);return s}function xt(t){return null===t?"0px":"number"==typeof t?0>t?"0px":t+"px":t.match(/\d$/)?t+"px":t}function Dt(){if(!Ut.__scrollbarWidth){var t=n("<p/>").css({width:"100%",height:200,padding:0})[0],e=n("<div/>").css({position:"absolute",top:0,left:0,width:200,height:150,padding:0,overflow:"hidden",visibility:"hidden"}).append(t).appendTo("body"),i=t.offsetWidth;e.css("overflow","scroll"),t=t.offsetWidth,i===t&&(t=e[0].clientWidth),e.remove(),Ut.__scrollbarWidth=i-t}return Ut.__scrollbarWidth}function Ct(t){var e,s,o,a,r,l,h=[],c=t.aoColumns;e=t.aaSortingFixed,s=n.isPlainObject(e);var u=[];for(o=function(t){t.length&&!n.isArray(t[0])?u.push(t):u.push.apply(u,t)},n.isArray(e)&&o(e),s&&e.pre&&o(e.pre),o(t.aaSorting),s&&e.post&&o(e.post),t=0;t<u.length;t++)for(l=u[t][0],o=c[l].aDataSort,e=0,s=o.length;e<s;e++)a=o[e],r=c[a].sType||"string",u[t]._idx===i&&(u[t]._idx=n.inArray(u[t][1],c[a].asSorting)),h.push({src:l,col:a,dir:u[t][1],index:u[t]._idx,type:r,formatter:Ut.ext.type.order[r+"-pre"]});return h}function St(t){var e,i,n,s,o=[],a=Ut.ext.type.order,r=t.aoData,l=0,h=t.aiDisplayMaster;for(b(t),s=Ct(t),e=0,i=s.length;e<i;e++)n=s[e],n.formatter&&l++,It(t,n.col);if("ssp"!=jt(t)&&0!==s.length){for(e=0,i=h.length;e<i;e++)o[h[e]]=e;l===s.length?h.sort(function(t,e){var i,n,a,l,h=s.length,c=r[t]._aSortData,u=r[e]._aSortData;for(a=0;a<h;a++)if(l=s[a],i=c[l.col],n=u[l.col],i=i<n?-1:i>n?1:0,0!==i)return"asc"===l.dir?i:-i;return i=o[t],n=o[e],i<n?-1:i>n?1:0}):h.sort(function(t,e){var i,n,l,h,c=s.length,u=r[t]._aSortData,d=r[e]._aSortData;for(l=0;l<c;l++)if(h=s[l],i=u[h.col],n=d[h.col],h=a[h.type+"-"+h.dir]||a["string-"+h.dir],i=h(i,n),0!==i)return i;return i=o[t],n=o[e],i<n?-1:i>n?1:0})}t.bSorted=!0}function Tt(t){for(var e,i,n=t.aoColumns,s=Ct(t),t=t.oLanguage.oAria,o=0,a=n.length;o<a;o++){i=n[o];var r=i.asSorting;e=i.sTitle.replace(/<.*?>/g,"");var l=i.nTh;l.removeAttribute("aria-sort"),i.bSortable&&(0<s.length&&s[0].col==o?(l.setAttribute("aria-sort","asc"==s[0].dir?"ascending":"descending"),i=r[s[0].index+1]||r[0]):i=r[0],e+="asc"===i?t.sSortAscending:t.sSortDescending),l.setAttribute("aria-label",e)}}function kt(t,e,s,o){var a=t.aaSorting,r=t.aoColumns[e].asSorting,l=function(t,e){var s=t._idx;return s===i&&(s=n.inArray(t[1],r)),s+1<r.length?s+1:e?null:0};"number"==typeof a[0]&&(a=t.aaSorting=[a]),s&&t.oFeatures.bSortMulti?(s=n.inArray(e,he(a,"0")),-1!==s?(e=l(a[s],!0),null===e?a.splice(s,1):(a[s][1]=r[e],a[s]._idx=e)):(a.push([e,r[0],0]),a[a.length-1]._idx=0)):a.length&&a[0][0]==e?(e=l(a[0]),a.length=1,a[0][1]=r[e],a[0]._idx=e):(a.length=0,a.push([e,r[0]]),a[0]._idx=0),R(t),"function"==typeof o&&o(t)}function Et(t,e,i,n){var s=t.aoColumns[i];Rt(e,{},function(e){!1!==s.bSortable&&(t.oFeatures.bProcessing?(dt(t,!0),setTimeout(function(){kt(t,i,e.shiftKey,n),"ssp"!==jt(t)&&dt(t,!1)},0)):kt(t,i,e.shiftKey,n))})}function Mt(t){var e,i,s=t.aLastSort,o=t.oClasses.sSortColumn,a=Ct(t),r=t.oFeatures;if(r.bSort&&r.bSortClasses){for(r=0,e=s.length;r<e;r++)i=s[r].src,n(he(t.aoData,"anCells",i)).removeClass(o+(2>r?r+1:3));for(r=0,e=a.length;r<e;r++)i=a[r].src,n(he(t.aoData,"anCells",i)).addClass(o+(2>r?r+1:3))}t.aLastSort=a}function It(t,e){var i,n=t.aoColumns[e],s=Ut.ext.order[n.sSortDataType];s&&(i=s.call(t.oInstance,t,e,m(t,e)));for(var o,a=Ut.ext.type.order[n.sType+"-pre"],r=0,l=t.aoData.length;r<l;r++)n=t.aoData[r],n._aSortData||(n._aSortData=[]),(!n._aSortData[e]||s)&&(o=s?i[r]:x(t,r,e,"sort"),n._aSortData[e]=a?a(o):o)}function At(t){if(t.oFeatures.bStateSave&&!t.bDestroying){var e={time:+new Date,start:t._iDisplayStart,length:t._iDisplayLength,order:n.extend(!0,[],t.aaSorting),search:tt(t.oPreviousSearch),columns:n.map(t.aoColumns,function(e,i){return{visible:e.bVisible,search:tt(t.aoPreSearchCols[i])}})};zt(t,"aoStateSaveParams","stateSaveParams",[t,e]),t.oSavedState=e,t.fnStateSaveCallback.call(t.oInstance,t,e)}}function Pt(t){var e,i,s=t.aoColumns;if(t.oFeatures.bStateSave){var o=t.fnStateLoadCallback.call(t.oInstance,t);if(o&&o.time&&(e=zt(t,"aoStateLoadParams","stateLoadParams",[t,o]),-1===n.inArray(!1,e)&&(e=t.iStateDuration,!(0<e&&o.time<+new Date-1e3*e)&&s.length===o.columns.length))){for(t.oLoadedState=n.extend(!0,{},o),t._iDisplayStart=o.start,t.iInitDisplayStart=o.start,t._iDisplayLength=o.length,t.aaSorting=[],n.each(o.order,function(e,i){t.aaSorting.push(i[0]>=s.length?[0,i[1]]:i)}),n.extend(t.oPreviousSearch,et(o.search)),e=0,i=o.columns.length;e<i;e++){var a=o.columns[e];s[e].bVisible=a.visible,n.extend(t.aoPreSearchCols[e],et(a.search))}zt(t,"aoStateLoaded","stateLoaded",[t,o])}}}function Ht(t){var e=Ut.settings,t=n.inArray(t,he(e,"nTable"));return-1!==t?e[t]:null}function Ot(e,i,n,s){if(n="DataTables warning: "+(null!==e?"table id="+e.sTableId+" - ":"")+n,s&&(n+=". For more information about this error, please see http://datatables.net/tn/"+s),i)t.console&&console.log&&console.log(n);else if(i=Ut.ext,i=i.sErrMode||i.errMode,zt(e,null,"error",[e,s,n]),"alert"==i)alert(n);else{if("throw"==i)throw Error(n);"function"==typeof i&&i(e,s,n)}}function Nt(t,e,s,o){n.isArray(s)?n.each(s,function(i,s){n.isArray(s)?Nt(t,e,s[0],s[1]):Nt(t,e,s)}):(o===i&&(o=s),e[s]!==i&&(t[o]=e[s]))}function Lt(t,e,i){var s,o;for(o in e)e.hasOwnProperty(o)&&(s=e[o],n.isPlainObject(s)?(n.isPlainObject(t[o])||(t[o]={}),n.extend(!0,t[o],s)):t[o]=i&&"data"!==o&&"aaData"!==o&&n.isArray(s)?s.slice():s);return t}function Rt(t,e,i){n(t).bind("click.DT",e,function(e){t.blur(),i(e)}).bind("keypress.DT",e,function(t){13===t.which&&(t.preventDefault(),i(t))}).bind("selectstart.DT",function(){return!1})}function Ft(t,e,i,n){i&&t[e].push({fn:i,sName:n})}function zt(t,e,i,s){var o=[];return e&&(o=n.map(t[e].slice().reverse(),function(e){return e.fn.apply(t.oInstance,s)})),null!==i&&n(t.nTable).trigger(i+".dt",s),o}function $t(t){var e=t._iDisplayStart,i=t.fnDisplayEnd(),n=t._iDisplayLength;e>=i&&(e=i-n),e-=e%n,(-1===n||0>e)&&(e=0),t._iDisplayStart=e}function Wt(t,e){var i=t.renderer,s=Ut.ext.renderer[e];return n.isPlainObject(i)&&i[e]?s[i[e]]||s._:"string"==typeof i?s[i]||s._:s._}function jt(t){return t.oFeatures.bServerSide?"ssp":t.ajax||t.sAjaxSource?"ajax":"dom"}function Yt(t,e){var i=[],i=Le.numbers_length,n=Math.floor(i/2);return e<=i?i=ue(0,e):t<=n?(i=ue(0,i-2),i.push("ellipsis"),i.push(e-1)):(t>=e-1-n?i=ue(e-(i-2),e):(i=ue(t-1,t+2),i.push("ellipsis"),i.push(e-1)),i.splice(0,0,"ellipsis"),i.splice(0,0,0)),i.DT_el="span",i}function Bt(t){n.each({num:function(e){return Re(e,t)},"num-fmt":function(e){return Re(e,t,ne)},"html-num":function(e){return Re(e,t,Qt)},"html-num-fmt":function(e){return Re(e,t,Qt,ne)}},function(e,i){Vt.type.order[e+t+"-pre"]=i,e.match(/^html\-/)&&(Vt.type.search[e+t]=Vt.type.search.html)})}function qt(t){return function(){var e=[Ht(this[Ut.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return Ut.ext.internal[t].apply(this,e)}}var Ut,Vt,Gt,Xt,Zt,Kt={},Jt=/[\r\n]/g,Qt=/<.*?>/g,te=/^[\w\+\-]/,ee=/[\w\+\-]$/,ie=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),ne=/[',$\u00a3\u20ac\u00a5%\u2009\u202F]/g,se=function(t){return!t||!0===t||"-"===t},oe=function(t){var e=parseInt(t,10);return!isNaN(e)&&isFinite(t)?e:null},ae=function(t,e){return Kt[e]||(Kt[e]=RegExp(J(e),"g")),"string"==typeof t&&"."!==e?t.replace(/\./g,"").replace(Kt[e],"."):t},re=function(t,e,i){var n="string"==typeof t;return e&&n&&(t=ae(t,e)),i&&n&&(t=t.replace(ne,"")),se(t)||!isNaN(parseFloat(t))&&isFinite(t)},le=function(t,e,i){return!!se(t)||(se(t)||"string"==typeof t?!!re(t.replace(Qt,""),e,i)||null:null)},he=function(t,e,n){var s=[],o=0,a=t.length;if(n!==i)for(;o<a;o++)t[o]&&t[o][e]&&s.push(t[o][e][n]);else for(;o<a;o++)t[o]&&s.push(t[o][e]);return s},ce=function(t,e,n,s){var o=[],a=0,r=e.length;if(s!==i)for(;a<r;a++)t[e[a]][n]&&o.push(t[e[a]][n][s]);else for(;a<r;a++)o.push(t[e[a]][n]);return o},ue=function(t,e){var n,s=[];e===i?(e=0,n=t):(n=e,e=t);for(var o=e;o<n;o++)s.push(o);return s},de=function(t){for(var e=[],i=0,n=t.length;i<n;i++)t[i]&&e.push(t[i]);return e},fe=function(t){var e,i,n,s=[],o=t.length,a=0;i=0;t:for(;i<o;i++){for(e=t[i],n=0;n<a;n++)if(s[n]===e)continue t;s.push(e),a++}return s},pe=function(t,e,n){t[e]!==i&&(t[n]=t[e])},me=/\[.*?\]$/,ge=/\(\)$/,ve=n("<div>")[0],be=ve.textContent!==i,ye=/<.*?>/g;Ut=function(t){this.$=function(t,e){return this.api(!0).$(t,e)},this._=function(t,e){return this.api(!0).rows(t,e).data()},this.api=function(t){return new Gt(t?Ht(this[Vt.iApiIndex]):this)},this.fnAddData=function(t,e){var s=this.api(!0),o=n.isArray(t)&&(n.isArray(t[0])||n.isPlainObject(t[0]))?s.rows.add(t):s.row.add(t);return(e===i||e)&&s.draw(),o.flatten().toArray()},this.fnAdjustColumnSizing=function(t){var e=this.api(!0).columns.adjust(),n=e.settings()[0],s=n.oScroll;t===i||t?e.draw(!1):(""!==s.sX||""!==s.sY)&&pt(n)},this.fnClearTable=function(t){var e=this.api(!0).clear();(t===i||t)&&e.draw()},this.fnClose=function(t){this.api(!0).row(t).child.hide()},this.fnDeleteRow=function(t,e,n){var s=this.api(!0),t=s.rows(t),o=t.settings()[0],a=o.aoData[t[0][0]];return t.remove(),e&&e.call(this,o,a),(n===i||n)&&s.draw(),a},this.fnDestroy=function(t){this.api(!0).destroy(t)},this.fnDraw=function(t){this.api(!0).draw(!t)},this.fnFilter=function(t,e,n,s,o,a){o=this.api(!0),null===e||e===i?o.search(t,n,s,a):o.column(e).search(t,n,s,a),o.draw()},this.fnGetData=function(t,e){var n=this.api(!0);if(t!==i){var s=t.nodeName?t.nodeName.toLowerCase():"";return e!==i||"td"==s||"th"==s?n.cell(t,e).data():n.row(t).data()||null}return n.data().toArray()},this.fnGetNodes=function(t){var e=this.api(!0);return t!==i?e.row(t).node():e.rows().nodes().flatten().toArray()},this.fnGetPosition=function(t){var e=this.api(!0),i=t.nodeName.toUpperCase();return"TR"==i?e.row(t).index():"TD"==i||"TH"==i?(t=e.cell(t).index(),[t.row,t.columnVisible,t.column]):null},this.fnIsOpen=function(t){return this.api(!0).row(t).child.isShown()},this.fnOpen=function(t,e,i){return this.api(!0).row(t).child(e,i).show().child()[0]},this.fnPageChange=function(t,e){var n=this.api(!0).page(t);(e===i||e)&&n.draw(!1)},this.fnSetColumnVis=function(t,e,n){t=this.api(!0).column(t).visible(e),(n===i||n)&&t.columns.adjust().draw()},this.fnSettings=function(){return Ht(this[Vt.iApiIndex])},this.fnSort=function(t){this.api(!0).order(t).draw()},this.fnSortListener=function(t,e,i){this.api(!0).order.listener(t,e,i)},this.fnUpdate=function(t,e,n,s,o){var a=this.api(!0);return n===i||null===n?a.row(e).data(t):a.cell(e,n).data(t),(o===i||o)&&a.columns.adjust(),(s===i||s)&&a.draw(),0},this.fnVersionCheck=Vt.fnVersionCheck;var e=this,s=t===i,c=this.length;s&&(t={}),this.oApi=this.internal=Vt.internal;for(var f in Ut.ext.internal)f&&(this[f]=qt(f));return this.each(function(){var f,p={},p=1<c?Lt(p,t,!0):t,m=0,g=this.getAttribute("id"),v=!1,b=Ut.defaults,x=n(this);if("table"!=this.nodeName.toLowerCase())Ot(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{r(b),l(b.column),o(b,b,!0),o(b.column,b.column,!0),o(b,n.extend(p,x.data()));var D=Ut.settings,m=0;for(f=D.length;m<f;m++){var C=D[m];if(C.nTable==this||C.nTHead.parentNode==this||C.nTFoot&&C.nTFoot.parentNode==this){if(m=p.bRetrieve!==i?p.bRetrieve:b.bRetrieve,s||m)return C.oInstance;if(p.bDestroy!==i?p.bDestroy:b.bDestroy){C.oInstance.fnDestroy();break}return void Ot(C,0,"Cannot reinitialise DataTable",3)}if(C.sTableId==this.id){D.splice(m,1);break}}null!==g&&""!==g||(this.id=g="DataTables_Table_"+Ut.ext._unique++);var S=n.extend(!0,{},Ut.models.oSettings,{nTable:this,oApi:e.internal,oInit:p,sDestroyWidth:x[0].style.width,sInstance:g,sTableId:g});D.push(S),S.oInstance=1===e.length?e:x.dataTable(),r(p),p.oLanguage&&a(p.oLanguage),p.aLengthMenu&&!p.iDisplayLength&&(p.iDisplayLength=n.isArray(p.aLengthMenu[0])?p.aLengthMenu[0][0]:p.aLengthMenu[0]),p=Lt(n.extend(!0,{},b),p),Nt(S.oFeatures,p,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" ")),Nt(S,p,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod","aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols","aoPreSearchCols"],["iDisplayLength","_iDisplayLength"],["bJQueryUI","bJUI"]]),Nt(S.oScroll,p,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]),Nt(S.oLanguage,p,"fnInfoCallback"),Ft(S,"aoDrawCallback",p.fnDrawCallback,"user"),Ft(S,"aoServerParams",p.fnServerParams,"user"),Ft(S,"aoStateSaveParams",p.fnStateSaveParams,"user"),Ft(S,"aoStateLoadParams",p.fnStateLoadParams,"user"),Ft(S,"aoStateLoaded",p.fnStateLoaded,"user"),Ft(S,"aoRowCallback",p.fnRowCallback,"user"),Ft(S,"aoRowCreatedCallback",p.fnCreatedRow,"user"),Ft(S,"aoHeaderCallback",p.fnHeaderCallback,"user"),Ft(S,"aoFooterCallback",p.fnFooterCallback,"user"),Ft(S,"aoInitComplete",p.fnInitComplete,"user"),Ft(S,"aoPreDrawCallback",p.fnPreDrawCallback,"user"),g=S.oClasses,p.bJQueryUI?(n.extend(g,Ut.ext.oJUIClasses,p.oClasses),p.sDom===b.sDom&&"lfrtip"===b.sDom&&(S.sDom='<"H"lfr>t<"F"ip>'),S.renderer?n.isPlainObject(S.renderer)&&!S.renderer.header&&(S.renderer.header="jqueryui"):S.renderer="jqueryui"):n.extend(g,Ut.ext.classes,p.oClasses),x.addClass(g.sTable),""===S.oScroll.sX&&""===S.oScroll.sY||(S.oScroll.iBarWidth=Dt()),!0===S.oScroll.sX&&(S.oScroll.sX="100%"),S.iInitDisplayStart===i&&(S.iInitDisplayStart=p.iDisplayStart,S._iDisplayStart=p.iDisplayStart),null!==p.iDeferLoading&&(S.bDeferLoading=!0,m=n.isArray(p.iDeferLoading),S._iRecordsDisplay=m?p.iDeferLoading[0]:p.iDeferLoading,S._iRecordsTotal=m?p.iDeferLoading[1]:p.iDeferLoading);var T=S.oLanguage;n.extend(!0,T,p.oLanguage),""!==T.sUrl&&(n.ajax({dataType:"json",url:T.sUrl,success:function(t){a(t),o(b.oLanguage,t),n.extend(!0,T,t),ot(S)},error:function(){ot(S)}}),v=!0),null===p.asStripeClasses&&(S.asStripeClasses=[g.sStripeOdd,g.sStripeEven]);var m=S.asStripeClasses,k=n("tbody tr",this).eq(0);if(-1!==n.inArray(!0,n.map(m,function(t){return k.hasClass(t)}))&&(n("tbody tr",this).removeClass(m.join(" ")),S.asDestroyStripes=m.slice()),D=[],m=this.getElementsByTagName("thead"),0!==m.length&&(z(S.aoHeader,m[0]),D=$(S)),null===p.aoColumns)for(C=[],m=0,f=D.length;m<f;m++)C.push(null);else C=p.aoColumns;for(m=0,f=C.length;m<f;m++)u(S,D?D[m]:null);if(y(S,p.aoColumnDefs,C,function(t,e){d(S,t,e)}),k.length){var E=function(t,e){return null!==t.getAttribute("data-"+e)?e:null};n.each(A(S,k[0]).cells,function(t,e){var n=S.aoColumns[t];if(n.mData===t){var s=E(e,"sort")||E(e,"order"),o=E(e,"filter")||E(e,"search");null===s&&null===o||(n.mData={_:t+".display",sort:null!==s?t+".@data-"+s:i,type:null!==s?t+".@data-"+s:i,filter:null!==o?t+".@data-"+o:i},d(S,t))}})}var M=S.oFeatures;if(p.bStateSave&&(M.bStateSave=!0,Pt(S,p),Ft(S,"aoDrawCallback",At,"state_save")),p.aaSorting===i)for(D=S.aaSorting,
m=0,f=D.length;m<f;m++)D[m][1]=S.aoColumns[m].asSorting[0];if(Mt(S),M.bSort&&Ft(S,"aoDrawCallback",function(){if(S.bSorted){var t=Ct(S),e={};n.each(t,function(t,i){e[i.src]=i.dir}),zt(S,null,"order",[S,t,e]),Tt(S)}}),Ft(S,"aoDrawCallback",function(){(S.bSorted||"ssp"===jt(S)||M.bDeferRender)&&Mt(S)},"sc"),h(S),m=x.children("caption").each(function(){this._captionSide=x.css("caption-side")}),f=x.children("thead"),0===f.length&&(f=n("<thead/>").appendTo(this)),S.nTHead=f[0],f=x.children("tbody"),0===f.length&&(f=n("<tbody/>").appendTo(this)),S.nTBody=f[0],f=x.children("tfoot"),0===f.length&&0<m.length&&(""!==S.oScroll.sX||""!==S.oScroll.sY)&&(f=n("<tfoot/>").appendTo(this)),0===f.length||0===f.children().length?x.addClass(g.sNoFooter):0<f.length&&(S.nTFoot=f[0],z(S.aoFooter,S.nTFoot)),p.aaData)for(m=0;m<p.aaData.length;m++)_(S,p.aaData[m]);else(S.bDeferLoading||"dom"==jt(S))&&w(S,n(S.nTBody).children("tr"));S.aiDisplay=S.aiDisplayMaster.slice(),S.bInitialised=!0,!1===v&&ot(S)}}),e=null,this};var _e=[],we=Array.prototype,xe=function(t){var e,i,s=Ut.settings,o=n.map(s,function(t){return t.nTable});return t?t.nTable&&t.oApi?[t]:t.nodeName&&"table"===t.nodeName.toLowerCase()?(e=n.inArray(t,o),-1!==e?[s[e]]:null):t&&"function"==typeof t.settings?t.settings().toArray():("string"==typeof t?i=n(t):t instanceof n&&(i=t),i?i.map(function(){return e=n.inArray(this,o),-1!==e?s[e]:null}).toArray():void 0):[]};Gt=function(t,e){if(!this instanceof Gt)throw"DT API must be constructed as a new object";var i=[],s=function(t){(t=xe(t))&&i.push.apply(i,t)};if(n.isArray(t))for(var o=0,a=t.length;o<a;o++)s(t[o]);else s(t);this.context=fe(i),e&&this.push.apply(this,e.toArray?e.toArray():e),this.selector={rows:null,cols:null,opts:null},Gt.extend(this,this,_e)},Ut.Api=Gt,Gt.prototype={concat:we.concat,context:[],each:function(t){for(var e=0,i=this.length;e<i;e++)t.call(this,this[e],e,this);return this},eq:function(t){var e=this.context;return e.length>t?new Gt(e[t],this[t]):null},filter:function(t){var e=[];if(we.filter)e=we.filter.call(this,t,this);else for(var i=0,n=this.length;i<n;i++)t.call(this,this[i],i,this)&&e.push(this[i]);return new Gt(this.context,e)},flatten:function(){var t=[];return new Gt(this.context,t.concat.apply(t,this.toArray()))},join:we.join,indexOf:we.indexOf||function(t,e){for(var i=e||0,n=this.length;i<n;i++)if(this[i]===t)return i;return-1},iterator:function(t,e,n,s){var o,a,r,l,h,c,u,d=[],f=this.context,p=this.selector;for("string"==typeof t&&(s=n,n=e,e=t,t=!1),a=0,r=f.length;a<r;a++){var m=new Gt(f[a]);if("table"===e)o=n.call(m,f[a],a),o!==i&&d.push(o);else if("columns"===e||"rows"===e)o=n.call(m,f[a],this[a],a),o!==i&&d.push(o);else if("column"===e||"column-rows"===e||"row"===e||"cell"===e)for(u=this[a],"column-rows"===e&&(c=ke(f[a],p.opts)),l=0,h=u.length;l<h;l++)o=u[l],o="cell"===e?n.call(m,f[a],o.row,o.column,a,l):n.call(m,f[a],o,a,l,c),o!==i&&d.push(o)}return d.length||s?(t=new Gt(f,t?d.concat.apply([],d):d),e=t.selector,e.rows=p.rows,e.cols=p.cols,e.opts=p.opts,t):this},lastIndexOf:we.lastIndexOf||function(t,e){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(t){var e=[];if(we.map)e=we.map.call(this,t,this);else for(var i=0,n=this.length;i<n;i++)e.push(t.call(this,this[i],i));return new Gt(this.context,e)},pluck:function(t){return this.map(function(e){return e[t]})},pop:we.pop,push:we.push,reduce:we.reduce||function(t,e){return c(this,t,e,0,this.length,1)},reduceRight:we.reduceRight||function(t,e){return c(this,t,e,this.length-1,-1,-1)},reverse:we.reverse,selector:null,shift:we.shift,sort:we.sort,splice:we.splice,toArray:function(){return we.slice.call(this)},to$:function(){return n(this)},toJQuery:function(){return n(this)},unique:function(){return new Gt(this.context,fe(this))},unshift:we.unshift},Gt.extend=function(t,e,i){if(i.length&&e&&(e instanceof Gt||e.__dt_wrapper)){var s,o,a,r=function(t,e,i){return function(){var n=e.apply(t,arguments);return Gt.extend(n,n,i.methodExt),n}};for(s=0,o=i.length;s<o;s++)a=i[s],e[a.name]="function"==typeof a.val?r(t,a.val,a):n.isPlainObject(a.val)?{}:a.val,e[a.name].__dt_wrapper=!0,Gt.extend(t,e[a.name],a.propExt)}},Gt.register=Xt=function(t,e){if(n.isArray(t))for(var i=0,s=t.length;i<s;i++)Gt.register(t[i],e);else for(var o,a,r=t.split("."),l=_e,i=0,s=r.length;i<s;i++){o=(a=-1!==r[i].indexOf("()"))?r[i].replace("()",""):r[i];var h;t:{h=0;for(var c=l.length;h<c;h++)if(l[h].name===o){h=l[h];break t}h=null}h||(h={name:o,val:{},methodExt:[],propExt:[]},l.push(h)),i===s-1?h.val=e:l=a?h.methodExt:h.propExt}},Gt.registerPlural=Zt=function(t,e,s){Gt.register(t,s),Gt.register(e,function(){var t=s.apply(this,arguments);return t===this?this:t instanceof Gt?t.length?n.isArray(t[0])?new Gt(t.context,t[0]):t[0]:i:t})},Xt("tables()",function(t){var e;if(t){e=Gt;var i=this.context;if("number"==typeof t)t=[i[t]];else var s=n.map(i,function(t){return t.nTable}),t=n(s).filter(t).map(function(){var t=n.inArray(this,s);return i[t]}).toArray();e=new e(t)}else e=this;return e}),Xt("table()",function(t){var t=this.tables(t),e=t.context;return e.length?new Gt(e[0]):t}),Zt("tables().nodes()","table().node()",function(){return this.iterator("table",function(t){return t.nTable},1)}),Zt("tables().body()","table().body()",function(){return this.iterator("table",function(t){return t.nTBody},1)}),Zt("tables().header()","table().header()",function(){return this.iterator("table",function(t){return t.nTHead},1)}),Zt("tables().footer()","table().footer()",function(){return this.iterator("table",function(t){return t.nTFoot},1)}),Zt("tables().containers()","table().container()",function(){return this.iterator("table",function(t){return t.nTableWrapper},1)}),Xt("draw()",function(t){return this.iterator("table",function(e){R(e,!1===t)})}),Xt("page()",function(t){return t===i?this.page.info().page:this.iterator("table",function(e){ct(e,t)})}),Xt("page.info()",function(){if(0===this.context.length)return i;var t=this.context[0],e=t._iDisplayStart,n=t._iDisplayLength,s=t.fnRecordsDisplay(),o=-1===n;return{page:o?0:Math.floor(e/n),pages:o?1:Math.ceil(s/n),start:e,end:t.fnDisplayEnd(),length:n,recordsTotal:t.fnRecordsTotal(),recordsDisplay:s}}),Xt("page.len()",function(t){return t===i?0!==this.context.length?this.context[0]._iDisplayLength:i:this.iterator("table",function(e){rt(e,t)})});var De=function(t,e,i){if("ssp"==jt(t)?R(t,e):(dt(t,!0),W(t,[],function(i){E(t);for(var i=q(t,i),n=0,s=i.length;n<s;n++)_(t,i[n]);R(t,e),dt(t,!1)})),i){var n=new Gt(t);n.one("draw",function(){i(n.ajax.json())})}};Xt("ajax.json()",function(){var t=this.context;if(0<t.length)return t[0].json}),Xt("ajax.params()",function(){var t=this.context;if(0<t.length)return t[0].oAjaxData}),Xt("ajax.reload()",function(t,e){return this.iterator("table",function(i){De(i,!1===e,t)})}),Xt("ajax.url()",function(t){var e=this.context;return t===i?0===e.length?i:(e=e[0],e.ajax?n.isPlainObject(e.ajax)?e.ajax.url:e.ajax:e.sAjaxSource):this.iterator("table",function(e){n.isPlainObject(e.ajax)?e.ajax.url=t:e.ajax=t})}),Xt("ajax.url().load()",function(t,e){return this.iterator("table",function(i){De(i,!1===e,t)})});var Ce=function(t,e){var s,o,a,r,l,h,c=[];for(s=typeof t,t&&"string"!==s&&"function"!==s&&t.length!==i||(t=[t]),a=0,r=t.length;a<r;a++)for(o=t[a]&&t[a].split?t[a].split(","):[t[a]],l=0,h=o.length;l<h;l++)(s=e("string"==typeof o[l]?n.trim(o[l]):o[l]))&&s.length&&c.push.apply(c,s);return c},Se=function(t){return t||(t={}),t.filter&&!t.search&&(t.search=t.filter),{search:t.search||"none",order:t.order||"current",page:t.page||"all"}},Te=function(t){for(var e=0,i=t.length;e<i;e++)if(0<t[e].length)return t[0]=t[e],t.length=1,t.context=[t.context[e]],t;return t.length=0,t},ke=function(t,e){var i,s,o,a=[],r=t.aiDisplay;i=t.aiDisplayMaster;var l=e.search;if(s=e.order,o=e.page,"ssp"==jt(t))return"removed"===l?[]:ue(0,i.length);if("current"==o)for(i=t._iDisplayStart,s=t.fnDisplayEnd();i<s;i++)a.push(r[i]);else if("current"==s||"applied"==s)a="none"==l?i.slice():"applied"==l?r.slice():n.map(i,function(t){return-1===n.inArray(t,r)?t:null});else if("index"==s||"original"==s)for(i=0,s=t.aoData.length;i<s;i++)"none"==l?a.push(i):(o=n.inArray(i,r),(-1===o&&"removed"==l||0<=o&&"applied"==l)&&a.push(i));return a};Xt("rows()",function(t,e){t===i?t="":n.isPlainObject(t)&&(e=t,t="");var e=Se(e),s=this.iterator("table",function(i){var s=e;return Ce(t,function(t){var e=oe(t);if(null!==e&&!s)return[e];var o=ke(i,s);return null!==e&&n.inArray(e,o)!==-1?[e]:t?"function"==typeof t?n.map(o,function(e){var n=i.aoData[e];return t(e,n._aData,n.nTr)?e:null}):(e=de(ce(i.aoData,o,"nTr")),t.nodeName&&n.inArray(t,e)!==-1?[t._DT_RowIndex]:n(e).filter(t).map(function(){return this._DT_RowIndex}).toArray()):o})},1);return s.selector.rows=t,s.selector.opts=e,s}),Xt("rows().nodes()",function(){return this.iterator("row",function(t,e){return t.aoData[e].nTr||i},1)}),Xt("rows().data()",function(){return this.iterator(!0,"rows",function(t,e){return ce(t.aoData,e,"_aData")},1)}),Zt("rows().cache()","row().cache()",function(t){return this.iterator("row",function(e,i){var n=e.aoData[i];return"search"===t?n._aFilterData:n._aSortData},1)}),Zt("rows().invalidate()","row().invalidate()",function(t){return this.iterator("row",function(e,i){I(e,i,t)})}),Zt("rows().indexes()","row().index()",function(){return this.iterator("row",function(t,e){return e},1)}),Zt("rows().remove()","row().remove()",function(){var t=this;return this.iterator("row",function(e,i,s){var o=e.aoData;o.splice(i,1);for(var a=0,r=o.length;a<r;a++)null!==o[a].nTr&&(o[a].nTr._DT_RowIndex=a);n.inArray(i,e.aiDisplay),M(e.aiDisplayMaster,i),M(e.aiDisplay,i),M(t[s],i,!1),$t(e)})}),Xt("rows.add()",function(t){var e=this.iterator("table",function(e){var i,n,s,o=[];for(n=0,s=t.length;n<s;n++)i=t[n],i.nodeName&&"TR"===i.nodeName.toUpperCase()?o.push(w(e,i)[0]):o.push(_(e,i));return o},1),i=this.rows(-1);return i.pop(),i.push.apply(i,e.toArray()),i}),Xt("row()",function(t,e){return Te(this.rows(t,e))}),Xt("row().data()",function(t){var e=this.context;return t===i?e.length&&this.length?e[0].aoData[this[0]]._aData:i:(e[0].aoData[this[0]]._aData=t,I(e[0],this[0],"data"),this)}),Xt("row().node()",function(){var t=this.context;return t.length&&this.length?t[0].aoData[this[0]].nTr||null:null}),Xt("row.add()",function(t){t instanceof n&&t.length&&(t=t[0]);var e=this.iterator("table",function(e){return t.nodeName&&"TR"===t.nodeName.toUpperCase()?w(e,t)[0]:_(e,t)});return this.row(e[0])});var Ee=function(t,e){var n=t.context;n.length&&(n=n[0].aoData[e!==i?e:t[0]],n._details&&(n._details.remove(),n._detailsShow=i,n._details=i))},Me=function(t,e){var i=t.context;if(i.length&&t.length){var n=i[0].aoData[t[0]];if(n._details){(n._detailsShow=e)?n._details.insertAfter(n.nTr):n._details.detach();var s=i[0],o=new Gt(s),a=s.aoData;o.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details"),0<he(a,"_details").length&&(o.on("draw.dt.DT_details",function(t,e){s===e&&o.rows({page:"current"}).eq(0).each(function(t){t=a[t],t._detailsShow&&t._details.insertAfter(t.nTr)})}),o.on("column-visibility.dt.DT_details",function(t,e){if(s===e)for(var i,n=g(e),o=0,r=a.length;o<r;o++)i=a[o],i._details&&i._details.children("td[colspan]").attr("colspan",n)}),o.on("destroy.dt.DT_details",function(t,e){if(s===e)for(var i=0,n=a.length;i<n;i++)a[i]._details&&Ee(o,i)}))}}};Xt("row().child()",function(t,e){var s=this.context;if(t===i)return s.length&&this.length?s[0].aoData[this[0]]._details:i;if(!0===t)this.child.show();else if(!1===t)Ee(this);else if(s.length&&this.length){var o=s[0],s=s[0].aoData[this[0]],a=[],r=function(t,e){if(t.nodeName&&"tr"===t.nodeName.toLowerCase())a.push(t);else{var i=n("<tr><td/></tr>").addClass(e);n("td",i).addClass(e).html(t)[0].colSpan=g(o),a.push(i[0])}};if(n.isArray(t)||t instanceof n)for(var l=0,h=t.length;l<h;l++)r(t[l],e);else r(t,e);s._details&&s._details.remove(),s._details=n(a),s._detailsShow&&s._details.insertAfter(s.nTr)}return this}),Xt(["row().child.show()","row().child().show()"],function(){return Me(this,!0),this}),Xt(["row().child.hide()","row().child().hide()"],function(){return Me(this,!1),this}),Xt(["row().child.remove()","row().child().remove()"],function(){return Ee(this),this}),Xt("row().child.isShown()",function(){var t=this.context;return!(!t.length||!this.length)&&(t[0].aoData[this[0]]._detailsShow||!1)});var Ie=/^(.+):(name|visIdx|visible)$/,Ae=function(t,e,i,n,s){for(var i=[],n=0,o=s.length;n<o;n++)i.push(x(t,s[n],e));return i};Xt("columns()",function(t,e){t===i?t="":n.isPlainObject(t)&&(e=t,t="");var e=Se(e),s=this.iterator("table",function(i){var s=t,o=e,a=i.aoColumns,r=he(a,"sName"),l=he(a,"nTh");return Ce(s,function(t){var e=oe(t);if(""===t)return ue(a.length);if(null!==e)return[e>=0?e:a.length+e];if("function"==typeof t){var s=ke(i,o);return n.map(a,function(e,n){return t(n,Ae(i,n,0,0,s),l[n])?n:null})}var h="string"==typeof t?t.match(Ie):"";if(!h)return n(l).filter(t).map(function(){return n.inArray(this,l)}).toArray();switch(h[2]){case"visIdx":case"visible":if(e=parseInt(h[1],10),e<0){var c=n.map(a,function(t,e){return t.bVisible?e:null});return[c[c.length+e]]}return[p(i,e)];case"name":return n.map(r,function(t,e){return t===h[1]?e:null})}})},1);return s.selector.cols=t,s.selector.opts=e,s}),Zt("columns().header()","column().header()",function(){return this.iterator("column",function(t,e){return t.aoColumns[e].nTh},1)}),Zt("columns().footer()","column().footer()",function(){return this.iterator("column",function(t,e){return t.aoColumns[e].nTf},1)}),Zt("columns().data()","column().data()",function(){return this.iterator("column-rows",Ae,1)}),Zt("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(t,e){return t.aoColumns[e].mData},1)}),Zt("columns().cache()","column().cache()",function(t){return this.iterator("column-rows",function(e,i,n,s,o){return ce(e.aoData,o,"search"===t?"_aFilterData":"_aSortData",i)},1)}),Zt("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(t,e,i,n,s){return ce(t.aoData,s,"anCells",e)},1)}),Zt("columns().visible()","column().visible()",function(t,e){return this.iterator("column",function(s,o){if(t===i)return s.aoColumns[o].bVisible;var a,r,l,h=s.aoColumns,c=h[o],u=s.aoData;if(t!==i&&c.bVisible!==t){if(t){var d=n.inArray(!0,he(h,"bVisible"),o+1);for(a=0,r=u.length;a<r;a++)l=u[a].nTr,h=u[a].anCells,l&&l.insertBefore(h[o],h[d]||null)}else n(he(s.aoData,"anCells",o)).detach();c.bVisible=t,N(s,s.aoHeader),N(s,s.aoFooter),(e===i||e)&&(f(s),(s.oScroll.sX||s.oScroll.sY)&&pt(s)),zt(s,null,"column-visibility",[s,o,t]),At(s)}})}),Zt("columns().indexes()","column().index()",function(t){return this.iterator("column",function(e,i){return"visible"===t?m(e,i):i},1)}),Xt("columns.adjust()",function(){return this.iterator("table",function(t){f(t)},1)}),Xt("column.index()",function(t,e){if(0!==this.context.length){var i=this.context[0];if("fromVisible"===t||"toData"===t)return p(i,e);if("fromData"===t||"toVisible"===t)return m(i,e)}}),Xt("column()",function(t,e){return Te(this.columns(t,e))}),Xt("cells()",function(t,e,s){if(n.isPlainObject(t)&&(typeof t.row!==i?(s=e,e=null):(s=t,t=null)),n.isPlainObject(e)&&(s=e,e=null),null===e||e===i)return this.iterator("table",function(e){var o,a,r,l,h,c,u,d=t,f=Se(s),p=e.aoData,m=ke(e,f),f=de(ce(p,m,"anCells")),g=n([].concat.apply([],f)),v=e.aoColumns.length;return Ce(d,function(t){var s="function"==typeof t;if(null===t||t===i||s){for(a=[],r=0,l=m.length;r<l;r++)for(o=m[r],h=0;h<v;h++)c={row:o,column:h},s?(u=e.aoData[o],t(c,x(e,o,h),u.anCells[h])&&a.push(c)):a.push(c);return a}return n.isPlainObject(t)?[t]:g.filter(t).map(function(t,e){return o=e.parentNode._DT_RowIndex,{row:o,column:n.inArray(e,p[o].anCells)}}).toArray()})});var o,a,r,l,h,c=this.columns(e,s),u=this.rows(t,s),d=this.iterator("table",function(t,e){for(o=[],a=0,r=u[e].length;a<r;a++)for(l=0,h=c[e].length;l<h;l++)o.push({row:u[e][a],column:c[e][l]});return o},1);return n.extend(d.selector,{cols:e,rows:t,opts:s}),d}),Zt("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(t,e,n){return(t=t.aoData[e].anCells)?t[n]:i},1)}),Xt("cells().data()",function(){return this.iterator("cell",function(t,e,i){return x(t,e,i)},1)}),Zt("cells().cache()","cell().cache()",function(t){return t="search"===t?"_aFilterData":"_aSortData",this.iterator("cell",function(e,i,n){return e.aoData[i][t][n]},1)}),Zt("cells().render()","cell().render()",function(t){return this.iterator("cell",function(e,i,n){return x(e,i,n,t)},1)}),Zt("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(t,e,i){return{row:e,column:i,columnVisible:m(t,i)}},1)}),Zt("cells().invalidate()","cell().invalidate()",function(t){return this.iterator("cell",function(e,i,n){I(e,i,t,n)})}),Xt("cell()",function(t,e,i){return Te(this.cells(t,e,i))}),Xt("cell().data()",function(t){var e=this.context,n=this[0];return t===i?e.length&&n.length?x(e[0],n[0].row,n[0].column):i:(D(e[0],n[0].row,n[0].column,t),I(e[0],n[0].row,"data",n[0].column),this)}),Xt("order()",function(t,e){var s=this.context;return t===i?0!==s.length?s[0].aaSorting:i:("number"==typeof t?t=[[t,e]]:n.isArray(t[0])||(t=Array.prototype.slice.call(arguments)),this.iterator("table",function(e){e.aaSorting=t.slice()}))}),Xt("order.listener()",function(t,e,i){return this.iterator("table",function(n){Et(n,t,e,i)})}),Xt(["columns().order()","column().order()"],function(t){var e=this;return this.iterator("table",function(i,s){var o=[];n.each(e[s],function(e,i){o.push([i,t])}),i.aaSorting=o})}),Xt("search()",function(t,e,s,o){var a=this.context;return t===i?0!==a.length?a[0].oPreviousSearch.sSearch:i:this.iterator("table",function(i){i.oFeatures.bFilter&&V(i,n.extend({},i.oPreviousSearch,{sSearch:t+"",bRegex:null!==e&&e,bSmart:null===s||s,bCaseInsensitive:null===o||o}),1)})}),Zt("columns().search()","column().search()",function(t,e,s,o){return this.iterator("column",function(a,r){var l=a.aoPreSearchCols;return t===i?l[r].sSearch:void(a.oFeatures.bFilter&&(n.extend(l[r],{sSearch:t+"",bRegex:null!==e&&e,bSmart:null===s||s,bCaseInsensitive:null===o||o}),V(a,a.oPreviousSearch,1)))})}),Xt("state()",function(){return this.context.length?this.context[0].oSavedState:null}),Xt("state.clear()",function(){return this.iterator("table",function(t){t.fnStateSaveCallback.call(t.oInstance,t,{})})}),Xt("state.loaded()",function(){return this.context.length?this.context[0].oLoadedState:null}),Xt("state.save()",function(){return this.iterator("table",function(t){At(t)})}),Ut.versionCheck=Ut.fnVersionCheck=function(t){for(var e,i,n=Ut.version.split("."),t=t.split("."),s=0,o=t.length;s<o;s++)if(e=parseInt(n[s],10)||0,i=parseInt(t[s],10)||0,e!==i)return e>i;return!0},Ut.isDataTable=Ut.fnIsDataTable=function(t){var e=n(t).get(0),i=!1;return n.each(Ut.settings,function(t,s){s.nTable!==e&&n("table",s.nScrollHead)[0]!==e&&n("table",s.nScrollFoot)[0]!==e||(i=!0)}),i},Ut.tables=Ut.fnTables=function(t){return n.map(Ut.settings,function(e){if(!t||t&&n(e.nTable).is(":visible"))return e.nTable})},Ut.util={throttle:vt,escapeRegex:J},Ut.camelToHungarian=o,Xt("$()",function(t,e){var i=this.rows(e).nodes(),i=n(i);return n([].concat(i.filter(t).toArray(),i.find(t).toArray()))}),n.each(["on","one","off"],function(t,e){Xt(e+"()",function(){var t=Array.prototype.slice.call(arguments);t[0].match(/\.dt\b/)||(t[0]+=".dt");var i=n(this.tables().nodes());return i[e].apply(i,t),this})}),Xt("clear()",function(){return this.iterator("table",function(t){E(t)})}),Xt("settings()",function(){return new Gt(this.context,this.context)}),Xt("data()",function(){return this.iterator("table",function(t){return he(t.aoData,"_aData")}).flatten()}),Xt("destroy()",function(e){return e=e||!1,this.iterator("table",function(i){var s,o=i.nTableWrapper.parentNode,a=i.oClasses,r=i.nTable,l=i.nTBody,h=i.nTHead,c=i.nTFoot,u=n(r),l=n(l),d=n(i.nTableWrapper),f=n.map(i.aoData,function(t){return t.nTr});i.bDestroying=!0,zt(i,"aoDestroyCallback","destroy",[i]),e||new Gt(i).columns().visible(!0),d.unbind(".DT").find(":not(tbody *)").unbind(".DT"),n(t).unbind(".DT-"+i.sInstance),r!=h.parentNode&&(u.children("thead").detach(),u.append(h)),c&&r!=c.parentNode&&(u.children("tfoot").detach(),u.append(c)),u.detach(),d.detach(),i.aaSorting=[],i.aaSortingFixed=[],Mt(i),n(f).removeClass(i.asStripeClasses.join(" ")),n("th, td",h).removeClass(a.sSortable+" "+a.sSortableAsc+" "+a.sSortableDesc+" "+a.sSortableNone),i.bJUI&&(n("th span."+a.sSortIcon+", td span."+a.sSortIcon,h).detach(),n("th, td",h).each(function(){var t=n("div."+a.sSortJUIWrapper,this);n(this).append(t.contents()),t.detach()})),!e&&o&&o.insertBefore(r,i.nTableReinsertBefore),l.children().detach(),l.append(f),u.css("width",i.sDestroyWidth).removeClass(a.sTable),(s=i.asDestroyStripes.length)&&l.children().each(function(t){n(this).addClass(i.asDestroyStripes[t%s])}),o=n.inArray(i,Ut.settings),-1!==o&&Ut.settings.splice(o,1)})}),Ut.version="1.10.5",Ut.settings=[],Ut.models={},Ut.models.oSearch={bCaseInsensitive:!0,sSearch:"",bRegex:!1,bSmart:!0},Ut.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null},Ut.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,sTitle:null,sType:null,sWidth:null,sWidthOrig:null},Ut.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bJQueryUI:!1,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,fnFormatNumber:function(t){return t.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(t){try{return JSON.parse((-1===t.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+t.sInstance+"_"+location.pathname))}catch(e){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(t,e){try{(-1===t.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+t.sInstance+"_"+location.pathname,JSON.stringify(e))}catch(i){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show _MENU_ entries",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:n.extend({},Ut.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",renderer:null},s(Ut.defaults),Ut.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null},s(Ut.defaults.column),Ut.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aoColumns:[],aoHeader:[],aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:i,oAjaxData:i,fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,bJUI:null,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==jt(this)?1*this._iRecordsTotal:this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==jt(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var t=this._iDisplayLength,e=this._iDisplayStart,i=e+t,n=this.aiDisplay.length,s=this.oFeatures,o=s.bPaginate;return s.bServerSide?!1===o||-1===t?e+n:Math.min(e+t,this._iRecordsDisplay):!o||i>n||-1===t?n:i},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{}},Ut.ext=Vt={buttons:{},classes:{},errMode:"alert",feature:[],search:[],internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:Ut.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:Ut.version},n.extend(Vt,{afnFiltering:Vt.search,aTypes:Vt.type.detect,ofnSearch:Vt.type.search,oSort:Vt.type.order,afnSortData:Vt.order,aoFeatures:Vt.feature,oApi:Vt.internal,oStdClasses:Vt.classes,oPagination:Vt.pager}),n.extend(Ut.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",sJUIHeader:"",sJUIFooter:""});var Pe="",Pe="",He=Pe+"ui-state-default",Oe=Pe+"css_right ui-icon ui-icon-",Ne=Pe+"fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix";n.extend(Ut.ext.oJUIClasses,Ut.ext.classes,{sPageButton:"fg-button ui-button "+He,sPageButtonActive:"ui-state-disabled",sPageButtonDisabled:"ui-state-disabled",sPaging:"dataTables_paginate fg-buttonset ui-buttonset fg-buttonset-multi ui-buttonset-multi paging_",sSortAsc:He+" sorting_asc",sSortDesc:He+" sorting_desc",sSortable:He+" sorting",sSortableAsc:He+" sorting_asc_disabled",sSortableDesc:He+" sorting_desc_disabled",sSortableNone:He+" sorting_disabled",sSortJUIAsc:Oe+"triangle-1-n",sSortJUIDesc:Oe+"triangle-1-s",sSortJUI:Oe+"carat-2-n-s",sSortJUIAscAllowed:Oe+"carat-1-n",sSortJUIDescAllowed:Oe+"carat-1-s",sSortJUIWrapper:"DataTables_sort_wrapper",sSortIcon:"DataTables_sort_icon",sScrollHead:"dataTables_scrollHead "+He,sScrollFoot:"dataTables_scrollFoot "+He,sHeaderTH:He,sFooterTH:He,sJUIHeader:Ne+" ui-corner-tl ui-corner-tr",sJUIFooter:Ne+" ui-corner-bl ui-corner-br"});var Le=Ut.ext.pager;n.extend(Le,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},simple_numbers:function(t,e){return["previous",Yt(t,e),"next"]},full_numbers:function(t,e){return["first","previous",Yt(t,e),"next","last"]},_numbers:Yt,numbers_length:7}),n.extend(!0,Ut.ext.renderer,{pageButton:{_:function(t,i,s,o,a,r){var l,h,c,u=t.oClasses,d=t.oLanguage.oPaginate,f=0,p=function(e,i){var o,c,m,g,v=function(e){ct(t,e.data.action,!0)};for(o=0,c=i.length;o<c;o++)if(g=i[o],n.isArray(g))m=n("<"+(g.DT_el||"div")+"/>").appendTo(e),p(m,g);else{switch(h=l="",g){case"ellipsis":e.append("<span>&hellip;</span>");break;case"first":l=d.sFirst,h=g+(a>0?"":" "+u.sPageButtonDisabled);break;case"previous":l=d.sPrevious,h=g+(a>0?"":" "+u.sPageButtonDisabled);break;case"next":l=d.sNext,h=g+(a<r-1?"":" "+u.sPageButtonDisabled);break;case"last":l=d.sLast,h=g+(a<r-1?"":" "+u.sPageButtonDisabled);break;default:l=g+1,h=a===g?u.sPageButtonActive:""}l&&(m=n("<a>",{"class":u.sPageButton+" "+h,"aria-controls":t.sTableId,"data-dt-idx":f,tabindex:t.iTabIndex,id:0===s&&"string"==typeof g?t.sTableId+"_"+g:null}).html(l).appendTo(e),Rt(m,{action:g},v),f++)}};try{c=n(e.activeElement).data("dt-idx")}catch(m){}p(n(i).empty(),o),c&&n(i).find("[data-dt-idx="+c+"]").focus()}}}),n.extend(Ut.ext.type.detect,[function(t,e){var i=e.oLanguage.sDecimal;return re(t,i)?"num"+i:null},function(t){if(t&&!(t instanceof Date)&&(!te.test(t)||!ee.test(t)))return null;var e=Date.parse(t);return null!==e&&!isNaN(e)||se(t)?"date":null},function(t,e){var i=e.oLanguage.sDecimal;return re(t,i,!0)?"num-fmt"+i:null},function(t,e){var i=e.oLanguage.sDecimal;return le(t,i)?"html-num"+i:null},function(t,e){var i=e.oLanguage.sDecimal;return le(t,i,!0)?"html-num-fmt"+i:null},function(t){return se(t)||"string"==typeof t&&-1!==t.indexOf("<")?"html":null}]),n.extend(Ut.ext.type.search,{html:function(t){return se(t)?t:"string"==typeof t?t.replace(Jt," ").replace(Qt,""):""},string:function(t){return se(t)?t:"string"==typeof t?t.replace(Jt," "):t}});var Re=function(t,e,i,n){return 0===t||t&&"-"!==t?(e&&(t=ae(t,e)),t.replace&&(i&&(t=t.replace(i,"")),n&&(t=t.replace(n,""))),1*t):-(1/0)};return n.extend(Vt.type.order,{"date-pre":function(t){return Date.parse(t)||0},"html-pre":function(t){return se(t)?"":t.replace?t.replace(/<.*?>/g,"").toLowerCase():t+""},"string-pre":function(t){return se(t)?"":"string"==typeof t?t.toLowerCase():t.toString?t.toString():""},"string-asc":function(t,e){return t<e?-1:t>e?1:0},"string-desc":function(t,e){return t<e?1:t>e?-1:0}}),Bt(""),n.extend(!0,Ut.ext.renderer,{header:{_:function(t,e,i,s){n(t.nTable).on("order.dt.DT",function(n,o,a,r){t===o&&(n=i.idx,e.removeClass(i.sSortingClass+" "+s.sSortAsc+" "+s.sSortDesc).addClass("asc"==r[n]?s.sSortAsc:"desc"==r[n]?s.sSortDesc:i.sSortingClass))})},jqueryui:function(t,e,i,s){n("<div/>").addClass(s.sSortJUIWrapper).append(e.contents()).append(n("<span/>").addClass(s.sSortIcon+" "+i.sSortingClassJUI)).appendTo(e),n(t.nTable).on("order.dt.DT",function(n,o,a,r){t===o&&(n=i.idx,e.removeClass(s.sSortAsc+" "+s.sSortDesc).addClass("asc"==r[n]?s.sSortAsc:"desc"==r[n]?s.sSortDesc:i.sSortingClass),e.find("span."+s.sSortIcon).removeClass(s.sSortJUIAsc+" "+s.sSortJUIDesc+" "+s.sSortJUI+" "+s.sSortJUIAscAllowed+" "+s.sSortJUIDescAllowed).addClass("asc"==r[n]?s.sSortJUIAsc:"desc"==r[n]?s.sSortJUIDesc:i.sSortingClassJUI))})}}}),Ut.render={number:function(t,e,i,n){
return{display:function(s){var o=0>s?"-":"",s=Math.abs(parseFloat(s)),a=parseInt(s,10),s=i?e+(s-a).toFixed(i).substring(2):"";return o+(n||"")+a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,t)+s}}}},n.extend(Ut.ext.internal,{_fnExternApiFunc:qt,_fnBuildAjax:W,_fnAjaxUpdate:j,_fnAjaxParameters:Y,_fnAjaxUpdateDraw:B,_fnAjaxDataSrc:q,_fnAddColumn:u,_fnColumnOptions:d,_fnAdjustColumnSizing:f,_fnVisibleToColumnIndex:p,_fnColumnIndexToVisible:m,_fnVisbleColumns:g,_fnGetColumns:v,_fnColumnTypes:b,_fnApplyColumnDefs:y,_fnHungarianMap:s,_fnCamelToHungarian:o,_fnLanguageCompat:a,_fnBrowserDetect:h,_fnAddData:_,_fnAddTr:w,_fnNodeToDataIndex:function(t,e){return e._DT_RowIndex!==i?e._DT_RowIndex:null},_fnNodeToColumnIndex:function(t,e,i){return n.inArray(i,t.aoData[e].anCells)},_fnGetCellData:x,_fnSetCellData:D,_fnSplitObjNotation:C,_fnGetObjectDataFn:S,_fnSetObjectDataFn:T,_fnGetDataMaster:k,_fnClearTable:E,_fnDeleteIndex:M,_fnInvalidate:I,_fnGetRowElements:A,_fnCreateTr:P,_fnBuildHead:O,_fnDrawHead:N,_fnDraw:L,_fnReDraw:R,_fnAddOptionsHtml:F,_fnDetectHeader:z,_fnGetUniqueThs:$,_fnFeatureHtmlFilter:U,_fnFilterComplete:V,_fnFilterCustom:G,_fnFilterColumn:X,_fnFilter:Z,_fnFilterCreateSearch:K,_fnEscapeRegex:J,_fnFilterData:Q,_fnFeatureHtmlInfo:it,_fnUpdateInfo:nt,_fnInfoMacros:st,_fnInitialise:ot,_fnInitComplete:at,_fnLengthChange:rt,_fnFeatureHtmlLength:lt,_fnFeatureHtmlPaginate:ht,_fnPageChange:ct,_fnFeatureHtmlProcessing:ut,_fnProcessingDisplay:dt,_fnFeatureHtmlTable:ft,_fnScrollDraw:pt,_fnApplyToChildren:mt,_fnCalculateColumnWidths:gt,_fnThrottle:vt,_fnConvertToWidth:bt,_fnScrollingWidthAdjust:yt,_fnGetWidestNode:_t,_fnGetMaxLenString:wt,_fnStringToCss:xt,_fnScrollBarWidth:Dt,_fnSortFlatten:Ct,_fnSort:St,_fnSortAria:Tt,_fnSortListener:kt,_fnSortAttachListener:Et,_fnSortingClasses:Mt,_fnSortData:It,_fnSaveState:At,_fnLoadState:Pt,_fnSettingsFromNode:Ht,_fnLog:Ot,_fnMap:Nt,_fnBindAction:Rt,_fnCallbackReg:Ft,_fnCallbackFire:zt,_fnLengthOverflow:$t,_fnRenderer:Wt,_fnDataSource:jt,_fnRowAttributes:H,_fnCalculateEnd:function(){}}),n.fn.dataTable=Ut,n.fn.dataTableSettings=Ut.settings,n.fn.dataTableExt=Ut.ext,n.fn.DataTable=function(t){return n(this).dataTable(t).api()},n.each(Ut,function(t,e){n.fn.DataTable[t]=e}),n.fn.dataTable};"function"==typeof define&&define.amd?define("datatables",["jquery"],n):"object"==typeof exports?module.exports=n(require("jquery")):jQuery&&!jQuery.fn.dataTable&&n(jQuery)}(window,document),function(t,e){if("function"==typeof define&&define.amd)define(["moment","jquery","exports"],function(i,n,s){t.daterangepicker=e(t,s,i,n)});else if("undefined"!=typeof exports){var i,n=require("moment");try{i=require("jquery")}catch(s){if(i=window.jQuery,!i)throw new Error("jQuery dependency not found")}e(t,exports,n,i)}else t.daterangepicker=e(t,{},t.moment,t.jQuery||t.Zepto||t.ender||t.$)}(this,function(t,e,i,n){var s=function(t,e,i){this.parentEl="body",this.element=n(t),this.isShowing=!1;var s='<div class="daterangepicker dropdown-menu"><div class="calendar first left"></div><div class="calendar second right"></div><div class="ranges"><div class="range_inputs"><div class="daterangepicker_start_input"><label for="daterangepicker_start"></label><input class="input-mini" type="text" name="daterangepicker_start" value="" /></div><div class="daterangepicker_end_input"><label for="daterangepicker_end"></label><input class="input-mini" type="text" name="daterangepicker_end" value="" /></div><button class="applyBtn" disabled="disabled"></button>&nbsp;<button class="cancelBtn"></button></div></div></div>';"object"==typeof e&&null!==e||(e={}),this.parentEl=n("object"==typeof e&&e.parentEl&&n(e.parentEl).length?e.parentEl:this.parentEl),this.container=n(s).appendTo(this.parentEl),this.setOptions(e,i);var o=this.container;n.each(this.buttonClasses,function(t,e){o.find("button").addClass(e)}),this.container.find(".daterangepicker_start_input label").html(this.locale.fromLabel),this.container.find(".daterangepicker_end_input label").html(this.locale.toLabel),this.applyClass.length&&this.container.find(".applyBtn").addClass(this.applyClass),this.cancelClass.length&&this.container.find(".cancelBtn").addClass(this.cancelClass),this.container.find(".applyBtn").html(this.locale.applyLabel),this.container.find(".cancelBtn").html(this.locale.cancelLabel),this.container.find(".calendar").on("click.daterangepicker",".prev",n.proxy(this.clickPrev,this)).on("click.daterangepicker",".next",n.proxy(this.clickNext,this)).on("click.daterangepicker","td.available",n.proxy(this.clickDate,this)).on("mouseenter.daterangepicker","td.available",n.proxy(this.hoverDate,this)).on("mouseleave.daterangepicker","td.available",n.proxy(this.updateFormInputs,this)).on("change.daterangepicker","select.yearselect",n.proxy(this.updateMonthYear,this)).on("change.daterangepicker","select.monthselect",n.proxy(this.updateMonthYear,this)).on("change.daterangepicker","select.hourselect,select.minuteselect,select.secondselect,select.ampmselect",n.proxy(this.updateTime,this)),this.container.find(".ranges").on("click.daterangepicker","button.applyBtn",n.proxy(this.clickApply,this)).on("click.daterangepicker","button.cancelBtn",n.proxy(this.clickCancel,this)).on("click.daterangepicker",".daterangepicker_start_input,.daterangepicker_end_input",n.proxy(this.showCalendars,this)).on("change.daterangepicker",".daterangepicker_start_input,.daterangepicker_end_input",n.proxy(this.inputsChanged,this)).on("keydown.daterangepicker",".daterangepicker_start_input,.daterangepicker_end_input",n.proxy(this.inputsKeydown,this)).on("click.daterangepicker","li",n.proxy(this.clickRange,this)).on("mouseenter.daterangepicker","li",n.proxy(this.enterRange,this)).on("mouseleave.daterangepicker","li",n.proxy(this.updateFormInputs,this)),this.element.is("input")?this.element.on({"click.daterangepicker":n.proxy(this.show,this),"focus.daterangepicker":n.proxy(this.show,this),"keyup.daterangepicker":n.proxy(this.updateFromControl,this)}):this.element.on("click.daterangepicker",n.proxy(this.toggle,this))};s.prototype={constructor:s,setOptions:function(t,e){if(this.startDate=i().startOf("day"),this.endDate=i().endOf("day"),this.timeZone=i().utcOffset(),this.minDate=!1,this.maxDate=!1,this.dateLimit=!1,this.showDropdowns=!1,this.showWeekNumbers=!1,this.timePicker=!1,this.timePickerSeconds=!1,this.timePickerIncrement=30,this.timePicker12Hour=!0,this.singleDatePicker=!1,this.ranges={},this.opens="right",this.element.hasClass("pull-right")&&(this.opens="left"),this.buttonClasses=["btn","btn-small btn-sm"],this.applyClass="btn-success",this.cancelClass="btn-default",this.format="MM/DD/YYYY",this.separator=" - ",this.locale={applyLabel:"Apply",cancelLabel:"Cancel",fromLabel:"From",toLabel:"To",weekLabel:"W",customRangeLabel:"Custom Range",daysOfWeek:i.weekdaysMin(),monthNames:i.monthsShort(),firstDay:i.localeData()._week.dow},this.cb=function(){},"string"==typeof t.format&&(this.format=t.format),"string"==typeof t.separator&&(this.separator=t.separator),"string"==typeof t.startDate&&(this.startDate=i(t.startDate,this.format)),"string"==typeof t.endDate&&(this.endDate=i(t.endDate,this.format)),"string"==typeof t.minDate&&(this.minDate=i(t.minDate,this.format)),"string"==typeof t.maxDate&&(this.maxDate=i(t.maxDate,this.format)),"object"==typeof t.startDate&&(this.startDate=i(t.startDate)),"object"==typeof t.endDate&&(this.endDate=i(t.endDate)),"object"==typeof t.minDate&&(this.minDate=i(t.minDate)),"object"==typeof t.maxDate&&(this.maxDate=i(t.maxDate)),"string"==typeof t.applyClass&&(this.applyClass=t.applyClass),"string"==typeof t.cancelClass&&(this.cancelClass=t.cancelClass),"object"==typeof t.dateLimit&&(this.dateLimit=t.dateLimit),"object"==typeof t.locale&&("object"==typeof t.locale.daysOfWeek&&(this.locale.daysOfWeek=t.locale.daysOfWeek.slice()),"object"==typeof t.locale.monthNames&&(this.locale.monthNames=t.locale.monthNames.slice()),"number"==typeof t.locale.firstDay&&(this.locale.firstDay=t.locale.firstDay),"string"==typeof t.locale.applyLabel&&(this.locale.applyLabel=t.locale.applyLabel),"string"==typeof t.locale.cancelLabel&&(this.locale.cancelLabel=t.locale.cancelLabel),"string"==typeof t.locale.fromLabel&&(this.locale.fromLabel=t.locale.fromLabel),"string"==typeof t.locale.toLabel&&(this.locale.toLabel=t.locale.toLabel),"string"==typeof t.locale.weekLabel&&(this.locale.weekLabel=t.locale.weekLabel),"string"==typeof t.locale.customRangeLabel&&(this.locale.customRangeLabel=t.locale.customRangeLabel)),"string"==typeof t.opens&&(this.opens=t.opens),"boolean"==typeof t.showWeekNumbers&&(this.showWeekNumbers=t.showWeekNumbers),"string"==typeof t.buttonClasses&&(this.buttonClasses=[t.buttonClasses]),"object"==typeof t.buttonClasses&&(this.buttonClasses=t.buttonClasses),"boolean"==typeof t.showDropdowns&&(this.showDropdowns=t.showDropdowns),"boolean"==typeof t.singleDatePicker&&(this.singleDatePicker=t.singleDatePicker,this.singleDatePicker&&(this.endDate=this.startDate.clone())),"boolean"==typeof t.timePicker&&(this.timePicker=t.timePicker),"boolean"==typeof t.timePickerSeconds&&(this.timePickerSeconds=t.timePickerSeconds),"number"==typeof t.timePickerIncrement&&(this.timePickerIncrement=t.timePickerIncrement),"boolean"==typeof t.timePicker12Hour&&(this.timePicker12Hour=t.timePicker12Hour),0!=this.locale.firstDay)for(var s=this.locale.firstDay;s>0;)this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()),s--;var o,a,r;if("undefined"==typeof t.startDate&&"undefined"==typeof t.endDate&&n(this.element).is("input[type=text]")){var l=n(this.element).val(),h=l.split(this.separator);o=a=null,2==h.length?(o=i(h[0],this.format),a=i(h[1],this.format)):this.singleDatePicker&&""!==l&&(o=i(l,this.format),a=i(l,this.format)),null!==o&&null!==a&&(this.startDate=o,this.endDate=a)}if("string"==typeof t.timeZone||"number"==typeof t.timeZone?(this.timeZone=t.timeZone,this.startDate.utcOffset(this.timeZone),this.endDate.utcOffset(this.timeZone)):this.timeZone=i(this.startDate).utcOffset(),"object"==typeof t.ranges){for(r in t.ranges)o="string"==typeof t.ranges[r][0]?i(t.ranges[r][0],this.format):i(t.ranges[r][0]),a="string"==typeof t.ranges[r][1]?i(t.ranges[r][1],this.format):i(t.ranges[r][1]),this.minDate&&o.isBefore(this.minDate)&&(o=i(this.minDate)),this.maxDate&&a.isAfter(this.maxDate)&&(a=i(this.maxDate)),this.minDate&&a.isBefore(this.minDate)||this.maxDate&&o.isAfter(this.maxDate)||(this.ranges[r]=[o,a]);var c="<ul>";for(r in this.ranges)c+="<li>"+r+"</li>";c+="<li>"+this.locale.customRangeLabel+"</li>",c+="</ul>",this.container.find(".ranges ul").remove(),this.container.find(".ranges").prepend(c)}if("function"==typeof e&&(this.cb=e),this.timePicker||(this.startDate=this.startDate.startOf("day"),this.endDate=this.endDate.endOf("day")),this.singleDatePicker?(this.opens="right",this.container.addClass("single"),this.container.find(".calendar.right").show(),this.container.find(".calendar.left").hide(),this.timePicker?this.container.find(".ranges .daterangepicker_start_input, .ranges .daterangepicker_end_input").hide():this.container.find(".ranges").hide(),this.container.find(".calendar.right").hasClass("single")||this.container.find(".calendar.right").addClass("single")):(this.container.removeClass("single"),this.container.find(".calendar.right").removeClass("single"),this.container.find(".ranges").show()),this.oldStartDate=this.startDate.clone(),this.oldEndDate=this.endDate.clone(),this.oldChosenLabel=this.chosenLabel,this.leftCalendar={month:i([this.startDate.year(),this.startDate.month(),1,this.startDate.hour(),this.startDate.minute(),this.startDate.second()]),calendar:[]},this.rightCalendar={month:i([this.endDate.year(),this.endDate.month(),1,this.endDate.hour(),this.endDate.minute(),this.endDate.second()]),calendar:[]},"right"==this.opens||"center"==this.opens){var u=this.container.find(".calendar.first"),d=this.container.find(".calendar.second");d.hasClass("single")&&(d.removeClass("single"),u.addClass("single")),u.removeClass("left").addClass("right"),d.removeClass("right").addClass("left"),this.singleDatePicker&&(u.show(),d.hide())}"undefined"!=typeof t.ranges||this.singleDatePicker||this.container.addClass("show-calendar"),this.container.addClass("opens"+this.opens),this.updateView(),this.updateCalendars()},setStartDate:function(t){"string"==typeof t&&(this.startDate=i(t,this.format).utcOffset(this.timeZone)),"object"==typeof t&&(this.startDate=i(t)),this.timePicker||(this.startDate=this.startDate.startOf("day")),this.oldStartDate=this.startDate.clone(),this.updateView(),this.updateCalendars(),this.updateInputText()},setEndDate:function(t){"string"==typeof t&&(this.endDate=i(t,this.format).utcOffset(this.timeZone)),"object"==typeof t&&(this.endDate=i(t)),this.timePicker||(this.endDate=this.endDate.endOf("day")),this.oldEndDate=this.endDate.clone(),this.updateView(),this.updateCalendars(),this.updateInputText()},updateView:function(){this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year()).hour(this.startDate.hour()).minute(this.startDate.minute()),this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year()).hour(this.endDate.hour()).minute(this.endDate.minute()),this.updateFormInputs()},updateFormInputs:function(){this.container.find("input[name=daterangepicker_start]").val(this.startDate.format(this.format)),this.container.find("input[name=daterangepicker_end]").val(this.endDate.format(this.format)),this.startDate.isSame(this.endDate)||this.startDate.isBefore(this.endDate)?this.container.find("button.applyBtn").removeAttr("disabled"):this.container.find("button.applyBtn").attr("disabled","disabled")},updateFromControl:function(){if(this.element.is("input")&&this.element.val().length){var t=this.element.val().split(this.separator),e=null,n=null;2===t.length&&(e=i(t[0],this.format).utcOffset(this.timeZone),n=i(t[1],this.format).utcOffset(this.timeZone)),(this.singleDatePicker||null===e||null===n)&&(e=i(this.element.val(),this.format).utcOffset(this.timeZone),n=e),n.isBefore(e)||(this.oldStartDate=this.startDate.clone(),this.oldEndDate=this.endDate.clone(),this.startDate=e,this.endDate=n,this.startDate.isSame(this.oldStartDate)&&this.endDate.isSame(this.oldEndDate)||this.notify(),this.updateCalendars())}},notify:function(){this.updateView(),this.cb(this.startDate,this.endDate,this.chosenLabel)},move:function(){var t={top:0,left:0},e=n(window).width();this.parentEl.is("body")||(t={top:this.parentEl.offset().top-this.parentEl.scrollTop(),left:this.parentEl.offset().left-this.parentEl.scrollLeft()},e=this.parentEl[0].clientWidth+this.parentEl.offset().left),"left"==this.opens?(this.container.css({top:this.element.offset().top+this.element.outerHeight()-t.top,right:e-this.element.offset().left-this.element.outerWidth(),left:"auto"}),this.container.offset().left<0&&this.container.css({right:"auto",left:9})):"center"==this.opens?(this.container.css({top:this.element.offset().top+this.element.outerHeight()-t.top,left:this.element.offset().left-t.left+this.element.outerWidth()/2-this.container.outerWidth()/2,right:"auto"}),this.container.offset().left<0&&this.container.css({right:"auto",left:9})):(this.container.css({top:this.element.offset().top+this.element.outerHeight()-t.top,left:this.element.offset().left-t.left,right:"auto"}),this.container.offset().left+this.container.outerWidth()>n(window).width()&&this.container.css({left:"auto",right:0}))},toggle:function(t){this.element.hasClass("active")?this.hide():this.show()},show:function(t){this.isShowing||(this.element.addClass("active"),this.container.show(),this.move(),this._outsideClickProxy=n.proxy(function(t){this.outsideClick(t)},this),n(document).on("mousedown.daterangepicker",this._outsideClickProxy).on("touchend.daterangepicker",this._outsideClickProxy).on("click.daterangepicker","[data-toggle=dropdown]",this._outsideClickProxy).on("focusin.daterangepicker",this._outsideClickProxy),this.isShowing=!0,this.element.trigger("show.daterangepicker",this))},outsideClick:function(t){var e=n(t.target);"focusin"==t.type||e.closest(this.element).length||e.closest(this.container).length||e.closest(".calendar-date").length||this.hide()},hide:function(t){this.isShowing&&(n(document).off(".daterangepicker"),this.element.removeClass("active"),this.container.hide(),this.startDate.isSame(this.oldStartDate)&&this.endDate.isSame(this.oldEndDate)||this.notify(),this.oldStartDate=this.startDate.clone(),this.oldEndDate=this.endDate.clone(),this.isShowing=!1,this.element.trigger("hide.daterangepicker",this))},enterRange:function(t){var e=t.target.innerHTML;if(e==this.locale.customRangeLabel)this.updateView();else{var i=this.ranges[e];this.container.find("input[name=daterangepicker_start]").val(i[0].format(this.format)),this.container.find("input[name=daterangepicker_end]").val(i[1].format(this.format))}},showCalendars:function(){this.container.addClass("show-calendar"),this.move(),this.element.trigger("showCalendar.daterangepicker",this)},hideCalendars:function(){this.container.removeClass("show-calendar"),this.element.trigger("hideCalendar.daterangepicker",this)},inputsChanged:function(t){var e=n(t.target),s=i(e.val(),this.format);if(s.isValid()){var o,a;"daterangepicker_start"===e.attr("name")?(o=!1!==this.minDate&&s.isBefore(this.minDate)?this.minDate:s,a=this.endDate):(o=this.startDate,a=!1!==this.maxDate&&s.isAfter(this.maxDate)?this.maxDate:s),this.setCustomDates(o,a)}},inputsKeydown:function(t){13===t.keyCode&&(this.inputsChanged(t),this.notify())},updateInputText:function(){this.element.is("input")&&!this.singleDatePicker?(this.element.val(this.startDate.format(this.format)+this.separator+this.endDate.format(this.format)),this.element.trigger("change")):this.element.is("input")&&(this.element.val(this.endDate.format(this.format)),this.element.trigger("change"))},clickRange:function(t){var e=t.target.innerHTML;if(this.chosenLabel=e,e==this.locale.customRangeLabel)this.showCalendars();else{var i=this.ranges[e];this.startDate=i[0],this.endDate=i[1],this.timePicker||(this.startDate.startOf("day"),this.endDate.endOf("day")),this.leftCalendar.month.month(this.startDate.month()).year(this.startDate.year()).hour(this.startDate.hour()).minute(this.startDate.minute()),this.rightCalendar.month.month(this.endDate.month()).year(this.endDate.year()).hour(this.endDate.hour()).minute(this.endDate.minute()),this.updateCalendars(),this.updateInputText(),this.hideCalendars(),this.hide(),this.element.trigger("apply.daterangepicker",this)}},clickPrev:function(t){var e=n(t.target).parents(".calendar");e.hasClass("left")?this.leftCalendar.month.subtract(1,"month"):this.rightCalendar.month.subtract(1,"month"),this.updateCalendars()},clickNext:function(t){var e=n(t.target).parents(".calendar");e.hasClass("left")?this.leftCalendar.month.add(1,"month"):this.rightCalendar.month.add(1,"month"),this.updateCalendars()},hoverDate:function(t){var e=n(t.target).attr("data-title"),i=e.substr(1,1),s=e.substr(3,1),o=n(t.target).parents(".calendar");o.hasClass("left")?this.container.find("input[name=daterangepicker_start]").val(this.leftCalendar.calendar[i][s].format(this.format)):this.container.find("input[name=daterangepicker_end]").val(this.rightCalendar.calendar[i][s].format(this.format))},setCustomDates:function(t,e){if(this.chosenLabel=this.locale.customRangeLabel,t.isAfter(e)){var n=this.endDate.diff(this.startDate);e=i(t).add(n,"ms"),this.maxDate&&e.isAfter(this.maxDate)&&(e=this.maxDate.clone())}this.startDate=t,this.endDate=e,this.updateView(),this.updateCalendars()},clickDate:function(t){var e,s,o=n(t.target).attr("data-title"),a=o.substr(1,1),r=o.substr(3,1),l=n(t.target).parents(".calendar");if(l.hasClass("left")){if(e=this.leftCalendar.calendar[a][r],s=this.endDate,"object"==typeof this.dateLimit){var h=i(e).add(this.dateLimit).startOf("day");s.isAfter(h)&&(s=h)}}else if(e=this.startDate,s=this.rightCalendar.calendar[a][r],"object"==typeof this.dateLimit){var c=i(s).subtract(this.dateLimit).startOf("day");e.isBefore(c)&&(e=c)}this.singleDatePicker&&l.hasClass("left")?s=e.clone():this.singleDatePicker&&l.hasClass("right")&&(e=s.clone()),l.find("td").removeClass("active"),n(t.target).addClass("active"),this.setCustomDates(e,s),this.timePicker||s.endOf("day"),this.singleDatePicker&&!this.timePicker&&this.clickApply()},clickApply:function(t){this.updateInputText(),this.hide(),this.element.trigger("apply.daterangepicker",this)},clickCancel:function(t){this.startDate=this.oldStartDate,this.endDate=this.oldEndDate,this.chosenLabel=this.oldChosenLabel,this.updateView(),this.updateCalendars(),this.hide(),this.element.trigger("cancel.daterangepicker",this)},updateMonthYear:function(t){var e=n(t.target).closest(".calendar").hasClass("left"),i=e?"left":"right",s=this.container.find(".calendar."+i),o=parseInt(s.find(".monthselect").val(),10),a=s.find(".yearselect").val();e||this.singleDatePicker||(a<this.startDate.year()||a==this.startDate.year()&&o<this.startDate.month())&&(o=this.startDate.month(),a=this.startDate.year()),this.minDate&&(a<this.minDate.year()||a==this.minDate.year()&&o<this.minDate.month())&&(o=this.minDate.month(),a=this.minDate.year()),this.maxDate&&(a>this.maxDate.year()||a==this.maxDate.year()&&o>this.maxDate.month())&&(o=this.maxDate.month(),a=this.maxDate.year()),this[i+"Calendar"].month.month(o).year(a),this.updateCalendars()},updateTime:function(t){var e=n(t.target).closest(".calendar"),i=e.hasClass("left"),s=parseInt(e.find(".hourselect").val(),10),o=parseInt(e.find(".minuteselect").val(),10),a=0;if(this.timePickerSeconds&&(a=parseInt(e.find(".secondselect").val(),10)),this.timePicker12Hour){var r=e.find(".ampmselect").val();"PM"===r&&s<12&&(s+=12),"AM"===r&&12===s&&(s=0)}if(i){var l=this.startDate.clone();l.hour(s),l.minute(o),l.second(a),this.startDate=l,this.leftCalendar.month.hour(s).minute(o).second(a),this.singleDatePicker&&(this.endDate=l.clone())}else{var h=this.endDate.clone();h.hour(s),h.minute(o),h.second(a),this.endDate=h,this.singleDatePicker&&(this.startDate=h.clone()),this.rightCalendar.month.hour(s).minute(o).second(a)}this.updateView(),this.updateCalendars()},updateCalendars:function(){this.leftCalendar.calendar=this.buildCalendar(this.leftCalendar.month.month(),this.leftCalendar.month.year(),this.leftCalendar.month.hour(),this.leftCalendar.month.minute(),this.leftCalendar.month.second(),"left"),this.rightCalendar.calendar=this.buildCalendar(this.rightCalendar.month.month(),this.rightCalendar.month.year(),this.rightCalendar.month.hour(),this.rightCalendar.month.minute(),this.rightCalendar.month.second(),"right"),this.container.find(".calendar.left").empty().html(this.renderCalendar(this.leftCalendar.calendar,this.startDate,this.minDate,this.maxDate,"left")),this.container.find(".calendar.right").empty().html(this.renderCalendar(this.rightCalendar.calendar,this.endDate,this.singleDatePicker?this.minDate:this.startDate,this.maxDate,"right")),this.container.find(".ranges li").removeClass("active");var t=!0,e=0;for(var i in this.ranges)this.timePicker?this.startDate.isSame(this.ranges[i][0])&&this.endDate.isSame(this.ranges[i][1])&&(t=!1,this.chosenLabel=this.container.find(".ranges li:eq("+e+")").addClass("active").html()):this.startDate.format("YYYY-MM-DD")==this.ranges[i][0].format("YYYY-MM-DD")&&this.endDate.format("YYYY-MM-DD")==this.ranges[i][1].format("YYYY-MM-DD")&&(t=!1,this.chosenLabel=this.container.find(".ranges li:eq("+e+")").addClass("active").html()),e++;t&&(this.chosenLabel=this.container.find(".ranges li:last").addClass("active").html(),this.showCalendars())},buildCalendar:function(t,e,n,s,o,a){var r,l=i([e,t]).daysInMonth(),h=i([e,t,1]),c=i([e,t,l]),u=i(h).subtract(1,"month").month(),d=i(h).subtract(1,"month").year(),f=i([d,u]).daysInMonth(),p=h.day(),m=[];for(m.firstDay=h,m.lastDay=c,r=0;r<6;r++)m[r]=[];var g=f-p+this.locale.firstDay+1;g>f&&(g-=7),p==this.locale.firstDay&&(g=f-6);var v,b,y=i([d,u,g,12,s,o]).utcOffset(this.timeZone);for(r=0,v=0,b=0;r<42;r++,v++,y=i(y).add(24,"hour"))r>0&&v%7===0&&(v=0,b++),m[b][v]=y.clone().hour(n),y.hour(12),this.minDate&&m[b][v].format("YYYY-MM-DD")==this.minDate.format("YYYY-MM-DD")&&m[b][v].isBefore(this.minDate)&&"left"==a&&(m[b][v]=this.minDate.clone()),this.maxDate&&m[b][v].format("YYYY-MM-DD")==this.maxDate.format("YYYY-MM-DD")&&m[b][v].isAfter(this.maxDate)&&"right"==a&&(m[b][v]=this.maxDate.clone());return m},renderDropdowns:function(t,e,i){for(var n=t.month(),s=t.year(),o=i&&i.year()||s+5,a=e&&e.year()||s-50,r='<select class="monthselect">',l=s==a,h=s==o,c=0;c<12;c++)(!l||c>=e.month())&&(!h||c<=i.month())&&(r+="<option value='"+c+"'"+(c===n?" selected='selected'":"")+">"+this.locale.monthNames[c]+"</option>");r+="</select>";for(var u='<select class="yearselect">',d=a;d<=o;d++)u+='<option value="'+d+'"'+(d===s?' selected="selected"':"")+">"+d+"</option>";return u+="</select>",r+u},renderCalendar:function(t,e,i,s,o){var a='<div class="calendar-date">';a+='<table class="table-condensed">',a+="<thead>",a+="<tr>",this.showWeekNumbers&&(a+="<th></th>"),a+=!i||i.isBefore(t.firstDay)?'<th class="prev available"><i class="fa fa-arrow-left"></i></th>':"<th></th>";var r=this.locale.monthNames[t[1][1].month()]+t[1][1].format(" YYYY");this.showDropdowns&&(r=this.renderDropdowns(t[1][1],i,s)),a+='<th colspan="5" class="month">'+r+"</th>",a+=!s||s.isAfter(t.lastDay)?'<th class="next available"><i class="fa fa-arrow-right"></i></th>':"<th></th>",a+="</tr>",a+="<tr>",this.showWeekNumbers&&(a+='<th class="week">'+this.locale.weekLabel+"</th>"),n.each(this.locale.daysOfWeek,function(t,e){a+="<th>"+e+"</th>"}),a+="</tr>",a+="</thead>",a+="<tbody>";for(var l=0;l<6;l++){a+="<tr>",this.showWeekNumbers&&(a+='<td class="week">'+t[l][0].week()+"</td>");for(var h=0;h<7;h++){var c="available ";c+=t[l][h].month()==t[1][1].month()?"":"off",i&&t[l][h].isBefore(i,"day")||s&&t[l][h].isAfter(s,"day")?c=" off disabled ":t[l][h].format("YYYY-MM-DD")==e.format("YYYY-MM-DD")?(c+=" active ",t[l][h].format("YYYY-MM-DD")==this.startDate.format("YYYY-MM-DD")&&(c+=" start-date "),t[l][h].format("YYYY-MM-DD")==this.endDate.format("YYYY-MM-DD")&&(c+=" end-date ")):t[l][h]>=this.startDate&&t[l][h]<=this.endDate&&(c+=" in-range ",t[l][h].isSame(this.startDate)&&(c+=" start-date "),t[l][h].isSame(this.endDate)&&(c+=" end-date "));var u="r"+l+"c"+h;a+='<td class="'+c.replace(/\s+/g," ").replace(/^\s?(.*?)\s?$/,"$1")+'" data-title="'+u+'">'+t[l][h].date()+"</td>"}a+="</tr>"}a+="</tbody>",a+="</table>",a+="</div>";var d;if(this.timePicker){a+='<div class="calendar-time">',a+='<select class="hourselect">';var f=0,p=23;i&&("left"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD")==i.format("YYYY-MM-DD")&&(f=i.hour(),e.hour()<f&&e.hour(f),this.timePicker12Hour&&f>=12&&e.hour()>=12&&(f-=12),this.timePicker12Hour&&12==f&&(f=1)),s&&("right"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD")==s.format("YYYY-MM-DD")&&(p=s.hour(),e.hour()>p&&e.hour(p),this.timePicker12Hour&&p>=12&&e.hour()>=12&&(p-=12));var m=0,g=23,v=e.hour();for(this.timePicker12Hour&&(m=1,g=12,v>=12&&(v-=12),0===v&&(v=12)),d=m;d<=g;d++)a+=d==v?'<option value="'+d+'" selected="selected">'+d+"</option>":d<f||d>p?'<option value="'+d+'" disabled="disabled" class="disabled">'+d+"</option>":'<option value="'+d+'">'+d+"</option>";a+="</select> : ",a+='<select class="minuteselect">';var b=0,y=59;for(i&&("left"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD h A")==i.format("YYYY-MM-DD h A")&&(b=i.minute(),e.minute()<b&&e.minute(b)),s&&("right"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD h A")==s.format("YYYY-MM-DD h A")&&(y=s.minute(),e.minute()>y&&e.minute(y)),d=0;d<60;d+=this.timePickerIncrement){var _=d;_<10&&(_="0"+_),a+=d==e.minute()?'<option value="'+d+'" selected="selected">'+_+"</option>":d<b||d>y?'<option value="'+d+'" disabled="disabled" class="disabled">'+_+"</option>":'<option value="'+d+'">'+_+"</option>"}if(a+="</select> ",this.timePickerSeconds){for(a+=': <select class="secondselect">',d=0;d<60;d+=this.timePickerIncrement){var _=d;_<10&&(_="0"+_),a+=d==e.second()?'<option value="'+d+'" selected="selected">'+_+"</option>":'<option value="'+d+'">'+_+"</option>"}a+="</select>"}if(this.timePicker12Hour){a+='<select class="ampmselect">';var w="",x="";i&&("left"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD")==i.format("YYYY-MM-DD")&&i.hour()>=12&&(w=' disabled="disabled" class="disabled"'),s&&("right"==o||this.singleDatePicker)&&e.format("YYYY-MM-DD")==s.format("YYYY-MM-DD")&&s.hour()<12&&(x=' disabled="disabled" class="disabled"'),a+=e.hour()>=12?'<option value="AM"'+w+'>AM</option><option value="PM" selected="selected"'+x+">PM</option>":'<option value="AM" selected="selected"'+w+'>AM</option><option value="PM"'+x+">PM</option>",a+="</select>"}a+="</div>"}return a},remove:function(){this.container.remove(),this.element.off(".daterangepicker"),this.element.removeData("daterangepicker")}},n.fn.daterangepicker=function(t,e){return this.each(function(){var i=n(this);i.data("daterangepicker")&&i.data("daterangepicker").remove(),i.data("daterangepicker",new s(i,t,e))}),this}}),function(t,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):t.EasyPieChart=e()}(this,function(){var t=function(t,e){var i,n=document.createElement("canvas");t.appendChild(n),"undefined"!=typeof G_vmlCanvasManager&&G_vmlCanvasManager.initElement(n);var s=n.getContext("2d");n.width=n.height=e.size;var o=1;window.devicePixelRatio>1&&(o=window.devicePixelRatio,n.style.width=n.style.height=[e.size,"px"].join(""),n.width=n.height=e.size*o,s.scale(o,o)),s.translate(e.size/2,e.size/2),s.rotate((-.5+e.rotate/180)*Math.PI);var a=(e.size-e.lineWidth)/2;e.scaleColor&&e.scaleLength&&(a-=e.scaleLength+2),Date.now=Date.now||function(){return+new Date};var r=function(t,e,i){i=Math.min(Math.max(-1,i||0),1);var n=i<=0;s.beginPath(),s.arc(0,0,a,0,2*Math.PI*i,n),s.strokeStyle=t,s.lineWidth=e,s.stroke()},l=function(){var t,i;s.lineWidth=1,s.fillStyle=e.scaleColor,s.save();for(var n=24;n>0;--n)n%6===0?(i=e.scaleLength,t=0):(i=.6*e.scaleLength,t=e.scaleLength-i),s.fillRect(-e.size/2+t,0,i,1),s.rotate(Math.PI/12);s.restore()},h=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(t){window.setTimeout(t,1e3/60)}}(),c=function(){e.scaleColor&&l(),e.trackColor&&r(e.trackColor,e.trackWidth||e.lineWidth,1)};this.getCanvas=function(){return n},this.getCtx=function(){return s},this.clear=function(){s.clearRect(e.size/-2,e.size/-2,e.size,e.size)},this.draw=function(t){e.scaleColor||e.trackColor?s.getImageData&&s.putImageData?i?s.putImageData(i,0,0):(c(),i=s.getImageData(0,0,e.size*o,e.size*o)):(this.clear(),c()):this.clear(),s.lineCap=e.lineCap;var n;n="function"==typeof e.barColor?e.barColor(t):e.barColor,r(n,e.lineWidth,t/100)}.bind(this),this.animate=function(t,i){var n=Date.now();e.onStart(t,i);var s=function(){var o=Math.min(Date.now()-n,e.animate.duration),a=e.easing(this,o,t,i-t,e.animate.duration);this.draw(a),e.onStep(t,i,a),o>=e.animate.duration?e.onStop(t,i):h(s)}.bind(this);h(s)}.bind(this)},e=function(e,i){var n={barColor:"#ef1e25",trackColor:"#f9f9f9",scaleColor:"#dfe0e0",scaleLength:5,lineCap:"round",lineWidth:3,trackWidth:void 0,size:110,rotate:0,animate:{duration:1e3,enabled:!0},easing:function(t,e,i,n,s){return e/=s/2,e<1?n/2*e*e+i:-n/2*(--e*(e-2)-1)+i},onStart:function(t,e){},onStep:function(t,e,i){},onStop:function(t,e){}};if("undefined"!=typeof t)n.renderer=t;else{if("undefined"==typeof SVGRenderer)throw new Error("Please load either the SVG- or the CanvasRenderer");n.renderer=SVGRenderer}var s={},o=0,a=function(){this.el=e,this.options=s;for(var t in n)n.hasOwnProperty(t)&&(s[t]=i&&"undefined"!=typeof i[t]?i[t]:n[t],"function"==typeof s[t]&&(s[t]=s[t].bind(this)));"string"==typeof s.easing&&"undefined"!=typeof jQuery&&jQuery.isFunction(jQuery.easing[s.easing])?s.easing=jQuery.easing[s.easing]:s.easing=n.easing,"number"==typeof s.animate&&(s.animate={duration:s.animate,enabled:!0}),"boolean"!=typeof s.animate||s.animate||(s.animate={
duration:1e3,enabled:s.animate}),this.renderer=new s.renderer(e,s),this.renderer.draw(o),e.dataset&&e.dataset.percent?this.update(parseFloat(e.dataset.percent)):e.getAttribute&&e.getAttribute("data-percent")&&this.update(parseFloat(e.getAttribute("data-percent")))}.bind(this);this.update=function(t){return t=parseFloat(t),s.animate.enabled?this.renderer.animate(o,t):this.renderer.draw(t),o=t,this}.bind(this),this.disableAnimation=function(){return s.animate.enabled=!1,this},this.enableAnimation=function(){return s.animate.enabled=!0,this},a()};return e}),function(t){function e(t,e,i){switch(arguments.length){case 2:return null!=t?t:e;case 3:return null!=t?t:null!=e?e:i;default:throw new Error("Implement me")}}function i(t,e){return kt.call(t,e)}function n(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function s(t){wt.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function o(t,e){var i=!0;return p(function(){return i&&(s(t),i=!1),e.apply(this,arguments)},e)}function a(t,e){be[t]||(s(e),be[t]=!0)}function r(t,e){return function(i){return v(t.call(this,i),e)}}function l(t,e){return function(i){return this.localeData().ordinal(t.call(this,i),e)}}function h(t,e){var i,n,s=12*(e.year()-t.year())+(e.month()-t.month()),o=t.clone().add(s,"months");return 0>e-o?(i=t.clone().add(s-1,"months"),n=(e-o)/(o-i)):(i=t.clone().add(s+1,"months"),n=(e-o)/(i-o)),-(s+n)}function c(t,e,i){var n;return null==i?e:null!=t.meridiemHour?t.meridiemHour(e,i):null!=t.isPM?(n=t.isPM(i),n&&12>e&&(e+=12),n||12!==e||(e=0),e):e}function u(){}function d(t,e){e!==!1&&H(t),m(this,t),this._d=new Date((+t._d)),_e===!1&&(_e=!0,wt.updateOffset(this),_e=!1)}function f(t){var e=T(t),i=e.year||0,n=e.quarter||0,s=e.month||0,o=e.week||0,a=e.day||0,r=e.hour||0,l=e.minute||0,h=e.second||0,c=e.millisecond||0;this._milliseconds=+c+1e3*h+6e4*l+36e5*r,this._days=+a+7*o,this._months=+s+3*n+12*i,this._data={},this._locale=wt.localeData(),this._bubble()}function p(t,e){for(var n in e)i(e,n)&&(t[n]=e[n]);return i(e,"toString")&&(t.toString=e.toString),i(e,"valueOf")&&(t.valueOf=e.valueOf),t}function m(t,e){var i,n,s;if("undefined"!=typeof e._isAMomentObject&&(t._isAMomentObject=e._isAMomentObject),"undefined"!=typeof e._i&&(t._i=e._i),"undefined"!=typeof e._f&&(t._f=e._f),"undefined"!=typeof e._l&&(t._l=e._l),"undefined"!=typeof e._strict&&(t._strict=e._strict),"undefined"!=typeof e._tzm&&(t._tzm=e._tzm),"undefined"!=typeof e._isUTC&&(t._isUTC=e._isUTC),"undefined"!=typeof e._offset&&(t._offset=e._offset),"undefined"!=typeof e._pf&&(t._pf=e._pf),"undefined"!=typeof e._locale&&(t._locale=e._locale),Lt.length>0)for(i in Lt)n=Lt[i],s=e[n],"undefined"!=typeof s&&(t[n]=s);return t}function g(t){return 0>t?Math.ceil(t):Math.floor(t)}function v(t,e,i){for(var n=""+Math.abs(t),s=t>=0;n.length<e;)n="0"+n;return(s?i?"+":"":"-")+n}function b(t,e){var i={milliseconds:0,months:0};return i.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(i.months,"M").isAfter(e)&&--i.months,i.milliseconds=+e-+t.clone().add(i.months,"M"),i}function y(t,e){var i;return e=F(e,t),t.isBefore(e)?i=b(t,e):(i=b(e,t),i.milliseconds=-i.milliseconds,i.months=-i.months),i}function _(t,e){return function(i,n){var s,o;return null===n||isNaN(+n)||(a(e,"moment()."+e+"(period, number) is deprecated. Please use moment()."+e+"(number, period)."),o=i,i=n,n=o),i="string"==typeof i?+i:i,s=wt.duration(i,n),w(this,s,t),this}}function w(t,e,i,n){var s=e._milliseconds,o=e._days,a=e._months;n=null==n||n,s&&t._d.setTime(+t._d+s*i),o&&mt(t,"Date",pt(t,"Date")+o*i),a&&ft(t,pt(t,"Month")+a*i),n&&wt.updateOffset(t,o||a)}function x(t){return"[object Array]"===Object.prototype.toString.call(t)}function D(t){return"[object Date]"===Object.prototype.toString.call(t)||t instanceof Date}function C(t,e,i){var n,s=Math.min(t.length,e.length),o=Math.abs(t.length-e.length),a=0;for(n=0;s>n;n++)(i&&t[n]!==e[n]||!i&&E(t[n])!==E(e[n]))&&a++;return a+o}function S(t){if(t){var e=t.toLowerCase().replace(/(.)s$/,"$1");t=ue[t]||de[e]||e}return t}function T(t){var e,n,s={};for(n in t)i(t,n)&&(e=S(n),e&&(s[e]=t[n]));return s}function k(e){var i,n;if(0===e.indexOf("week"))i=7,n="day";else{if(0!==e.indexOf("month"))return;i=12,n="month"}wt[e]=function(s,o){var a,r,l=wt._locale[e],h=[];if("number"==typeof s&&(o=s,s=t),r=function(t){var e=wt().utc().set(n,t);return l.call(wt._locale,e,s||"")},null!=o)return r(o);for(a=0;i>a;a++)h.push(r(a));return h}}function E(t){var e=+t,i=0;return 0!==e&&isFinite(e)&&(i=e>=0?Math.floor(e):Math.ceil(e)),i}function M(t,e){return new Date(Date.UTC(t,e+1,0)).getUTCDate()}function I(t,e,i){return ht(wt([t,11,31+e-i]),e,i).week}function A(t){return P(t)?366:365}function P(t){return t%4===0&&t%100!==0||t%400===0}function H(t){var e;t._a&&-2===t._pf.overflow&&(e=t._a[Mt]<0||t._a[Mt]>11?Mt:t._a[It]<1||t._a[It]>M(t._a[Et],t._a[Mt])?It:t._a[At]<0||t._a[At]>24||24===t._a[At]&&(0!==t._a[Pt]||0!==t._a[Ht]||0!==t._a[Ot])?At:t._a[Pt]<0||t._a[Pt]>59?Pt:t._a[Ht]<0||t._a[Ht]>59?Ht:t._a[Ot]<0||t._a[Ot]>999?Ot:-1,t._pf._overflowDayOfYear&&(Et>e||e>It)&&(e=It),t._pf.overflow=e)}function O(e){return null==e._isValid&&(e._isValid=!isNaN(e._d.getTime())&&e._pf.overflow<0&&!e._pf.empty&&!e._pf.invalidMonth&&!e._pf.nullInput&&!e._pf.invalidFormat&&!e._pf.userInvalidated,e._strict&&(e._isValid=e._isValid&&0===e._pf.charsLeftOver&&0===e._pf.unusedTokens.length&&e._pf.bigHour===t)),e._isValid}function N(t){return t?t.toLowerCase().replace("_","-"):t}function L(t){for(var e,i,n,s,o=0;o<t.length;){for(s=N(t[o]).split("-"),e=s.length,i=N(t[o+1]),i=i?i.split("-"):null;e>0;){if(n=R(s.slice(0,e).join("-")))return n;if(i&&i.length>=e&&C(s,i,!0)>=e-1)break;e--}o++}return null}function R(t){var e=null;if(!Nt[t]&&Rt)try{e=wt.locale(),require("./locale/"+t),wt.locale(e)}catch(i){}return Nt[t]}function F(t,e){var i,n;return e._isUTC?(i=e.clone(),n=(wt.isMoment(t)||D(t)?+t:+wt(t))-+i,i._d.setTime(+i._d+n),wt.updateOffset(i,!1),i):wt(t).local()}function z(t){return t.match(/\[[\s\S]/)?t.replace(/^\[|\]$/g,""):t.replace(/\\/g,"")}function $(t){var e,i,n=t.match(Wt);for(e=0,i=n.length;i>e;e++)n[e]=ve[n[e]]?ve[n[e]]:z(n[e]);return function(s){var o="";for(e=0;i>e;e++)o+=n[e]instanceof Function?n[e].call(s,t):n[e];return o}}function W(t,e){return t.isValid()?(e=j(e,t.localeData()),fe[e]||(fe[e]=$(e)),fe[e](t)):t.localeData().invalidDate()}function j(t,e){function i(t){return e.longDateFormat(t)||t}var n=5;for(jt.lastIndex=0;n>=0&&jt.test(t);)t=t.replace(jt,i),jt.lastIndex=0,n-=1;return t}function Y(t,e){var i,n=e._strict;switch(t){case"Q":return Qt;case"DDDD":return ee;case"YYYY":case"GGGG":case"gggg":return n?ie:qt;case"Y":case"G":case"g":return se;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return n?ne:Ut;case"S":if(n)return Qt;case"SS":if(n)return te;case"SSS":if(n)return ee;case"DDD":return Bt;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Gt;case"a":case"A":return e._locale._meridiemParse;case"x":return Kt;case"X":return Jt;case"Z":case"ZZ":return Xt;case"T":return Zt;case"SSSS":return Vt;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return n?te:Yt;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Yt;case"Do":return n?e._locale._ordinalParse:e._locale._ordinalParseLenient;default:return i=new RegExp(J(K(t.replace("\\","")),"i"))}}function B(t){t=t||"";var e=t.match(Xt)||[],i=e[e.length-1]||[],n=(i+"").match(he)||["-",0,0],s=+(60*n[1])+E(n[2]);return"+"===n[0]?s:-s}function q(t,e,i){var n,s=i._a;switch(t){case"Q":null!=e&&(s[Mt]=3*(E(e)-1));break;case"M":case"MM":null!=e&&(s[Mt]=E(e)-1);break;case"MMM":case"MMMM":n=i._locale.monthsParse(e,t,i._strict),null!=n?s[Mt]=n:i._pf.invalidMonth=e;break;case"D":case"DD":null!=e&&(s[It]=E(e));break;case"Do":null!=e&&(s[It]=E(parseInt(e.match(/\d{1,2}/)[0],10)));break;case"DDD":case"DDDD":null!=e&&(i._dayOfYear=E(e));break;case"YY":s[Et]=wt.parseTwoDigitYear(e);break;case"YYYY":case"YYYYY":case"YYYYYY":s[Et]=E(e);break;case"a":case"A":i._meridiem=e;break;case"h":case"hh":i._pf.bigHour=!0;case"H":case"HH":s[At]=E(e);break;case"m":case"mm":s[Pt]=E(e);break;case"s":case"ss":s[Ht]=E(e);break;case"S":case"SS":case"SSS":case"SSSS":s[Ot]=E(1e3*("0."+e));break;case"x":i._d=new Date(E(e));break;case"X":i._d=new Date(1e3*parseFloat(e));break;case"Z":case"ZZ":i._useUTC=!0,i._tzm=B(e);break;case"dd":case"ddd":case"dddd":n=i._locale.weekdaysParse(e),null!=n?(i._w=i._w||{},i._w.d=n):i._pf.invalidWeekday=e;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":t=t.substr(0,1);case"gggg":case"GGGG":case"GGGGG":t=t.substr(0,2),e&&(i._w=i._w||{},i._w[t]=E(e));break;case"gg":case"GG":i._w=i._w||{},i._w[t]=wt.parseTwoDigitYear(e)}}function U(t){var i,n,s,o,a,r,l;i=t._w,null!=i.GG||null!=i.W||null!=i.E?(a=1,r=4,n=e(i.GG,t._a[Et],ht(wt(),1,4).year),s=e(i.W,1),o=e(i.E,1)):(a=t._locale._week.dow,r=t._locale._week.doy,n=e(i.gg,t._a[Et],ht(wt(),a,r).year),s=e(i.w,1),null!=i.d?(o=i.d,a>o&&++s):o=null!=i.e?i.e+a:a),l=ct(n,s,o,r,a),t._a[Et]=l.year,t._dayOfYear=l.dayOfYear}function V(t){var i,n,s,o,a=[];if(!t._d){for(s=X(t),t._w&&null==t._a[It]&&null==t._a[Mt]&&U(t),t._dayOfYear&&(o=e(t._a[Et],s[Et]),t._dayOfYear>A(o)&&(t._pf._overflowDayOfYear=!0),n=ot(o,0,t._dayOfYear),t._a[Mt]=n.getUTCMonth(),t._a[It]=n.getUTCDate()),i=0;3>i&&null==t._a[i];++i)t._a[i]=a[i]=s[i];for(;7>i;i++)t._a[i]=a[i]=null==t._a[i]?2===i?1:0:t._a[i];24===t._a[At]&&0===t._a[Pt]&&0===t._a[Ht]&&0===t._a[Ot]&&(t._nextDay=!0,t._a[At]=0),t._d=(t._useUTC?ot:st).apply(null,a),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[At]=24)}}function G(t){var e;t._d||(e=T(t._i),t._a=[e.year,e.month,e.day||e.date,e.hour,e.minute,e.second,e.millisecond],V(t))}function X(t){var e=new Date;return t._useUTC?[e.getUTCFullYear(),e.getUTCMonth(),e.getUTCDate()]:[e.getFullYear(),e.getMonth(),e.getDate()]}function Z(e){if(e._f===wt.ISO_8601)return void tt(e);e._a=[],e._pf.empty=!0;var i,n,s,o,a,r=""+e._i,l=r.length,h=0;for(s=j(e._f,e._locale).match(Wt)||[],i=0;i<s.length;i++)o=s[i],n=(r.match(Y(o,e))||[])[0],n&&(a=r.substr(0,r.indexOf(n)),a.length>0&&e._pf.unusedInput.push(a),r=r.slice(r.indexOf(n)+n.length),h+=n.length),ve[o]?(n?e._pf.empty=!1:e._pf.unusedTokens.push(o),q(o,n,e)):e._strict&&!n&&e._pf.unusedTokens.push(o);e._pf.charsLeftOver=l-h,r.length>0&&e._pf.unusedInput.push(r),e._pf.bigHour===!0&&e._a[At]<=12&&(e._pf.bigHour=t),e._a[At]=c(e._locale,e._a[At],e._meridiem),V(e),H(e)}function K(t){return t.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(t,e,i,n,s){return e||i||n||s})}function J(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function Q(t){var e,i,s,o,a;if(0===t._f.length)return t._pf.invalidFormat=!0,void(t._d=new Date(NaN));for(o=0;o<t._f.length;o++)a=0,e=m({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._pf=n(),e._f=t._f[o],Z(e),O(e)&&(a+=e._pf.charsLeftOver,a+=10*e._pf.unusedTokens.length,e._pf.score=a,(null==s||s>a)&&(s=a,i=e));p(t,i||e)}function tt(t){var e,i,n=t._i,s=oe.exec(n);if(s){for(t._pf.iso=!0,e=0,i=re.length;i>e;e++)if(re[e][1].exec(n)){t._f=re[e][0]+(s[6]||" ");break}for(e=0,i=le.length;i>e;e++)if(le[e][1].exec(n)){t._f+=le[e][0];break}n.match(Xt)&&(t._f+="Z"),Z(t)}else t._isValid=!1}function et(t){tt(t),t._isValid===!1&&(delete t._isValid,wt.createFromInputFallback(t))}function it(t,e){var i,n=[];for(i=0;i<t.length;++i)n.push(e(t[i],i));return n}function nt(e){var i,n=e._i;n===t?e._d=new Date:D(n)?e._d=new Date((+n)):null!==(i=Ft.exec(n))?e._d=new Date((+i[1])):"string"==typeof n?et(e):x(n)?(e._a=it(n.slice(0),function(t){return parseInt(t,10)}),V(e)):"object"==typeof n?G(e):"number"==typeof n?e._d=new Date(n):wt.createFromInputFallback(e)}function st(t,e,i,n,s,o,a){var r=new Date(t,e,i,n,s,o,a);return 1970>t&&r.setFullYear(t),r}function ot(t){var e=new Date(Date.UTC.apply(null,arguments));return 1970>t&&e.setUTCFullYear(t),e}function at(t,e){if("string"==typeof t)if(isNaN(t)){if(t=e.weekdaysParse(t),"number"!=typeof t)return null}else t=parseInt(t,10);return t}function rt(t,e,i,n,s){return s.relativeTime(e||1,!!i,t,n)}function lt(t,e,i){var n=wt.duration(t).abs(),s=Tt(n.as("s")),o=Tt(n.as("m")),a=Tt(n.as("h")),r=Tt(n.as("d")),l=Tt(n.as("M")),h=Tt(n.as("y")),c=s<pe.s&&["s",s]||1===o&&["m"]||o<pe.m&&["mm",o]||1===a&&["h"]||a<pe.h&&["hh",a]||1===r&&["d"]||r<pe.d&&["dd",r]||1===l&&["M"]||l<pe.M&&["MM",l]||1===h&&["y"]||["yy",h];return c[2]=e,c[3]=+t>0,c[4]=i,rt.apply({},c)}function ht(t,e,i){var n,s=i-e,o=i-t.day();return o>s&&(o-=7),s-7>o&&(o+=7),n=wt(t).add(o,"d"),{week:Math.ceil(n.dayOfYear()/7),year:n.year()}}function ct(t,e,i,n,s){var o,a,r=ot(t,0,1).getUTCDay();return r=0===r?7:r,i=null!=i?i:s,o=s-r+(r>n?7:0)-(s>r?7:0),a=7*(e-1)+(i-s)+o+1,{year:a>0?t:t-1,dayOfYear:a>0?a:A(t-1)+a}}function ut(e){var i,n=e._i,s=e._f;return e._locale=e._locale||wt.localeData(e._l),null===n||s===t&&""===n?wt.invalid({nullInput:!0}):("string"==typeof n&&(e._i=n=e._locale.preparse(n)),wt.isMoment(n)?new d(n,(!0)):(s?x(s)?Q(e):Z(e):nt(e),i=new d(e),i._nextDay&&(i.add(1,"d"),i._nextDay=t),i))}function dt(t,e){var i,n;if(1===e.length&&x(e[0])&&(e=e[0]),!e.length)return wt();for(i=e[0],n=1;n<e.length;++n)e[n][t](i)&&(i=e[n]);return i}function ft(t,e){var i;return"string"==typeof e&&(e=t.localeData().monthsParse(e),"number"!=typeof e)?t:(i=Math.min(t.date(),M(t.year(),e)),t._d["set"+(t._isUTC?"UTC":"")+"Month"](e,i),t)}function pt(t,e){return t._d["get"+(t._isUTC?"UTC":"")+e]()}function mt(t,e,i){return"Month"===e?ft(t,i):t._d["set"+(t._isUTC?"UTC":"")+e](i)}function gt(t,e){return function(i){return null!=i?(mt(this,t,i),wt.updateOffset(this,e),this):pt(this,t)}}function vt(t){return 400*t/146097}function bt(t){return 146097*t/400}function yt(t){wt.duration.fn[t]=function(){return this._data[t]}}function _t(t){"undefined"==typeof ender&&(xt=St.moment,St.moment=t?o("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",wt):wt)}for(var wt,xt,Dt,Ct="2.9.0",St="undefined"==typeof global||"undefined"!=typeof window&&window!==global.window?this:global,Tt=Math.round,kt=Object.prototype.hasOwnProperty,Et=0,Mt=1,It=2,At=3,Pt=4,Ht=5,Ot=6,Nt={},Lt=[],Rt="undefined"!=typeof module&&module&&module.exports,Ft=/^\/?Date\((\-?\d+)/i,zt=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,$t=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Wt=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|x|X|zz?|ZZ?|.)/g,jt=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Yt=/\d\d?/,Bt=/\d{1,3}/,qt=/\d{1,4}/,Ut=/[+\-]?\d{1,6}/,Vt=/\d+/,Gt=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Xt=/Z|[\+\-]\d\d:?\d\d/gi,Zt=/T/i,Kt=/[\+\-]?\d+/,Jt=/[\+\-]?\d+(\.\d{1,3})?/,Qt=/\d/,te=/\d\d/,ee=/\d{3}/,ie=/\d{4}/,ne=/[+-]?\d{6}/,se=/[+-]?\d+/,oe=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,ae="YYYY-MM-DDTHH:mm:ssZ",re=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],le=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],he=/([\+\-]|\d\d)/gi,ce=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),ue={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},de={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},fe={},pe={s:45,m:45,h:22,d:26,M:11},me="DDD w W M D d".split(" "),ge="M D H h m s w W".split(" "),ve={M:function(){return this.month()+1},MMM:function(t){return this.localeData().monthsShort(this,t)},MMMM:function(t){return this.localeData().months(this,t)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(t){return this.localeData().weekdaysMin(this,t)},ddd:function(t){return this.localeData().weekdaysShort(this,t)},dddd:function(t){return this.localeData().weekdays(this,t)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return v(this.year()%100,2)},YYYY:function(){return v(this.year(),4)},YYYYY:function(){return v(this.year(),5)},YYYYYY:function(){var t=this.year(),e=t>=0?"+":"-";return e+v(Math.abs(t),6)},gg:function(){return v(this.weekYear()%100,2)},gggg:function(){return v(this.weekYear(),4)},ggggg:function(){return v(this.weekYear(),5)},GG:function(){return v(this.isoWeekYear()%100,2)},GGGG:function(){return v(this.isoWeekYear(),4)},GGGGG:function(){return v(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.localeData().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.localeData().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return E(this.milliseconds()/100)},SS:function(){return v(E(this.milliseconds()/10),2)},SSS:function(){return v(this.milliseconds(),3)},SSSS:function(){return v(this.milliseconds(),3)},Z:function(){var t=this.utcOffset(),e="+";return 0>t&&(t=-t,e="-"),e+v(E(t/60),2)+":"+v(E(t)%60,2)},ZZ:function(){var t=this.utcOffset(),e="+";return 0>t&&(t=-t,e="-"),e+v(E(t/60),2)+v(E(t)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},x:function(){return this.valueOf()},X:function(){return this.unix()},Q:function(){return this.quarter()}},be={},ye=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"],_e=!1;me.length;)Dt=me.pop(),ve[Dt+"o"]=l(ve[Dt],Dt);for(;ge.length;)Dt=ge.pop(),ve[Dt+Dt]=r(ve[Dt],2);ve.DDDD=r(ve.DDD,3),p(u.prototype,{set:function(t){var e,i;for(i in t)e=t[i],"function"==typeof e?this[i]=e:this["_"+i]=e;this._ordinalParseLenient=new RegExp(this._ordinalParse.source+"|"+/\d{1,2}/.source)},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(t){return this._months[t.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(t){return this._monthsShort[t.month()]},monthsParse:function(t,e,i){var n,s,o;for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),n=0;12>n;n++){if(s=wt.utc([2e3,n]),i&&!this._longMonthsParse[n]&&(this._longMonthsParse[n]=new RegExp("^"+this.months(s,"").replace(".","")+"$","i"),this._shortMonthsParse[n]=new RegExp("^"+this.monthsShort(s,"").replace(".","")+"$","i")),i||this._monthsParse[n]||(o="^"+this.months(s,"")+"|^"+this.monthsShort(s,""),this._monthsParse[n]=new RegExp(o.replace(".",""),"i")),i&&"MMMM"===e&&this._longMonthsParse[n].test(t))return n;if(i&&"MMM"===e&&this._shortMonthsParse[n].test(t))return n;if(!i&&this._monthsParse[n].test(t))return n}},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(t){return this._weekdays[t.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(t){return this._weekdaysShort[t.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(t){return this._weekdaysMin[t.day()]},weekdaysParse:function(t){var e,i,n;for(this._weekdaysParse||(this._weekdaysParse=[]),e=0;7>e;e++)if(this._weekdaysParse[e]||(i=wt([2e3,1]).day(e),n="^"+this.weekdays(i,"")+"|^"+this.weekdaysShort(i,"")+"|^"+this.weekdaysMin(i,""),this._weekdaysParse[e]=new RegExp(n.replace(".",""),"i")),this._weekdaysParse[e].test(t))return e},_longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY LT",LLLL:"dddd, MMMM D, YYYY LT"},longDateFormat:function(t){var e=this._longDateFormat[t];return!e&&this._longDateFormat[t.toUpperCase()]&&(e=this._longDateFormat[t.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(t){return t.slice(1)}),this._longDateFormat[t]=e),e},isPM:function(t){return"p"===(t+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(t,e,i){return t>11?i?"pm":"PM":i?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(t,e,i){var n=this._calendar[t];return"function"==typeof n?n.apply(e,[i]):n},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(t,e,i,n){var s=this._relativeTime[i];return"function"==typeof s?s(t,e,i,n):s.replace(/%d/i,t)},pastFuture:function(t,e){var i=this._relativeTime[t>0?"future":"past"];return"function"==typeof i?i(e):i.replace(/%s/i,e)},ordinal:function(t){return this._ordinal.replace("%d",t)},_ordinal:"%d",_ordinalParse:/\d{1,2}/,preparse:function(t){return t},postformat:function(t){return t},week:function(t){return ht(t,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},firstDayOfWeek:function(){return this._week.dow},firstDayOfYear:function(){return this._week.doy},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),wt=function(e,i,s,o){var a;return"boolean"==typeof s&&(o=s,s=t),a={},a._isAMomentObject=!0,a._i=e,a._f=i,a._l=s,a._strict=o,a._isUTC=!1,a._pf=n(),ut(a)},wt.suppressDeprecationWarnings=!1,wt.createFromInputFallback=o("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(t){t._d=new Date(t._i+(t._useUTC?" UTC":""))}),wt.min=function(){var t=[].slice.call(arguments,0);return dt("isBefore",t)},wt.max=function(){var t=[].slice.call(arguments,0);return dt("isAfter",t)},wt.utc=function(e,i,s,o){var a;return"boolean"==typeof s&&(o=s,s=t),a={},a._isAMomentObject=!0,a._useUTC=!0,a._isUTC=!0,a._l=s,a._i=e,a._f=i,a._strict=o,a._pf=n(),ut(a).utc()},wt.unix=function(t){return wt(1e3*t)},wt.duration=function(t,e){var n,s,o,a,r=t,l=null;return wt.isDuration(t)?r={ms:t._milliseconds,d:t._days,M:t._months}:"number"==typeof t?(r={},e?r[e]=t:r.milliseconds=t):(l=zt.exec(t))?(n="-"===l[1]?-1:1,r={y:0,d:E(l[It])*n,h:E(l[At])*n,m:E(l[Pt])*n,s:E(l[Ht])*n,ms:E(l[Ot])*n}):(l=$t.exec(t))?(n="-"===l[1]?-1:1,o=function(t){var e=t&&parseFloat(t.replace(",","."));return(isNaN(e)?0:e)*n},r={y:o(l[2]),M:o(l[3]),d:o(l[4]),h:o(l[5]),m:o(l[6]),s:o(l[7]),w:o(l[8])}):null==r?r={}:"object"==typeof r&&("from"in r||"to"in r)&&(a=y(wt(r.from),wt(r.to)),r={},r.ms=a.milliseconds,r.M=a.months),s=new f(r),wt.isDuration(t)&&i(t,"_locale")&&(s._locale=t._locale),s},wt.version=Ct,wt.defaultFormat=ae,wt.ISO_8601=function(){},wt.momentProperties=Lt,wt.updateOffset=function(){},wt.relativeTimeThreshold=function(e,i){return pe[e]!==t&&(i===t?pe[e]:(pe[e]=i,!0))},wt.lang=o("moment.lang is deprecated. Use moment.locale instead.",function(t,e){return wt.locale(t,e)}),wt.locale=function(t,e){var i;return t&&(i="undefined"!=typeof e?wt.defineLocale(t,e):wt.localeData(t),i&&(wt.duration._locale=wt._locale=i)),wt._locale._abbr},wt.defineLocale=function(t,e){return null!==e?(e.abbr=t,Nt[t]||(Nt[t]=new u),Nt[t].set(e),wt.locale(t),Nt[t]):(delete Nt[t],null)},wt.langData=o("moment.langData is deprecated. Use moment.localeData instead.",function(t){return wt.localeData(t)}),wt.localeData=function(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return wt._locale;if(!x(t)){if(e=R(t))return e;t=[t]}return L(t)},wt.isMoment=function(t){return t instanceof d||null!=t&&i(t,"_isAMomentObject")},wt.isDuration=function(t){return t instanceof f};for(Dt=ye.length-1;Dt>=0;--Dt)k(ye[Dt]);wt.normalizeUnits=function(t){return S(t)},wt.invalid=function(t){var e=wt.utc(NaN);return null!=t?p(e._pf,t):e._pf.userInvalidated=!0,e},wt.parseZone=function(){return wt.apply(null,arguments).parseZone()},wt.parseTwoDigitYear=function(t){return E(t)+(E(t)>68?1900:2e3)},wt.isDate=D,p(wt.fn=d.prototype,{clone:function(){return wt(this)},valueOf:function(){return+this._d-6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date((+this)):this._d},toISOString:function(){var t=wt(this).utc();return 0<t.year()&&t.year()<=9999?"function"==typeof Date.prototype.toISOString?this.toDate().toISOString():W(t,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):W(t,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var t=this;return[t.year(),t.month(),t.date(),t.hours(),t.minutes(),t.seconds(),t.milliseconds()]},isValid:function(){return O(this)},isDSTShifted:function(){return!!this._a&&(this.isValid()&&C(this._a,(this._isUTC?wt.utc(this._a):wt(this._a)).toArray())>0)},parsingFlags:function(){return p({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(t){return this.utcOffset(0,t)},local:function(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(this._dateUtcOffset(),"m")),this},format:function(t){var e=W(this,t||wt.defaultFormat);return this.localeData().postformat(e)},add:_(1,"add"),subtract:_(-1,"subtract"),diff:function(t,e,i){var n,s,o=F(t,this),a=6e4*(o.utcOffset()-this.utcOffset());return e=S(e),"year"===e||"month"===e||"quarter"===e?(s=h(this,o),"quarter"===e?s/=3:"year"===e&&(s/=12)):(n=this-o,s="second"===e?n/1e3:"minute"===e?n/6e4:"hour"===e?n/36e5:"day"===e?(n-a)/864e5:"week"===e?(n-a)/6048e5:n),i?s:g(s)},from:function(t,e){return wt.duration({to:this,from:t}).locale(this.locale()).humanize(!e)},fromNow:function(t){return this.from(wt(),t)},calendar:function(t){var e=t||wt(),i=F(e,this).startOf("day"),n=this.diff(i,"days",!0),s=-6>n?"sameElse":-1>n?"lastWeek":0>n?"lastDay":1>n?"sameDay":2>n?"nextDay":7>n?"nextWeek":"sameElse";return this.format(this.localeData().calendar(s,this,wt(e)))},isLeapYear:function(){return P(this.year())},isDST:function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},day:function(t){var e=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(t=at(t,this.localeData()),this.add(t-e,"d")):e},month:gt("Month",!0),startOf:function(t){switch(t=S(t)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===t?this.weekday(0):"isoWeek"===t&&this.isoWeekday(1),"quarter"===t&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(e){return e=S(e),e===t||"millisecond"===e?this:this.startOf(e).add(1,"isoWeek"===e?"week":e).subtract(1,"ms")},isAfter:function(t,e){var i;return e=S("undefined"!=typeof e?e:"millisecond"),"millisecond"===e?(t=wt.isMoment(t)?t:wt(t),+this>+t):(i=wt.isMoment(t)?+t:+wt(t),i<+this.clone().startOf(e))},isBefore:function(t,e){var i;return e=S("undefined"!=typeof e?e:"millisecond"),"millisecond"===e?(t=wt.isMoment(t)?t:wt(t),+t>+this):(i=wt.isMoment(t)?+t:+wt(t),+this.clone().endOf(e)<i)},isBetween:function(t,e,i){return this.isAfter(t,i)&&this.isBefore(e,i)},isSame:function(t,e){var i;return e=S(e||"millisecond"),"millisecond"===e?(t=wt.isMoment(t)?t:wt(t),+this===+t):(i=+wt(t),+this.clone().startOf(e)<=i&&i<=+this.clone().endOf(e))},min:o("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(t){return t=wt.apply(null,arguments),this>t?this:t}),max:o("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(t){return t=wt.apply(null,arguments),t>this?this:t}),zone:o("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",function(t,e){return null!=t?("string"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()}),utcOffset:function(t,e){var i,n=this._offset||0;return null!=t?("string"==typeof t&&(t=B(t)),Math.abs(t)<16&&(t=60*t),!this._isUTC&&e&&(i=this._dateUtcOffset()),this._offset=t,this._isUTC=!0,null!=i&&this.add(i,"m"),n!==t&&(!e||this._changeInProgress?w(this,wt.duration(t-n,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,wt.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?n:this._dateUtcOffset()},isLocal:function(){return!this._isUTC},isUtcOffset:function(){return this._isUTC},isUtc:function(){return this._isUTC&&0===this._offset},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.utcOffset(this._tzm):"string"==typeof this._i&&this.utcOffset(B(this._i)),this},hasAlignedHourOffset:function(t){return t=t?wt(t).utcOffset():0,(this.utcOffset()-t)%60===0},daysInMonth:function(){return M(this.year(),this.month())},dayOfYear:function(t){var e=Tt((wt(this).startOf("day")-wt(this).startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"d")},quarter:function(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)},weekYear:function(t){var e=ht(this,this.localeData()._week.dow,this.localeData()._week.doy).year;return null==t?e:this.add(t-e,"y")},isoWeekYear:function(t){var e=ht(this,1,4).year;return null==t?e:this.add(t-e,"y")},week:function(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),"d")},isoWeek:function(t){var e=ht(this,1,4).week;return null==t?e:this.add(7*(t-e),"d")},weekday:function(t){var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,"d")},isoWeekday:function(t){return null==t?this.day()||7:this.day(this.day()%7?t:t-7)},isoWeeksInYear:function(){return I(this.year(),1,4)},weeksInYear:function(){var t=this.localeData()._week;return I(this.year(),t.dow,t.doy)},get:function(t){return t=S(t),this[t]()},set:function(t,e){var i;if("object"==typeof t)for(i in t)this.set(i,t[i]);else t=S(t),"function"==typeof this[t]&&this[t](e);return this},locale:function(e){var i;return e===t?this._locale._abbr:(i=wt.localeData(e),null!=i&&(this._locale=i),this)},lang:o("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(e){return e===t?this.localeData():this.locale(e)}),localeData:function(){return this._locale},_dateUtcOffset:function(){return 15*-Math.round(this._d.getTimezoneOffset()/15)}}),wt.fn.millisecond=wt.fn.milliseconds=gt("Milliseconds",!1),wt.fn.second=wt.fn.seconds=gt("Seconds",!1),wt.fn.minute=wt.fn.minutes=gt("Minutes",!1),wt.fn.hour=wt.fn.hours=gt("Hours",!0),wt.fn.date=gt("Date",!0),wt.fn.dates=o("dates accessor is deprecated. Use date instead.",gt("Date",!0)),wt.fn.year=gt("FullYear",!0),wt.fn.years=o("years accessor is deprecated. Use year instead.",gt("FullYear",!0)),wt.fn.days=wt.fn.day,wt.fn.months=wt.fn.month,wt.fn.weeks=wt.fn.week,wt.fn.isoWeeks=wt.fn.isoWeek,wt.fn.quarters=wt.fn.quarter,wt.fn.toJSON=wt.fn.toISOString,wt.fn.isUTC=wt.fn.isUtc,p(wt.duration.fn=f.prototype,{_bubble:function(){var t,e,i,n=this._milliseconds,s=this._days,o=this._months,a=this._data,r=0;a.milliseconds=n%1e3,t=g(n/1e3),a.seconds=t%60,e=g(t/60),a.minutes=e%60,i=g(e/60),a.hours=i%24,s+=g(i/24),r=g(vt(s)),s-=g(bt(r)),o+=g(s/30),s%=30,r+=g(o/12),o%=12,a.days=s,a.months=o,a.years=r},
abs:function(){return this._milliseconds=Math.abs(this._milliseconds),this._days=Math.abs(this._days),this._months=Math.abs(this._months),this._data.milliseconds=Math.abs(this._data.milliseconds),this._data.seconds=Math.abs(this._data.seconds),this._data.minutes=Math.abs(this._data.minutes),this._data.hours=Math.abs(this._data.hours),this._data.months=Math.abs(this._data.months),this._data.years=Math.abs(this._data.years),this},weeks:function(){return g(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*E(this._months/12)},humanize:function(t){var e=lt(this,!t,this.localeData());return t&&(e=this.localeData().pastFuture(+this,e)),this.localeData().postformat(e)},add:function(t,e){var i=wt.duration(t,e);return this._milliseconds+=i._milliseconds,this._days+=i._days,this._months+=i._months,this._bubble(),this},subtract:function(t,e){var i=wt.duration(t,e);return this._milliseconds-=i._milliseconds,this._days-=i._days,this._months-=i._months,this._bubble(),this},get:function(t){return t=S(t),this[t.toLowerCase()+"s"]()},as:function(t){var e,i;if(t=S(t),"month"===t||"year"===t)return e=this._days+this._milliseconds/864e5,i=this._months+12*vt(e),"month"===t?i:i/12;switch(e=this._days+Math.round(bt(this._months/12)),t){case"week":return e/7+this._milliseconds/6048e5;case"day":return e+this._milliseconds/864e5;case"hour":return 24*e+this._milliseconds/36e5;case"minute":return 24*e*60+this._milliseconds/6e4;case"second":return 24*e*60*60+this._milliseconds/1e3;case"millisecond":return Math.floor(24*e*60*60*1e3)+this._milliseconds;default:throw new Error("Unknown unit "+t)}},lang:wt.fn.lang,locale:wt.fn.locale,toIsoString:o("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",function(){return this.toISOString()}),toISOString:function(){var t=Math.abs(this.years()),e=Math.abs(this.months()),i=Math.abs(this.days()),n=Math.abs(this.hours()),s=Math.abs(this.minutes()),o=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(t?t+"Y":"")+(e?e+"M":"")+(i?i+"D":"")+(n||s||o?"T":"")+(n?n+"H":"")+(s?s+"M":"")+(o?o+"S":""):"P0D"},localeData:function(){return this._locale},toJSON:function(){return this.toISOString()}}),wt.duration.fn.toString=wt.duration.fn.toISOString;for(Dt in ce)i(ce,Dt)&&yt(Dt.toLowerCase());wt.duration.fn.asMilliseconds=function(){return this.as("ms")},wt.duration.fn.asSeconds=function(){return this.as("s")},wt.duration.fn.asMinutes=function(){return this.as("m")},wt.duration.fn.asHours=function(){return this.as("h")},wt.duration.fn.asDays=function(){return this.as("d")},wt.duration.fn.asWeeks=function(){return this.as("weeks")},wt.duration.fn.asMonths=function(){return this.as("M")},wt.duration.fn.asYears=function(){return this.as("y")},wt.locale("en",{ordinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10,i=1===E(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th";return t+i}}),Rt?module.exports=wt:"function"==typeof define&&define.amd?(define(function(t,e,i){return i.config&&i.config()&&i.config().noGlobal===!0&&(St.moment=xt),wt}),_t(!0)):_t()}.call(this),function(t){"function"==typeof define&&define.amd?define(["jquery","moment"],t):t(jQuery,moment)}(function(t,e){function i(){var e,i,n,s,o,a=Array.prototype.slice.call(arguments),r={};for(e=0;e<Lt.length;e++){for(i=Lt[e],n=null,s=0;s<a.length;s++)o=a[s][i],t.isPlainObject(o)?n=t.extend(n||{},o):null!=o&&(n=null);null!==n&&(r[i]=n)}return a.unshift({}),a.push(r),t.extend.apply(t,a)}function n(e){var i,n={views:e.views||{}};return t.each(e,function(e,s){"views"!=e&&(t.isPlainObject(s)&&!/(time|duration|interval)$/i.test(e)&&t.inArray(e,Lt)==-1?(i=null,t.each(s,function(t,s){/^(month|week|day|default|basic(Week|Day)?|agenda(Week|Day)?)$/.test(t)?(n.views[t]||(n.views[t]={}),n.views[t][e]=s):(i||(i={}),i[t]=s)}),i&&(n[e]=i)):n[e]=s)}),n}function s(t,e){e.left&&t.css({"border-left-width":1,"margin-left":e.left-1}),e.right&&t.css({"border-right-width":1,"margin-right":e.right-1})}function o(t){t.css({"margin-left":"","margin-right":"","border-left-width":"","border-right-width":""})}function a(){t("body").addClass("fc-not-allowed")}function r(){t("body").removeClass("fc-not-allowed")}function l(e,i,n){var s=Math.floor(i/e.length),o=Math.floor(i-s*(e.length-1)),a=[],r=[],l=[],c=0;h(e),e.each(function(i,n){var h=i===e.length-1?o:s,u=t(n).outerHeight(!0);u<h?(a.push(n),r.push(u),l.push(t(n).height())):c+=u}),n&&(i-=c,s=Math.floor(i/a.length),o=Math.floor(i-s*(a.length-1))),t(a).each(function(e,i){var n=e===a.length-1?o:s,h=r[e],c=l[e],u=n-(h-c);h<n&&t(i).height(u)})}function h(t){t.height("")}function c(e){var i=0;return e.find("> *").each(function(e,n){var s=t(n).outerWidth();s>i&&(i=s)}),i++,e.width(i),i}function u(t,e){return t.height(e).addClass("fc-scroller"),t[0].scrollHeight-1>t[0].clientHeight||(d(t),!1)}function d(t){t.height("").removeClass("fc-scroller")}function f(e){var i=e.css("position"),n=e.parents().filter(function(){var e=t(this);return/(auto|scroll)/.test(e.css("overflow")+e.css("overflow-y")+e.css("overflow-x"))}).eq(0);return"fixed"!==i&&n.length?n:t(e[0].ownerDocument||document)}function p(t){var e=t.offset();return{left:e.left,right:e.left+t.outerWidth(),top:e.top,bottom:e.top+t.outerHeight()}}function m(t){var e=t.offset(),i=v(t),n=e.left+_(t,"border-left-width")+i.left,s=e.top+_(t,"border-top-width")+i.top;return{left:n,right:n+t[0].clientWidth,top:s,bottom:s+t[0].clientHeight}}function g(t){var e=t.offset(),i=e.left+_(t,"border-left-width")+_(t,"padding-left"),n=e.top+_(t,"border-top-width")+_(t,"padding-top");return{left:i,right:i+t.width(),top:n,bottom:n+t.height()}}function v(t){var e=t.innerWidth()-t[0].clientWidth,i={left:0,right:0,top:0,bottom:t.innerHeight()-t[0].clientHeight};return b()&&"rtl"==t.css("direction")?i.left=e:i.right=e,i}function b(){return null===Rt&&(Rt=y()),Rt}function y(){var e=t("<div><div/></div>").css({position:"absolute",top:-1e3,left:0,border:0,padding:0,overflow:"scroll",direction:"rtl"}).appendTo("body"),i=e.children(),n=i.offset().left>e.offset().left;return e.remove(),n}function _(t,e){return parseFloat(t.css(e))||0}function w(t){return 1==t.which&&!t.ctrlKey}function x(t,e){var i={left:Math.max(t.left,e.left),right:Math.min(t.right,e.right),top:Math.max(t.top,e.top),bottom:Math.min(t.bottom,e.bottom)};return i.left<i.right&&i.top<i.bottom&&i}function D(t,e){return{left:Math.min(Math.max(t.left,e.left),e.right),top:Math.min(Math.max(t.top,e.top),e.bottom)}}function C(t){return{left:(t.left+t.right)/2,top:(t.top+t.bottom)/2}}function S(t,e){return{left:t.left-e.left,top:t.top-e.top}}function T(t,e){var i,n,s,o,a=t.start,r=t.end,l=e.start,h=e.end;if(r>l&&a<h)return a>=l?(i=a.clone(),s=!0):(i=l.clone(),s=!1),r<=h?(n=r.clone(),o=!0):(n=h.clone(),o=!1),{start:i,end:n,isStart:s,isEnd:o}}function k(t,i){return e.duration({days:t.clone().stripTime().diff(i.clone().stripTime(),"days"),ms:t.time()-i.time()})}function E(t,i){return e.duration({days:t.clone().stripTime().diff(i.clone().stripTime(),"days")})}function M(t,i,n){return e.duration(Math.round(t.diff(i,n,!0)),n)}function I(t,e){var i,n,s;for(i=0;i<jt.length&&(n=jt[i],s=A(n,t,e),!(s>=1&&V(s)));i++);return n}function A(t,i,n){return null!=n?n.diff(i,t,!0):e.isDuration(i)?i.as(t):i.end.diff(i.start,t,!0)}function P(t){return Boolean(t.hours()||t.minutes()||t.seconds()||t.milliseconds())}function H(t){return"[object Date]"===Object.prototype.toString.call(t)||t instanceof Date}function O(t){return/^\d+\:\d+(?:\:\d+\.?(?:\d{3})?)?$/.test(t)}function N(t){var e=function(){};return e.prototype=t,new e}function L(t,e){for(var i in t)F(t,i)&&(e[i]=t[i])}function R(t,e){var i,n,s=["constructor","toString","valueOf"];for(i=0;i<s.length;i++)n=s[i],t[n]!==Object.prototype[n]&&(e[n]=t[n])}function F(t,e){return Yt.call(t,e)}function z(e){return/undefined|null|boolean|number|string/.test(t.type(e))}function $(e,i,n){if(t.isFunction(e)&&(e=[e]),e){var s,o;for(s=0;s<e.length;s++)o=e[s].apply(i,n)||o;return o}}function W(){for(var t=0;t<arguments.length;t++)if(void 0!==arguments[t])return arguments[t]}function j(t){return(t+"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/'/g,"&#039;").replace(/"/g,"&quot;").replace(/\n/g,"<br />")}function Y(t){return t.replace(/&.*?;/g,"")}function B(e){var i=[];return t.each(e,function(t,e){null!=e&&i.push(t+":"+e)}),i.join(";")}function q(t){return t.charAt(0).toUpperCase()+t.slice(1)}function U(t,e){return t-e}function V(t){return t%1===0}function G(t,e){var i=t[e];return function(){return i.apply(t,arguments)}}function X(t,e){var i,n,s,o,a=function(){var r=+new Date-o;r<e&&r>0?i=setTimeout(a,e-r):(i=null,t.apply(s,n),i||(s=n=null))};return function(){s=this,n=arguments,o=+new Date,i||(i=setTimeout(a,e))}}function Z(i,n,s){var o,a,r,l,h=i[0],c=1==i.length&&"string"==typeof h;return e.isMoment(h)?(l=e.apply(null,i),J(h,l)):H(h)||void 0===h?l=e.apply(null,i):(o=!1,a=!1,c?Bt.test(h)?(h+="-01",i=[h],o=!0,a=!0):(r=qt.exec(h))&&(o=!r[5],a=!0):t.isArray(h)&&(a=!0),l=n||o?e.utc.apply(e,i):e.apply(null,i),o?(l._ambigTime=!0,l._ambigZone=!0):s&&(a?l._ambigZone=!0:c&&(l.utcOffset?l.utcOffset(h):l.zone(h)))),l._fullCalendar=!0,l}function K(t,i){var n,s,o=!1,a=!1,r=t.length,l=[];for(n=0;n<r;n++)s=t[n],e.isMoment(s)||(s=Ot.moment.parseZone(s)),o=o||s._ambigTime,a=a||s._ambigZone,l.push(s);for(n=0;n<r;n++)s=l[n],i||!o||s._ambigTime?a&&!s._ambigZone&&(l[n]=s.clone().stripZone()):l[n]=s.clone().stripTime();return l}function J(t,e){t._ambigTime?e._ambigTime=!0:e._ambigTime&&(e._ambigTime=!1),t._ambigZone?e._ambigZone=!0:e._ambigZone&&(e._ambigZone=!1)}function Q(t,e){t.year(e[0]||0).month(e[1]||0).date(e[2]||0).hours(e[3]||0).minutes(e[4]||0).seconds(e[5]||0).milliseconds(e[6]||0)}function tt(t,e){return Vt.format.call(t,e)}function et(t,e){return it(t,rt(e))}function it(t,e){var i,n="";for(i=0;i<e.length;i++)n+=nt(t,e[i]);return n}function nt(t,e){var i,n;return"string"==typeof e?e:(i=e.token)?Gt[i]?Gt[i](t):tt(t,i):e.maybe&&(n=it(t,e.maybe),n.match(/[1-9]/))?n:""}function st(t,e,i,n,s){var o;return t=Ot.moment.parseZone(t),e=Ot.moment.parseZone(e),o=(t.localeData||t.lang).call(t),i=o.longDateFormat(i)||i,n=n||" - ",ot(t,e,rt(i),n,s)}function ot(t,e,i,n,s){var o,a,r,l,h="",c="",u="",d="",f="";for(a=0;a<i.length&&(o=at(t,e,i[a]),o!==!1);a++)h+=o;for(r=i.length-1;r>a&&(o=at(t,e,i[r]),o!==!1);r--)c=o+c;for(l=a;l<=r;l++)u+=nt(t,i[l]),d+=nt(e,i[l]);return(u||d)&&(f=s?d+n+u:u+n+d),h+f+c}function at(t,e,i){var n,s;return"string"==typeof i?i:!!((n=i.token)&&(s=Xt[n.charAt(0)],s&&t.isSame(e,s)))&&tt(t,n)}function rt(t){return t in Zt?Zt[t]:Zt[t]=lt(t)}function lt(t){for(var e,i=[],n=/\[([^\]]*)\]|\(([^\)]*)\)|(LTS|LT|(\w)\4*o?)|([^\w\[\(]+)/g;e=n.exec(t);)e[1]?i.push(e[1]):e[2]?i.push({maybe:lt(e[2])}):e[3]?i.push({token:e[3]}):e[5]&&i.push(e[5]);return i}function ht(){}function ct(t,e){return!t&&!e||!(!t||!e)&&(t.grid===e.grid&&t.row===e.row&&t.col===e.col)}function ut(t){var e=ft(t);return"background"===e||"inverse-background"===e}function dt(t){return"inverse-background"===ft(t)}function ft(t){return W((t.source||{}).rendering,t.rendering)}function pt(t){var e,i,n={};for(e=0;e<t.length;e++)i=t[e],(n[i._id]||(n[i._id]=[])).push(i);return n}function mt(t,e){return t.eventStartMS-e.eventStartMS}function gt(t,e){return t.eventStartMS-e.eventStartMS||e.eventDurationMS-t.eventDurationMS||e.event.allDay-t.event.allDay||(t.event.title||"").localeCompare(e.event.title)}function vt(i){var n,s,o,a,r=Ot.dataAttrPrefix;return r&&(r+="-"),n=i.data(r+"event")||null,n&&(n="object"==typeof n?t.extend({},n):{},s=n.start,null==s&&(s=n.time),o=n.duration,a=n.stick,delete n.start,delete n.time,delete n.duration,delete n.stick),null==s&&(s=i.data(r+"start")),null==s&&(s=i.data(r+"time")),null==o&&(o=i.data(r+"duration")),null==a&&(a=i.data(r+"stick")),s=null!=s?e.duration(s):null,o=null!=o?e.duration(o):null,a=Boolean(a),{eventProps:n,startTime:s,duration:o,stick:a}}function bt(t,e){var i,n;for(i=0;i<e.length;i++)if(n=e[i],n.leftCol<=t.rightCol&&n.rightCol>=t.leftCol)return!0;return!1}function yt(t,e){return t.leftCol-e.leftCol}function _t(t){var e,i,n;if(t.sort(gt),e=wt(t),xt(e),i=e[0]){for(n=0;n<i.length;n++)Dt(i[n]);for(n=0;n<i.length;n++)Ct(i[n],0,0)}}function wt(t){var e,i,n,s=[];for(e=0;e<t.length;e++){for(i=t[e],n=0;n<s.length&&St(i,s[n]).length;n++);i.level=n,(s[n]||(s[n]=[])).push(i)}return s}function xt(t){var e,i,n,s,o;for(e=0;e<t.length;e++)for(i=t[e],n=0;n<i.length;n++)for(s=i[n],s.forwardSegs=[],o=e+1;o<t.length;o++)St(s,t[o],s.forwardSegs)}function Dt(t){var e,i,n=t.forwardSegs,s=0;if(void 0===t.forwardPressure){for(e=0;e<n.length;e++)i=n[e],Dt(i),s=Math.max(s,1+i.forwardPressure);t.forwardPressure=s}}function Ct(t,e,i){var n,s=t.forwardSegs;if(void 0===t.forwardCoord)for(s.length?(s.sort(kt),Ct(s[0],e+1,i),t.forwardCoord=s[0].backwardCoord):t.forwardCoord=1,t.backwardCoord=t.forwardCoord-(t.forwardCoord-i)/(e+1),n=0;n<s.length;n++)Ct(s[n],0,t.forwardCoord)}function St(t,e,i){i=i||[];for(var n=0;n<e.length;n++)Tt(t,e[n])&&i.push(e[n]);return i}function Tt(t,e){return t.bottom>e.top&&t.top<e.bottom}function kt(t,e){return e.forwardPressure-t.forwardPressure||(t.backwardCoord||0)-(e.backwardCoord||0)||gt(t,e)}function Et(i,n){function s(){U?r()&&(c(),l()):o()}function o(){V=W.theme?"ui":"fc",i.addClass("fc"),W.isRTL?i.addClass("fc-rtl"):i.addClass("fc-ltr"),W.theme?i.addClass("ui-widget"):i.addClass("fc-unthemed"),U=t("<div class='fc-view-container'/>").prependTo(i),B=$.header=new At($,W),q=B.render(),q&&i.prepend(q),l(W.defaultView),W.handleWindowResize&&(K=X(d,W.windowResizeDelay),t(window).resize(K))}function a(){G&&G.removeElement(),B.destroy(),U.remove(),i.removeClass("fc fc-ltr fc-rtl fc-unthemed ui-widget"),K&&t(window).unbind("resize",K)}function r(){return i.is(":visible")}function l(e){nt++,G&&e&&G.type!==e&&(B.deactivateButton(G.type),H(),G.removeElement(),G=$.view=null),!G&&e&&(G=$.view=it[e]||(it[e]=$.instantiateView(e)),G.setElement(t("<div class='fc-view fc-"+e+"-view' />").appendTo(U)),B.activateButton(e)),G&&(J=G.massageCurrentDate(J),G.isDisplayed&&J.isWithin(G.intervalStart,G.intervalEnd)||r()&&(H(),G.display(J),O(),_(),w(),g())),O(),nt--}function h(t){if(r())return t&&u(),nt++,G.updateSize(!0),nt--,!0}function c(){r()&&u()}function u(){Z="number"==typeof W.contentHeight?W.contentHeight:"number"==typeof W.height?W.height-(q?q.outerHeight(!0):0):Math.round(U.width()/Math.max(W.aspectRatio,.5))}function d(t){!nt&&t.target===window&&G.start&&h(!0)&&G.trigger("windowResize",et)}function f(){m(),v()}function p(){r()&&(H(),G.displayEvents(st),O())}function m(){H(),G.clearEvents(),O()}function g(){!W.lazyFetching||Q(G.start,G.end)?v():p()}function v(){tt(G.start,G.end)}function b(t){st=t,p()}function y(){p()}function _(){B.updateTitle(G.title)}function w(){var t=$.getNow();t.isWithin(G.intervalStart,G.intervalEnd)?B.disableButton("today"):B.enableButton("today")}function x(t,e){t=$.moment(t),e=e?$.moment(e):t.hasTime()?t.clone().add($.defaultTimedEventDuration):t.clone().add($.defaultAllDayEventDuration),G.select({start:t,end:e})}function D(){G&&G.unselect()}function C(){J=G.computePrevDate(J),l()}function S(){J=G.computeNextDate(J),l()}function T(){J.add(-1,"years"),l()}function k(){J.add(1,"years"),l()}function E(){J=$.getNow(),l()}function M(t){J=$.moment(t),l()}function I(t){J.add(e.duration(t)),l()}function A(t,e){var i;e=e||"day",i=$.getViewSpec(e)||$.getUnitViewSpec(e),J=t,l(i?i.type:null)}function P(){return J.clone()}function H(){U.css({width:"100%",height:U.height(),overflow:"hidden"})}function O(){U.css({width:"",height:"",overflow:""})}function L(){return $}function R(){return G}function F(t,e){return void 0===e?W[t]:void("height"!=t&&"contentHeight"!=t&&"aspectRatio"!=t||(W[t]=e,h(!0)))}function z(t,e){if(W[t])return W[t].apply(e||et,Array.prototype.slice.call(arguments,2))}var $=this;$.initOptions(n||{});var W=this.options;$.render=s,$.destroy=a,$.refetchEvents=f,$.reportEvents=b,$.reportEventChange=y,$.rerenderEvents=p,$.changeView=l,$.select=x,$.unselect=D,$.prev=C,$.next=S,$.prevYear=T,$.nextYear=k,$.today=E,$.gotoDate=M,$.incrementDate=I,$.zoomTo=A,$.getDate=P,$.getCalendar=L,$.getView=R,$.option=F,$.trigger=z;var j=N(It(W.lang));if(W.monthNames&&(j._months=W.monthNames),W.monthNamesShort&&(j._monthsShort=W.monthNamesShort),W.dayNames&&(j._weekdays=W.dayNames),W.dayNamesShort&&(j._weekdaysShort=W.dayNamesShort),null!=W.firstDay){var Y=N(j._week);Y.dow=W.firstDay,j._week=Y}j._fullCalendar_weekCalc=function(t){return"function"==typeof t?t:"local"===t?t:"iso"===t||"ISO"===t?"ISO":void 0}(W.weekNumberCalculation),$.defaultAllDayEventDuration=e.duration(W.defaultAllDayEventDuration),$.defaultTimedEventDuration=e.duration(W.defaultTimedEventDuration),$.moment=function(){var t;return"local"===W.timezone?(t=Ot.moment.apply(null,arguments),t.hasTime()&&t.local()):t="UTC"===W.timezone?Ot.moment.utc.apply(null,arguments):Ot.moment.parseZone.apply(null,arguments),"_locale"in t?t._locale=j:t._lang=j,t},$.getIsAmbigTimezone=function(){return"local"!==W.timezone&&"UTC"!==W.timezone},$.rezoneDate=function(t){return $.moment(t.toArray())},$.getNow=function(){var t=W.now;return"function"==typeof t&&(t=t()),$.moment(t)},$.getEventEnd=function(t){return t.end?t.end.clone():$.getDefaultEventEnd(t.allDay,t.start)},$.getDefaultEventEnd=function(t,e){var i=e.clone();return t?i.stripTime().add($.defaultAllDayEventDuration):i.add($.defaultTimedEventDuration),$.getIsAmbigTimezone()&&i.stripZone(),i},$.humanizeDuration=function(t){return(t.locale||t.lang).call(t,W.lang).humanize()},Pt.call($,W);var B,q,U,V,G,Z,K,J,Q=$.isFetchNeeded,tt=$.fetchEvents,et=i[0],it={},nt=0,st=[];J=null!=W.defaultDate?$.moment(W.defaultDate):$.getNow(),$.getSuggestedViewHeight=function(){return void 0===Z&&c(),Z},$.isHeightAuto=function(){return"auto"===W.contentHeight||"auto"===W.height}}function Mt(e){t.each(de,function(t,i){null==e[t]&&(e[t]=i(e))})}function It(t){var i=e.localeData||e.langData;return i.call(e,t)||i.call(e,"en")}function At(e,i){function n(){var e=i.header;if(f=i.theme?"ui":"fc",e)return p=t("<div class='fc-toolbar'/>").append(o("left")).append(o("right")).append(o("center")).append('<div class="fc-clear"/>')}function s(){p.remove()}function o(n){var s=t('<div class="fc-'+n+'"/>'),o=i.header[n];return o&&t.each(o.split(" "),function(n){var o,a=t(),r=!0;t.each(this.split(","),function(n,s){var o,l,h,c,u,d,p,g,v;"title"==s?(a=a.add(t("<h2>&nbsp;</h2>")),r=!1):(o=e.getViewSpec(s),o?(l=function(){e.changeView(s)},m.push(s),h=o.buttonTextOverride,c=o.buttonTextDefault):e[s]&&(l=function(){e[s]()},h=(e.overrides.buttonText||{})[s],c=i.buttonText[s]),l&&(u=i.themeButtonIcons[s],d=i.buttonIcons[s],p=h?j(h):u&&i.theme?"<span class='ui-icon ui-icon-"+u+"'></span>":d&&!i.theme?"<span class='fc-icon fc-icon-"+d+"'></span>":j(c),g=["fc-"+s+"-button",f+"-button",f+"-state-default"],v=t('<button type="button" class="'+g.join(" ")+'">'+p+"</button>").click(function(){v.hasClass(f+"-state-disabled")||(l(),(v.hasClass(f+"-state-active")||v.hasClass(f+"-state-disabled"))&&v.removeClass(f+"-state-hover"))}).mousedown(function(){v.not("."+f+"-state-active").not("."+f+"-state-disabled").addClass(f+"-state-down")}).mouseup(function(){v.removeClass(f+"-state-down")}).hover(function(){v.not("."+f+"-state-active").not("."+f+"-state-disabled").addClass(f+"-state-hover")},function(){v.removeClass(f+"-state-hover").removeClass(f+"-state-down")}),a=a.add(v)))}),r&&a.first().addClass(f+"-corner-left").end().last().addClass(f+"-corner-right").end(),a.length>1?(o=t("<div/>"),r&&o.addClass("fc-button-group"),o.append(a),s.append(o)):s.append(a)}),s}function a(t){p.find("h2").text(t)}function r(t){p.find(".fc-"+t+"-button").addClass(f+"-state-active")}function l(t){p.find(".fc-"+t+"-button").removeClass(f+"-state-active")}function h(t){p.find(".fc-"+t+"-button").attr("disabled","disabled").addClass(f+"-state-disabled")}function c(t){p.find(".fc-"+t+"-button").removeAttr("disabled").removeClass(f+"-state-disabled")}function u(){return m}var d=this;d.render=n,d.destroy=s,d.updateTitle=a,d.activateButton=r,d.deactivateButton=l,d.disableButton=h,d.enableButton=c,d.getViewsWithButtons=u;var f,p=t(),m=[]}function Pt(i){function n(t,e){return!B||t.clone().stripZone()<B.clone().stripZone()||e.clone().stripZone()>q.clone().stripZone()}function s(t,e){B=t,q=e,tt=[];var i=++K,n=Z.length;J=n;for(var s=0;s<n;s++)o(Z[s],i)}function o(e,i){a(e,function(n){var s,o,a,r=t.isArray(e.events);if(i==K){if(n)for(s=0;s<n.length;s++)o=n[s],a=r?o:_(o,e),a&&tt.push.apply(tt,S(a));J--,J||G(tt)}})}function a(e,n){var s,o,r=Ot.sourceFetchers;for(s=0;s<r.length;s++){if(o=r[s].call(Y,e,B.clone(),q.clone(),i.timezone,n),o===!0)return;if("object"==typeof o)return void a(o,n)}var l=e.events;if(l)t.isFunction(l)?(b(),l.call(Y,B.clone(),q.clone(),i.timezone,function(t){n(t),y()})):t.isArray(l)?n(l):n();else{var h=e.url;if(h){var c,u=e.success,d=e.error,f=e.complete;c=t.isFunction(e.data)?e.data():e.data;var p=t.extend({},c||{}),m=W(e.startParam,i.startParam),g=W(e.endParam,i.endParam),v=W(e.timezoneParam,i.timezoneParam);m&&(p[m]=B.format()),g&&(p[g]=q.format()),i.timezone&&"local"!=i.timezone&&(p[v]=i.timezone),b(),t.ajax(t.extend({},fe,e,{data:p,success:function(e){e=e||[];var i=$(u,this,arguments);t.isArray(i)&&(e=i),n(e)},error:function(){$(d,this,arguments),n()},complete:function(){$(f,this,arguments),y()}}))}else n()}}function r(t){var e=l(t);e&&(Z.push(e),J++,o(e,K))}function l(e){var i,n,s=Ot.sourceNormalizers;if(t.isFunction(e)||t.isArray(e)?i={events:e}:"string"==typeof e?i={url:e}:"object"==typeof e&&(i=t.extend({},e)),i){for(i.className?"string"==typeof i.className&&(i.className=i.className.split(/\s+/)):i.className=[],t.isArray(i.events)&&(i.origArray=i.events,i.events=t.map(i.events,function(t){return _(t,i)})),n=0;n<s.length;n++)s[n].call(Y,i);return i}}function h(e){Z=t.grep(Z,function(t){return!c(t,e)}),tt=t.grep(tt,function(t){return!c(t.source,e)}),G(tt)}function c(t,e){return t&&e&&u(t)==u(e)}function u(t){return("object"==typeof t?t.origArray||t.googleCalendarId||t.url||t.events:null)||t}function d(t){t.start=Y.moment(t.start),t.end?t.end=Y.moment(t.end):t.end=null,T(t,f(t)),G(tt)}function f(e){var i={};return t.each(e,function(t,e){p(t)&&void 0!==e&&z(e)&&(i[t]=e)}),i}function p(t){return!/^_|^(id|allDay|start|end)$/.test(t)}function m(t,e){var i,n,s,o=_(t);if(o){for(i=S(o),n=0;n<i.length;n++)s=i[n],s.source||(e&&(X.events.push(s),s.source=X),tt.push(s));return G(tt),i}return[]}function g(e){var i,n;for(null==e?e=function(){return!0}:t.isFunction(e)||(i=e+"",e=function(t){return t._id==i}),tt=t.grep(tt,e,!0),n=0;n<Z.length;n++)t.isArray(Z[n].events)&&(Z[n].events=t.grep(Z[n].events,e,!0));G(tt)}function v(e){return t.isFunction(e)?t.grep(tt,e):null!=e?(e+="",t.grep(tt,function(t){return t._id==e})):tt}function b(){Q++||U("loading",null,!0,V())}function y(){--Q||U("loading",null,!1,V())}function _(n,s){var o,a,r,l={};if(i.eventDataTransform&&(n=i.eventDataTransform(n)),s&&s.eventDataTransform&&(n=s.eventDataTransform(n)),t.extend(l,n),s&&(l.source=s),l._id=n._id||(void 0===n.id?"_fc"+pe++:n.id+""),n.className?"string"==typeof n.className?l.className=n.className.split(/\s+/):l.className=n.className:l.className=[],o=n.start||n.date,a=n.end,O(o)&&(o=e.duration(o)),O(a)&&(a=e.duration(a)),n.dow||e.isDuration(o)||e.isDuration(a))l.start=o?e.duration(o):null,l.end=a?e.duration(a):null,l._recurring=!0;else{if(o&&(o=Y.moment(o),!o.isValid()))return!1;a&&(a=Y.moment(a),a.isValid()||(a=null)),r=n.allDay,void 0===r&&(r=W(s?s.allDayDefault:void 0,i.allDayDefault)),w(o,a,r,l)}return l}function w(t,e,i,n){n.start=t,n.end=e,n.allDay=i,x(n),Ht(n)}function x(t){D(t),t.end&&!t.end.isAfter(t.start)&&(t.end=null),t.end||(i.forceEventDuration?t.end=Y.getDefaultEventEnd(t.allDay,t.start):t.end=null)}function D(t){null==t.allDay&&(t.allDay=!(t.start.hasTime()||t.end&&t.end.hasTime())),t.allDay?(t.start.stripTime(),t.end&&t.end.stripTime()):(t.start.hasTime()||(t.start=Y.rezoneDate(t.start)),t.end&&!t.end.hasTime()&&(t.end=Y.rezoneDate(t.end)))}function C(e){var i;return e.end||(i=e.allDay,null==i&&(i=!e.start.hasTime()),e=t.extend({},e),e.end=Y.getDefaultEventEnd(i,e.start)),e}function S(e,i,n){var s,o,a,r,l,h,c,u,d,f=[];if(i=i||B,n=n||q,e)if(e._recurring){if(o=e.dow)for(s={},a=0;a<o.length;a++)s[o[a]]=!0;for(r=i.clone().stripTime();r.isBefore(n);)s&&!s[r.day()]||(l=e.start,h=e.end,c=r.clone(),u=null,l&&(c=c.time(l)),h&&(u=r.clone().time(h)),d=t.extend({},e),w(c,u,!l&&!h,d),f.push(d)),r.add(1,"days")}else f.push(e);return f}function T(e,i,n){function s(t,e){return n?M(t,e,n):i.allDay?E(t,e):k(t,e)}var o,a,r,l,h,c,u={};return i=i||{},i.start||(i.start=e.start.clone()),void 0===i.end&&(i.end=e.end?e.end.clone():null),null==i.allDay&&(i.allDay=e.allDay),x(i),o={start:e._start.clone(),end:e._end?e._end.clone():Y.getDefaultEventEnd(e._allDay,e._start),allDay:i.allDay},x(o),a=null!==e._end&&null===i.end,r=s(i.start,o.start),i.end?(l=s(i.end,o.end),h=l.subtract(r)):h=null,t.each(i,function(t,e){p(t)&&void 0!==e&&(u[t]=e)}),c=I(v(e._id),a,i.allDay,r,h,u),{dateDelta:r,durationDelta:h,undo:c}}function I(e,i,n,s,o,a){var r=Y.getIsAmbigTimezone(),l=[];return s&&!s.valueOf()&&(s=null),o&&!o.valueOf()&&(o=null),t.each(e,function(e,h){var c,u;c={start:h.start.clone(),end:h.end?h.end.clone():null,allDay:h.allDay},t.each(a,function(t){c[t]=h[t]}),u={start:h._start,end:h._end,allDay:n},x(u),i?u.end=null:o&&!u.end&&(u.end=Y.getDefaultEventEnd(u.allDay,u.start)),s&&(u.start.add(s),u.end&&u.end.add(s)),o&&u.end.add(o),r&&!u.allDay&&(s||o)&&(u.start.stripZone(),u.end&&u.end.stripZone()),t.extend(h,a,u),Ht(h),l.push(function(){t.extend(h,c),Ht(h)})}),function(){for(var t=0;t<l.length;t++)l[t]()}}function A(e){var n,s=i.businessHours,o={className:"fc-nonbusiness",start:"09:00",end:"17:00",dow:[1,2,3,4,5],rendering:"inverse-background"},a=Y.getView();return s&&(n=t.extend({},o,"object"==typeof s?s:{})),n?(e&&(n.start=null,n.end=null),S(_(n),a.start,a.end)):[]}function P(t,e){var n=e.source||{},s=W(e.constraint,n.constraint,i.eventConstraint),o=W(e.overlap,n.overlap,i.eventOverlap);return t=C(t),L(t,s,o,e)}function H(t){return L(t,i.selectConstraint,i.selectOverlap)}function N(e,i){var n,s;return i&&(n=t.extend({},i,e),s=S(_(n))[0]),s?P(e,s):(e=C(e),H(e))}function L(e,i,n,s){var o,a,r,l,h,c;if(e=t.extend({},e),e.start=e.start.clone().stripZone(),e.end=e.end.clone().stripZone(),null!=i){for(o=R(i),a=!1,l=0;l<o.length;l++)if(F(o[l],e)){a=!0;break}if(!a)return!1}for(r=Y.getPeerEvents(s,e),l=0;l<r.length;l++)if(h=r[l],j(h,e)){if(n===!1)return!1;if("function"==typeof n&&!n(h,s))return!1;if(s){if(c=W(h.overlap,(h.source||{}).overlap),c===!1)return!1;if("function"==typeof c&&!c(s,h))return!1}}return!0}function R(t){return"businessHours"===t?A():"object"==typeof t?S(_(t)):v(t)}function F(t,e){var i=t.start.clone().stripZone(),n=Y.getEventEnd(t).stripZone();return e.start>=i&&e.end<=n}function j(t,e){var i=t.start.clone().stripZone(),n=Y.getEventEnd(t).stripZone();return e.start<n&&e.end>i}var Y=this;Y.isFetchNeeded=n,Y.fetchEvents=s,Y.addEventSource=r,Y.removeEventSource=h,Y.updateEvent=d,Y.renderEvent=m,Y.removeEvents=g,Y.clientEvents=v,Y.mutateEvent=T,Y.normalizeEventRange=x,Y.normalizeEventRangeTimes=D,Y.ensureVisibleEventRange=C;var B,q,U=Y.trigger,V=Y.getView,G=Y.reportEvents,X={events:[]},Z=[X],K=0,J=0,Q=0,tt=[];t.each((i.events?[i.events]:[]).concat(i.eventSources||[]),function(t,e){var i=l(e);i&&Z.push(i)}),Y.getBusinessHoursEvents=A,Y.isEventRangeAllowed=P,Y.isSelectionRangeAllowed=H,Y.isExternalDropRangeAllowed=N,Y.getEventCache=function(){return tt}}function Ht(t){t._allDay=t.allDay,t._start=t.start.clone(),t._end=t.end?t.end.clone():null}var Ot=t.fullCalendar={version:"2.3.0"},Nt=Ot.views={};t.fn.fullCalendar=function(e){var i=Array.prototype.slice.call(arguments,1),n=this;return this.each(function(s,o){var a,r=t(o),l=r.data("fullCalendar");"string"==typeof e?l&&t.isFunction(l[e])&&(a=l[e].apply(l,i),s||(n=a),"destroy"===e&&r.removeData("fullCalendar")):l||(l=new Ot.CalendarBase(r,e),r.data("fullCalendar",l),l.render())}),n};var Lt=["header","buttonText","buttonIcons","themeButtonIcons"];Ot.intersectionToSeg=T,Ot.applyAll=$,Ot.debounce=X,Ot.isInt=V,Ot.htmlEscape=j,Ot.cssToStr=B,Ot.proxy=G,Ot.getClientRect=m,Ot.getContentRect=g,Ot.getScrollbarWidths=v;var Rt=null;Ot.computeIntervalUnit=I,Ot.durationHasTime=P;var Ft,zt,$t,Wt=["sun","mon","tue","wed","thu","fri","sat"],jt=["year","month","week","day","hour","minute","second","millisecond"],Yt={}.hasOwnProperty,Bt=/^\s*\d{4}-\d\d$/,qt=/^\s*\d{4}-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?)?$/,Ut=e.fn,Vt=t.extend({},Ut);Ot.moment=function(){return Z(arguments)},Ot.moment.utc=function(){var t=Z(arguments,!0);return t.hasTime()&&t.utc(),t},Ot.moment.parseZone=function(){return Z(arguments,!0,!0)},Ut.clone=function(){var t=Vt.clone.apply(this,arguments);return J(this,t),this._fullCalendar&&(t._fullCalendar=!0),t},Ut.week=Ut.weeks=function(t){var e=(this._locale||this._lang)._fullCalendar_weekCalc;return null==t&&"function"==typeof e?e(this):"ISO"===e?Vt.isoWeek.apply(this,arguments):Vt.week.apply(this,arguments)},Ut.time=function(t){if(!this._fullCalendar)return Vt.time.apply(this,arguments);if(null==t)return e.duration({hours:this.hours(),minutes:this.minutes(),seconds:this.seconds(),milliseconds:this.milliseconds()});this._ambigTime=!1,e.isDuration(t)||e.isMoment(t)||(t=e.duration(t));var i=0;return e.isDuration(t)&&(i=24*Math.floor(t.asDays())),this.hours(i+t.hours()).minutes(t.minutes()).seconds(t.seconds()).milliseconds(t.milliseconds())},Ut.stripTime=function(){var t;return this._ambigTime||(t=this.toArray(),this.utc(),zt(this,t.slice(0,3)),this._ambigTime=!0,this._ambigZone=!0),this},Ut.hasTime=function(){return!this._ambigTime},Ut.stripZone=function(){var t,e;return this._ambigZone||(t=this.toArray(),e=this._ambigTime,this.utc(),zt(this,t),this._ambigTime=e||!1,this._ambigZone=!0),this},Ut.hasZone=function(){return!this._ambigZone},Ut.local=function(){var t=this.toArray(),e=this._ambigZone;return Vt.local.apply(this,arguments),this._ambigTime=!1,this._ambigZone=!1,e&&$t(this,t),this},Ut.utc=function(){return Vt.utc.apply(this,arguments),this._ambigTime=!1,this._ambigZone=!1,this},t.each(["zone","utcOffset"],function(t,e){Vt[e]&&(Ut[e]=function(t){return null!=t&&(this._ambigTime=!1,this._ambigZone=!1),Vt[e].apply(this,arguments)})}),Ut.format=function(){return this._fullCalendar&&arguments[0]?et(this,arguments[0]):this._ambigTime?tt(this,"YYYY-MM-DD"):this._ambigZone?tt(this,"YYYY-MM-DD[T]HH:mm:ss"):Vt.format.apply(this,arguments)},Ut.toISOString=function(){return this._ambigTime?tt(this,"YYYY-MM-DD"):this._ambigZone?tt(this,"YYYY-MM-DD[T]HH:mm:ss"):Vt.toISOString.apply(this,arguments)},Ut.isWithin=function(t,e){var i=K([this,t,e]);return i[0]>=i[1]&&i[0]<i[2]},Ut.isSame=function(t,e){var i;return this._fullCalendar?e?(i=K([this,t],!0),Vt.isSame.call(i[0],i[1],e)):(t=Ot.moment.parseZone(t),Vt.isSame.call(this,t)&&Boolean(this._ambigTime)===Boolean(t._ambigTime)&&Boolean(this._ambigZone)===Boolean(t._ambigZone)):Vt.isSame.apply(this,arguments)},t.each(["isBefore","isAfter"],function(t,e){Ut[e]=function(t,i){var n;return this._fullCalendar?(n=K([this,t]),Vt[e].call(n[0],n[1],i)):Vt[e].apply(this,arguments)}}),Ft="_d"in e()&&"updateOffset"in e,zt=Ft?function(t,i){t._d.setTime(Date.UTC.apply(Date,i)),e.updateOffset(t,!1)}:Q,$t=Ft?function(t,i){t._d.setTime(+new Date(i[0]||0,i[1]||0,i[2]||0,i[3]||0,i[4]||0,i[5]||0,i[6]||0)),e.updateOffset(t,!1)}:Q;var Gt={t:function(t){return tt(t,"a").charAt(0)},T:function(t){return tt(t,"A").charAt(0)}};Ot.formatRange=st;var Xt={Y:"year",M:"month",D:"day",d:"day",A:"second",a:"second",T:"second",t:"second",H:"second",h:"second",m:"second",s:"second"},Zt={};Ot.Class=ht,ht.extend=function(t){var e,i=this;return t=t||{},F(t,"constructor")&&(e=t.constructor),
"function"!=typeof e&&(e=t.constructor=function(){i.apply(this,arguments)}),e.prototype=N(i.prototype),L(t,e.prototype),R(t,e.prototype),L(i,e),e},ht.mixin=function(t){L(t.prototype||t,this.prototype)};var Kt=ht.extend({isHidden:!0,options:null,el:null,documentMousedownProxy:null,margin:10,constructor:function(t){this.options=t||{}},show:function(){this.isHidden&&(this.el||this.render(),this.el.show(),this.position(),this.isHidden=!1,this.trigger("show"))},hide:function(){this.isHidden||(this.el.hide(),this.isHidden=!0,this.trigger("hide"))},render:function(){var e=this,i=this.options;this.el=t('<div class="fc-popover"/>').addClass(i.className||"").css({top:0,left:0}).append(i.content).appendTo(i.parentEl),this.el.on("click",".fc-close",function(){e.hide()}),i.autoHide&&t(document).on("mousedown",this.documentMousedownProxy=G(this,"documentMousedown"))},documentMousedown:function(e){this.el&&!t(e.target).closest(this.el).length&&this.hide()},destroy:function(){this.hide(),this.el&&(this.el.remove(),this.el=null),t(document).off("mousedown",this.documentMousedownProxy)},position:function(){var e,i,n,s,o,a=this.options,r=this.el.offsetParent().offset(),l=this.el.outerWidth(),h=this.el.outerHeight(),c=t(window),u=f(this.el);s=a.top||0,o=void 0!==a.left?a.left:void 0!==a.right?a.right-l:0,u.is(window)||u.is(document)?(u=c,e=0,i=0):(n=u.offset(),e=n.top,i=n.left),e+=c.scrollTop(),i+=c.scrollLeft(),a.viewportConstrain!==!1&&(s=Math.min(s,e+u.outerHeight()-h-this.margin),s=Math.max(s,e+this.margin),o=Math.min(o,i+u.outerWidth()-l-this.margin),o=Math.max(o,i+this.margin)),this.el.css({top:s-r.top,left:o-r.left})},trigger:function(t){this.options[t]&&this.options[t].apply(this,Array.prototype.slice.call(arguments,1))}}),Jt=ht.extend({grid:null,rowCoords:null,colCoords:null,containerEl:null,bounds:null,constructor:function(t){this.grid=t},build:function(){this.rowCoords=this.grid.computeRowCoords(),this.colCoords=this.grid.computeColCoords(),this.computeBounds()},clear:function(){this.rowCoords=null,this.colCoords=null},getCell:function(e,i){var n,s,o,a=this.rowCoords,r=a.length,l=this.colCoords,h=l.length,c=null,u=null;if(this.inBounds(e,i)){for(n=0;n<r;n++)if(s=a[n],i>=s.top&&i<s.bottom){c=n;break}for(n=0;n<h;n++)if(s=l[n],e>=s.left&&e<s.right){u=n;break}if(null!==c&&null!==u)return o=this.grid.getCell(c,u),o.grid=this.grid,t.extend(o,a[c],l[u]),o}return null},computeBounds:function(){this.bounds=this.containerEl?m(this.containerEl):null},inBounds:function(t,e){var i=this.bounds;return!i||t>=i.left&&t<i.right&&e>=i.top&&e<i.bottom}}),Qt=ht.extend({coordMaps:null,constructor:function(t){this.coordMaps=t},build:function(){var t,e=this.coordMaps;for(t=0;t<e.length;t++)e[t].build()},getCell:function(t,e){var i,n=this.coordMaps,s=null;for(i=0;i<n.length&&!s;i++)s=n[i].getCell(t,e);return s},clear:function(){var t,e=this.coordMaps;for(t=0;t<e.length;t++)e[t].clear()}}),te=Ot.DragListener=ht.extend({options:null,isListening:!1,isDragging:!1,originX:null,originY:null,mousemoveProxy:null,mouseupProxy:null,subjectEl:null,subjectHref:null,scrollEl:null,scrollBounds:null,scrollTopVel:null,scrollLeftVel:null,scrollIntervalId:null,scrollHandlerProxy:null,scrollSensitivity:30,scrollSpeed:200,scrollIntervalMs:50,constructor:function(t){t=t||{},this.options=t,this.subjectEl=t.subjectEl},mousedown:function(t){w(t)&&(t.preventDefault(),this.startListening(t),this.options.distance||this.startDrag(t))},startListening:function(e){var i;this.isListening||(e&&this.options.scroll&&(i=f(t(e.target)),i.is(window)||i.is(document)||(this.scrollEl=i,this.scrollHandlerProxy=X(G(this,"scrollHandler"),100),this.scrollEl.on("scroll",this.scrollHandlerProxy))),t(document).on("mousemove",this.mousemoveProxy=G(this,"mousemove")).on("mouseup",this.mouseupProxy=G(this,"mouseup")).on("selectstart",this.preventDefault),e?(this.originX=e.pageX,this.originY=e.pageY):(this.originX=0,this.originY=0),this.isListening=!0,this.listenStart(e))},listenStart:function(t){this.trigger("listenStart",t)},mousemove:function(t){var e,i,n=t.pageX-this.originX,s=t.pageY-this.originY;this.isDragging||(e=this.options.distance||1,i=n*n+s*s,i>=e*e&&this.startDrag(t)),this.isDragging&&this.drag(n,s,t)},startDrag:function(t){this.isListening||this.startListening(),this.isDragging||(this.isDragging=!0,this.dragStart(t))},dragStart:function(t){var e=this.subjectEl;this.trigger("dragStart",t),(this.subjectHref=e?e.attr("href"):null)&&e.removeAttr("href")},drag:function(t,e,i){this.trigger("drag",t,e,i),this.updateScroll(i)},mouseup:function(t){this.stopListening(t)},stopDrag:function(t){this.isDragging&&(this.stopScrolling(),this.dragStop(t),this.isDragging=!1)},dragStop:function(t){var e=this;this.trigger("dragStop",t),setTimeout(function(){e.subjectHref&&e.subjectEl.attr("href",e.subjectHref)},0)},stopListening:function(e){this.stopDrag(e),this.isListening&&(this.scrollEl&&(this.scrollEl.off("scroll",this.scrollHandlerProxy),this.scrollHandlerProxy=null),t(document).off("mousemove",this.mousemoveProxy).off("mouseup",this.mouseupProxy).off("selectstart",this.preventDefault),this.mousemoveProxy=null,this.mouseupProxy=null,this.isListening=!1,this.listenStop(e))},listenStop:function(t){this.trigger("listenStop",t)},trigger:function(t){this.options[t]&&this.options[t].apply(this,Array.prototype.slice.call(arguments,1))},preventDefault:function(t){t.preventDefault()},computeScrollBounds:function(){var t=this.scrollEl;this.scrollBounds=t?p(t):null},updateScroll:function(t){var e,i,n,s,o=this.scrollSensitivity,a=this.scrollBounds,r=0,l=0;a&&(e=(o-(t.pageY-a.top))/o,i=(o-(a.bottom-t.pageY))/o,n=(o-(t.pageX-a.left))/o,s=(o-(a.right-t.pageX))/o,e>=0&&e<=1?r=e*this.scrollSpeed*-1:i>=0&&i<=1&&(r=i*this.scrollSpeed),n>=0&&n<=1?l=n*this.scrollSpeed*-1:s>=0&&s<=1&&(l=s*this.scrollSpeed)),this.setScrollVel(r,l)},setScrollVel:function(t,e){this.scrollTopVel=t,this.scrollLeftVel=e,this.constrainScrollVel(),!this.scrollTopVel&&!this.scrollLeftVel||this.scrollIntervalId||(this.scrollIntervalId=setInterval(G(this,"scrollIntervalFunc"),this.scrollIntervalMs))},constrainScrollVel:function(){var t=this.scrollEl;this.scrollTopVel<0?t.scrollTop()<=0&&(this.scrollTopVel=0):this.scrollTopVel>0&&t.scrollTop()+t[0].clientHeight>=t[0].scrollHeight&&(this.scrollTopVel=0),this.scrollLeftVel<0?t.scrollLeft()<=0&&(this.scrollLeftVel=0):this.scrollLeftVel>0&&t.scrollLeft()+t[0].clientWidth>=t[0].scrollWidth&&(this.scrollLeftVel=0)},scrollIntervalFunc:function(){var t=this.scrollEl,e=this.scrollIntervalMs/1e3;this.scrollTopVel&&t.scrollTop(t.scrollTop()+this.scrollTopVel*e),this.scrollLeftVel&&t.scrollLeft(t.scrollLeft()+this.scrollLeftVel*e),this.constrainScrollVel(),this.scrollTopVel||this.scrollLeftVel||this.stopScrolling()},stopScrolling:function(){this.scrollIntervalId&&(clearInterval(this.scrollIntervalId),this.scrollIntervalId=null,this.scrollStop())},scrollHandler:function(){this.scrollIntervalId||this.scrollStop()},scrollStop:function(){}}),ee=te.extend({coordMap:null,origCell:null,cell:null,coordAdjust:null,constructor:function(t,e){te.prototype.constructor.call(this,e),this.coordMap=t},listenStart:function(t){var e,i,n,s=this.subjectEl;te.prototype.listenStart.apply(this,arguments),this.computeCoords(),t?(i={left:t.pageX,top:t.pageY},n=i,s&&(e=p(s),n=D(n,e)),this.origCell=this.getCell(n.left,n.top),s&&this.options.subjectCenter&&(this.origCell&&(e=x(this.origCell,e)||e),n=C(e)),this.coordAdjust=S(n,i)):(this.origCell=null,this.coordAdjust=null)},computeCoords:function(){this.coordMap.build(),this.computeScrollBounds()},dragStart:function(t){var e;te.prototype.dragStart.apply(this,arguments),e=this.getCell(t.pageX,t.pageY),e&&this.cellOver(e)},drag:function(t,e,i){var n;te.prototype.drag.apply(this,arguments),n=this.getCell(i.pageX,i.pageY),ct(n,this.cell)||(this.cell&&this.cellOut(),n&&this.cellOver(n))},dragStop:function(){this.cellDone(),te.prototype.dragStop.apply(this,arguments)},cellOver:function(t){this.cell=t,this.trigger("cellOver",t,ct(t,this.origCell),this.origCell)},cellOut:function(){this.cell&&(this.trigger("cellOut",this.cell),this.cellDone(),this.cell=null)},cellDone:function(){this.cell&&this.trigger("cellDone",this.cell)},listenStop:function(){te.prototype.listenStop.apply(this,arguments),this.origCell=this.cell=null,this.coordMap.clear()},scrollStop:function(){te.prototype.scrollStop.apply(this,arguments),this.computeCoords()},getCell:function(t,e){return this.coordAdjust&&(t+=this.coordAdjust.left,e+=this.coordAdjust.top),this.coordMap.getCell(t,e)}}),ie=ht.extend({options:null,sourceEl:null,el:null,parentEl:null,top0:null,left0:null,mouseY0:null,mouseX0:null,topDelta:null,leftDelta:null,mousemoveProxy:null,isFollowing:!1,isHidden:!1,isAnimating:!1,constructor:function(e,i){this.options=i=i||{},this.sourceEl=e,this.parentEl=i.parentEl?t(i.parentEl):e.parent()},start:function(e){this.isFollowing||(this.isFollowing=!0,this.mouseY0=e.pageY,this.mouseX0=e.pageX,this.topDelta=0,this.leftDelta=0,this.isHidden||this.updatePosition(),t(document).on("mousemove",this.mousemoveProxy=G(this,"mousemove")))},stop:function(e,i){function n(){this.isAnimating=!1,s.destroyEl(),this.top0=this.left0=null,i&&i()}var s=this,o=this.options.revertDuration;this.isFollowing&&!this.isAnimating&&(this.isFollowing=!1,t(document).off("mousemove",this.mousemoveProxy),e&&o&&!this.isHidden?(this.isAnimating=!0,this.el.animate({top:this.top0,left:this.left0},{duration:o,complete:n})):n())},getEl:function(){var t=this.el;return t||(this.sourceEl.width(),t=this.el=this.sourceEl.clone().css({position:"absolute",visibility:"",display:this.isHidden?"none":"",margin:0,right:"auto",bottom:"auto",width:this.sourceEl.width(),height:this.sourceEl.height(),opacity:this.options.opacity||"",zIndex:this.options.zIndex}).appendTo(this.parentEl)),t},destroyEl:function(){this.el&&(this.el.remove(),this.el=null)},updatePosition:function(){var t,e;this.getEl(),null===this.top0&&(this.sourceEl.width(),t=this.sourceEl.offset(),e=this.el.offsetParent().offset(),this.top0=t.top-e.top,this.left0=t.left-e.left),this.el.css({top:this.top0+this.topDelta,left:this.left0+this.leftDelta})},mousemove:function(t){this.topDelta=t.pageY-this.mouseY0,this.leftDelta=t.pageX-this.mouseX0,this.isHidden||this.updatePosition()},hide:function(){this.isHidden||(this.isHidden=!0,this.el&&this.el.hide())},show:function(){this.isHidden&&(this.isHidden=!1,this.updatePosition(),this.getEl().show())}}),ne=ht.extend({view:null,isRTL:null,cellHtml:"<td/>",constructor:function(t){this.view=t,this.isRTL=t.opt("isRTL")},rowHtml:function(t,e){var i,n,s=this.getHtmlRenderer("cell",t),o="";for(e=e||0,i=0;i<this.colCnt;i++)n=this.getCell(e,i),o+=s(n);return o=this.bookendCells(o,t,e),"<tr>"+o+"</tr>"},bookendCells:function(t,e,i){var n=this.getHtmlRenderer("intro",e)(i||0),s=this.getHtmlRenderer("outro",e)(i||0),o=this.isRTL?s:n,a=this.isRTL?n:s;return"string"==typeof t?o+t+a:t.prepend(o).append(a)},getHtmlRenderer:function(t,e){var i,n,s,o,a=this.view;return i=t+"Html",e&&(n=e+q(t)+"Html"),n&&(o=a[n])?s=a:n&&(o=this[n])?s=this:(o=a[i])?s=a:(o=this[i])&&(s=this),"function"==typeof o?function(){return o.apply(s,arguments)||""}:function(){return o||""}}}),se=Ot.Grid=ne.extend({start:null,end:null,rowCnt:0,colCnt:0,rowData:null,colData:null,el:null,coordMap:null,elsByFill:null,externalDragStartProxy:null,colHeadFormat:null,eventTimeFormat:null,displayEventTime:null,displayEventEnd:null,cellDuration:null,largeUnit:null,constructor:function(){ne.apply(this,arguments),this.coordMap=new Jt(this),this.elsByFill={},this.externalDragStartProxy=G(this,"externalDragStart")},computeColHeadFormat:function(){},computeEventTimeFormat:function(){return this.view.opt("smallTimeFormat")},computeDisplayEventTime:function(){return!0},computeDisplayEventEnd:function(){return!0},setRange:function(t){var e,i,n=this.view;this.start=t.start.clone(),this.end=t.end.clone(),this.rowData=[],this.colData=[],this.updateCells(),this.colHeadFormat=n.opt("columnFormat")||this.computeColHeadFormat(),this.eventTimeFormat=n.opt("eventTimeFormat")||n.opt("timeFormat")||this.computeEventTimeFormat(),e=n.opt("displayEventTime"),null==e&&(e=this.computeDisplayEventTime()),i=n.opt("displayEventEnd"),null==i&&(i=this.computeDisplayEventEnd()),this.displayEventTime=e,this.displayEventEnd=i},updateCells:function(){},rangeToSegs:function(t){},diffDates:function(t,e){return this.largeUnit?M(t,e,this.largeUnit):k(t,e)},getCell:function(e,i){var n;return null==i&&("number"==typeof e?(i=e%this.colCnt,e=Math.floor(e/this.colCnt)):(i=e.col,e=e.row)),n={row:e,col:i},t.extend(n,this.getRowData(e),this.getColData(i)),t.extend(n,this.computeCellRange(n)),n},computeCellRange:function(t){var e=this.computeCellDate(t);return{start:e,end:e.clone().add(this.cellDuration)}},computeCellDate:function(t){},getRowData:function(t){return this.rowData[t]||{}},getColData:function(t){return this.colData[t]||{}},getRowEl:function(t){},getColEl:function(t){},getCellDayEl:function(t){return this.getColEl(t.col)||this.getRowEl(t.row)},computeRowCoords:function(){var t,e,i,n=[];for(t=0;t<this.rowCnt;t++)e=this.getRowEl(t),i=e.offset().top,n.push({top:i,bottom:i+e.outerHeight()});return n},computeColCoords:function(){var t,e,i,n=[];for(t=0;t<this.colCnt;t++)e=this.getColEl(t),i=e.offset().left,n.push({left:i,right:i+e.outerWidth()});return n},setElement:function(e){var i=this;this.el=e,e.on("mousedown",function(e){t(e.target).is(".fc-event-container *, .fc-more")||t(e.target).closest(".fc-popover").length||i.dayMousedown(e)}),this.bindSegHandlers(),this.bindGlobalHandlers()},removeElement:function(){this.unbindGlobalHandlers(),this.el.remove()},renderSkeleton:function(){},renderDates:function(){},destroyDates:function(){},bindGlobalHandlers:function(){t(document).on("dragstart sortstart",this.externalDragStartProxy)},unbindGlobalHandlers:function(){t(document).off("dragstart sortstart",this.externalDragStartProxy)},dayMousedown:function(t){var e,i,n=this,s=this.view,o=s.opt("selectable"),l=new ee(this.coordMap,{scroll:s.opt("dragScroll"),dragStart:function(){s.unselect()},cellOver:function(t,s,r){r&&(e=s?t:null,o&&(i=n.computeSelection(r,t),i?n.renderSelection(i):a()))},cellOut:function(t){e=null,i=null,n.destroySelection(),r()},listenStop:function(t){e&&s.trigger("dayClick",n.getCellDayEl(e),e.start,t),i&&s.reportSelection(i,t),r()}});l.mousedown(t)},renderRangeHelper:function(t,e){var i=this.fabricateHelperEvent(t,e);this.renderHelper(i,e)},fabricateHelperEvent:function(t,e){var i=e?N(e.event):{};return i.start=t.start.clone(),i.end=t.end?t.end.clone():null,i.allDay=null,this.view.calendar.normalizeEventRange(i),i.className=(i.className||[]).concat("fc-helper"),e||(i.editable=!1),i},renderHelper:function(t,e){},destroyHelper:function(){},renderSelection:function(t){this.renderHighlight(t)},destroySelection:function(){this.destroyHighlight()},computeSelection:function(t,e){var i,n=[t.start,t.end,e.start,e.end];return n.sort(U),i={start:n[0].clone(),end:n[3].clone()},this.view.calendar.isSelectionRangeAllowed(i)?i:null},renderHighlight:function(t){this.renderFill("highlight",this.rangeToSegs(t))},destroyHighlight:function(){this.destroyFill("highlight")},highlightSegClasses:function(){return["fc-highlight"]},renderFill:function(t,e){},destroyFill:function(t){var e=this.elsByFill[t];e&&(e.remove(),delete this.elsByFill[t])},renderFillSegEls:function(e,i){var n,s=this,o=this[e+"SegEl"],a="",r=[];if(i.length){for(n=0;n<i.length;n++)a+=this.fillSegHtml(e,i[n]);t(a).each(function(e,n){var a=i[e],l=t(n);o&&(l=o.call(s,a,l)),l&&(l=t(l),l.is(s.fillSegTag)&&(a.el=l,r.push(a)))})}return r},fillSegTag:"div",fillSegHtml:function(t,e){var i=this[t+"SegClasses"],n=this[t+"SegCss"],s=i?i.call(this,e):[],o=B(n?n.call(this,e):{});return"<"+this.fillSegTag+(s.length?' class="'+s.join(" ")+'"':"")+(o?' style="'+o+'"':"")+" />"},headHtml:function(){return'<div class="fc-row '+this.view.widgetHeaderClass+'"><table><thead>'+this.rowHtml("head")+"</thead></table></div>"},headCellHtml:function(t){var e=this.view,i=t.start;return'<th class="fc-day-header '+e.widgetHeaderClass+" fc-"+Wt[i.day()]+'">'+j(i.format(this.colHeadFormat))+"</th>"},bgCellHtml:function(t){var e=this.view,i=t.start,n=this.getDayClasses(i);return n.unshift("fc-day",e.widgetContentClass),'<td class="'+n.join(" ")+'" data-date="'+i.format("YYYY-MM-DD")+'"></td>'},getDayClasses:function(t){var e=this.view,i=e.calendar.getNow().stripTime(),n=["fc-"+Wt[t.day()]];return 1==e.intervalDuration.as("months")&&t.month()!=e.intervalStart.month()&&n.push("fc-other-month"),t.isSame(i,"day")?n.push("fc-today",e.highlightStateClass):t<i?n.push("fc-past"):n.push("fc-future"),n}});se.mixin({mousedOverSeg:null,isDraggingSeg:!1,isResizingSeg:!1,isDraggingExternal:!1,segs:null,renderEvents:function(t){var e,i,n=this.eventsToSegs(t),s=[],o=[];for(e=0;e<n.length;e++)i=n[e],ut(i.event)?s.push(i):o.push(i);s=this.renderBgSegs(s)||s,o=this.renderFgSegs(o)||o,this.segs=s.concat(o)},destroyEvents:function(){this.triggerSegMouseout(),this.destroyFgSegs(),this.destroyBgSegs(),this.segs=null},getEventSegs:function(){return this.segs||[]},renderFgSegs:function(t){},destroyFgSegs:function(){},renderFgSegEls:function(e,i){var n,s=this.view,o="",a=[];if(e.length){for(n=0;n<e.length;n++)o+=this.fgSegHtml(e[n],i);t(o).each(function(i,n){var o=e[i],r=s.resolveEventEl(o.event,t(n));r&&(r.data("fc-seg",o),o.el=r,a.push(o))})}return a},fgSegHtml:function(t,e){},renderBgSegs:function(t){return this.renderFill("bgEvent",t)},destroyBgSegs:function(){this.destroyFill("bgEvent")},bgEventSegEl:function(t,e){return this.view.resolveEventEl(t.event,e)},bgEventSegClasses:function(t){var e=t.event,i=e.source||{};return["fc-bgevent"].concat(e.className,i.className||[])},bgEventSegCss:function(t){var e=this.view,i=t.event,n=i.source||{};return{"background-color":i.backgroundColor||i.color||n.backgroundColor||n.color||e.opt("eventBackgroundColor")||e.opt("eventColor")}},businessHoursSegClasses:function(t){return["fc-nonbusiness","fc-bgevent"]},bindSegHandlers:function(){var e=this,i=this.view;t.each({mouseenter:function(t,i){e.triggerSegMouseover(t,i)},mouseleave:function(t,i){e.triggerSegMouseout(t,i)},click:function(t,e){return i.trigger("eventClick",this,t.event,e)},mousedown:function(n,s){t(s.target).is(".fc-resizer")&&i.isEventResizable(n.event)?e.segResizeMousedown(n,s,t(s.target).is(".fc-start-resizer")):i.isEventDraggable(n.event)&&e.segDragMousedown(n,s)}},function(i,n){e.el.on(i,".fc-event-container > *",function(i){var s=t(this).data("fc-seg");if(s&&!e.isDraggingSeg&&!e.isResizingSeg)return n.call(this,s,i)})})},triggerSegMouseover:function(t,e){this.mousedOverSeg||(this.mousedOverSeg=t,this.view.trigger("eventMouseover",t.el[0],t.event,e))},triggerSegMouseout:function(t,e){e=e||{},this.mousedOverSeg&&(t=t||this.mousedOverSeg,this.mousedOverSeg=null,this.view.trigger("eventMouseout",t.el[0],t.event,e))},segDragMousedown:function(t,e){var i,n=this,s=this.view,o=s.calendar,l=t.el,h=t.event,c=new ie(t.el,{parentEl:s.el,opacity:s.opt("dragOpacity"),revertDuration:s.opt("dragRevertDuration"),zIndex:2}),u=new ee(s.coordMap,{distance:5,scroll:s.opt("dragScroll"),subjectEl:l,subjectCenter:!0,listenStart:function(t){c.hide(),c.start(t)},dragStart:function(e){n.triggerSegMouseout(t,e),n.segDragStart(t,e),s.hideEvent(h)},cellOver:function(e,r,l){t.cell&&(l=t.cell),i=n.computeEventDrop(l,e,h),i&&!o.isEventRangeAllowed(i,h)&&(a(),i=null),i&&s.renderDrag(i,t)?c.hide():c.show(),r&&(i=null)},cellOut:function(){s.destroyDrag(),c.show(),i=null},cellDone:function(){r()},dragStop:function(e){c.stop(!i,function(){s.destroyDrag(),s.showEvent(h),n.segDragStop(t,e),i&&s.reportEventDrop(h,i,this.largeUnit,l,e)})},listenStop:function(){c.stop()}});u.mousedown(e)},segDragStart:function(t,e){this.isDraggingSeg=!0,this.view.trigger("eventDragStart",t.el[0],t.event,e,{})},segDragStop:function(t,e){this.isDraggingSeg=!1,this.view.trigger("eventDragStop",t.el[0],t.event,e,{})},computeEventDrop:function(t,e,i){var n,s,o=this.view.calendar,a=t.start,r=e.start;return a.hasTime()===r.hasTime()?(n=this.diffDates(r,a),i.allDay&&P(n)?(s={start:i.start.clone(),end:o.getEventEnd(i),allDay:!1},o.normalizeEventRangeTimes(s)):s={start:i.start.clone(),end:i.end?i.end.clone():null,allDay:i.allDay},s.start.add(n),s.end&&s.end.add(n)):s={start:r.clone(),end:null,allDay:!r.hasTime()},s},applyDragOpacity:function(t){var e=this.view.opt("dragOpacity");null!=e&&t.each(function(t,i){i.style.opacity=e})},externalDragStart:function(e,i){var n,s,o=this.view;o.opt("droppable")&&(n=t((i?i.item:null)||e.target),s=o.opt("dropAccept"),(t.isFunction(s)?s.call(n[0],n):n.is(s))&&(this.isDraggingExternal||this.listenToExternalDrag(n,e,i)))},listenToExternalDrag:function(t,e,i){var n,s,o=this,l=vt(t);n=new ee(this.coordMap,{listenStart:function(){o.isDraggingExternal=!0},cellOver:function(t){s=o.computeExternalDrop(t,l),s?o.renderDrag(s):a()},cellOut:function(){s=null,o.destroyDrag(),r()},dragStop:function(){o.destroyDrag(),r(),s&&o.view.reportExternalDrop(l,s,t,e,i)},listenStop:function(){o.isDraggingExternal=!1}}),n.startDrag(e)},computeExternalDrop:function(t,e){var i={start:t.start.clone(),end:null};return e.startTime&&!i.start.hasTime()&&i.start.time(e.startTime),e.duration&&(i.end=i.start.clone().add(e.duration)),this.view.calendar.isExternalDropRangeAllowed(i,e.eventProps)?i:null},renderDrag:function(t,e){},destroyDrag:function(){},segResizeMousedown:function(t,e,i){var n,s,o=this,l=this.view,h=l.calendar,c=t.el,u=t.event,d=h.getEventEnd(u);n=new ee(this.coordMap,{distance:5,scroll:l.opt("dragScroll"),subjectEl:c,dragStart:function(e){o.triggerSegMouseout(t,e),o.segResizeStart(t,e)},cellOver:function(e,n,r){s=i?o.computeEventStartResize(r,e,u):o.computeEventEndResize(r,e,u),s&&(h.isEventRangeAllowed(s,u)?s.start.isSame(u.start)&&s.end.isSame(d)&&(s=null):(a(),s=null)),s&&(l.hideEvent(u),o.renderEventResize(s,t))},cellOut:function(){s=null},cellDone:function(){o.destroyEventResize(),l.showEvent(u),r()},dragStop:function(e){o.segResizeStop(t,e),s&&l.reportEventResize(u,s,this.largeUnit,c,e)}}),n.mousedown(e)},segResizeStart:function(t,e){this.isResizingSeg=!0,this.view.trigger("eventResizeStart",t.el[0],t.event,e,{})},segResizeStop:function(t,e){this.isResizingSeg=!1,this.view.trigger("eventResizeStop",t.el[0],t.event,e,{})},computeEventStartResize:function(t,e,i){return this.computeEventResize("start",t,e,i)},computeEventEndResize:function(t,e,i){return this.computeEventResize("end",t,e,i)},computeEventResize:function(t,e,i,n){var s,o,a=this.view.calendar,r=this.diffDates(i[t],e[t]);return s={start:n.start.clone(),end:a.getEventEnd(n),allDay:n.allDay},s.allDay&&P(r)&&(s.allDay=!1,a.normalizeEventRangeTimes(s)),s[t].add(r),s.start.isBefore(s.end)||(o=n.allDay?a.defaultAllDayEventDuration:a.defaultTimedEventDuration,this.cellDuration&&this.cellDuration<o&&(o=this.cellDuration),"start"==t?s.start=s.end.clone().subtract(o):s.end=s.start.clone().add(o)),s},renderEventResize:function(t,e){},destroyEventResize:function(){},getEventTimeText:function(t,e,i){return null==e&&(e=this.eventTimeFormat),null==i&&(i=this.displayEventEnd),this.displayEventTime&&t.start.hasTime()?i&&t.end?this.view.formatRange(t,e):t.start.format(e):""},getSegClasses:function(t,e,i){var n=t.event,s=["fc-event",t.isStart?"fc-start":"fc-not-start",t.isEnd?"fc-end":"fc-not-end"].concat(n.className,n.source?n.source.className:[]);return e&&s.push("fc-draggable"),i&&s.push("fc-resizable"),s},getEventSkinCss:function(t){var e=this.view,i=t.source||{},n=t.color,s=i.color,o=e.opt("eventColor");return{"background-color":t.backgroundColor||n||i.backgroundColor||s||e.opt("eventBackgroundColor")||o,"border-color":t.borderColor||n||i.borderColor||s||e.opt("eventBorderColor")||o,color:t.textColor||i.textColor||e.opt("eventTextColor")}},eventsToSegs:function(t,e){var i,n=this.eventsToRanges(t),s=[];for(i=0;i<n.length;i++)s.push.apply(s,this.eventRangeToSegs(n[i],e));return s},eventsToRanges:function(e){var i=this,n=pt(e),s=[];return t.each(n,function(t,e){e.length&&s.push.apply(s,dt(e[0])?i.eventsToInverseRanges(e):i.eventsToNormalRanges(e))}),s},eventsToNormalRanges:function(t){var e,i,n,s,o=this.view.calendar,a=[];for(e=0;e<t.length;e++)i=t[e],n=i.start.clone().stripZone(),s=o.getEventEnd(i).stripZone(),a.push({event:i,start:n,end:s,eventStartMS:+n,eventDurationMS:s-n});return a},eventsToInverseRanges:function(t){var e,i,n=this.view,s=n.start.clone().stripZone(),o=n.end.clone().stripZone(),a=this.eventsToNormalRanges(t),r=[],l=t[0],h=s;for(a.sort(mt),e=0;e<a.length;e++)i=a[e],i.start>h&&r.push({event:l,start:h,end:i.start}),h=i.end;return h<o&&r.push({event:l,start:h,end:o}),r},eventRangeToSegs:function(t,e){var i,n,s;for(i=e?e(t):this.rangeToSegs(t),n=0;n<i.length;n++)s=i[n],s.event=t.event,s.eventStartMS=t.eventStartMS,s.eventDurationMS=t.eventDurationMS;return i}}),Ot.compareSegs=gt,Ot.dataAttrPrefix="";var oe=se.extend({numbersVisible:!1,bottomCoordPadding:0,breakOnWeeks:null,cellDates:null,dayToCellOffsets:null,rowEls:null,dayEls:null,helperEls:null,constructor:function(){se.apply(this,arguments),this.cellDuration=e.duration(1,"day")},renderDates:function(t){var e,i,n,s=this.view,o=this.rowCnt,a=this.colCnt,r=o*a,l="";for(e=0;e<o;e++)l+=this.dayRowHtml(e,t);for(this.el.html(l),this.rowEls=this.el.find(".fc-row"),this.dayEls=this.el.find(".fc-day"),i=0;i<r;i++)n=this.getCell(i),s.trigger("dayRender",null,n.start,this.dayEls.eq(i))},destroyDates:function(){this.destroySegPopover()},renderBusinessHours:function(){var t=this.view.calendar.getBusinessHoursEvents(!0),e=this.eventsToSegs(t);this.renderFill("businessHours",e,"bgevent")},dayRowHtml:function(t,e){var i=this.view,n=["fc-row","fc-week",i.widgetContentClass];return e&&n.push("fc-rigid"),'<div class="'+n.join(" ")+'"><div class="fc-bg"><table>'+this.rowHtml("day",t)+'</table></div><div class="fc-content-skeleton"><table>'+(this.numbersVisible?"<thead>"+this.rowHtml("number",t)+"</thead>":"")+"</table></div></div>"},dayCellHtml:function(t){return this.bgCellHtml(t)},computeColHeadFormat:function(){return this.rowCnt>1?"ddd":this.colCnt>1?this.view.opt("dayOfMonthFormat"):"dddd"},computeEventTimeFormat:function(){return this.view.opt("extraSmallTimeFormat")},computeDisplayEventEnd:function(){return 1==this.colCnt},updateCells:function(){var t,e,i,n;if(this.updateCellDates(),t=this.cellDates,this.breakOnWeeks){for(e=t[0].day(),n=1;n<t.length&&t[n].day()!=e;n++);i=Math.ceil(t.length/n)}else i=1,n=t.length;this.rowCnt=i,this.colCnt=n},updateCellDates:function(){for(var t=this.view,e=this.start.clone(),i=[],n=-1,s=[];e.isBefore(this.end);)t.isHiddenDay(e)?s.push(n+.5):(n++,s.push(n),i.push(e.clone())),e.add(1,"days");this.cellDates=i,this.dayToCellOffsets=s},computeCellDate:function(t){var e=this.colCnt,i=t.row*e+(this.isRTL?e-t.col-1:t.col);return this.cellDates[i].clone()},getRowEl:function(t){return this.rowEls.eq(t)},getColEl:function(t){return this.dayEls.eq(t)},getCellDayEl:function(t){return this.dayEls.eq(t.row*this.colCnt+t.col)},computeRowCoords:function(){var t=se.prototype.computeRowCoords.call(this);return t[t.length-1].bottom+=this.bottomCoordPadding,t},rangeToSegs:function(t){var e,i,n,s,o,a,r,l,h,c,u=this.isRTL,d=this.rowCnt,f=this.colCnt,p=[];for(t=this.view.computeDayRange(t),e=this.dateToCellOffset(t.start),i=this.dateToCellOffset(t.end.subtract(1,"days")),n=0;n<d;n++)s=n*f,o=s+f-1,l=Math.max(s,e),h=Math.min(o,i),l=Math.ceil(l),h=Math.floor(h),l<=h&&(a=l===e,r=h===i,l-=s,h-=s,c={row:n,isStart:a,isEnd:r},u?(c.leftCol=f-h-1,c.rightCol=f-l-1):(c.leftCol=l,c.rightCol=h),p.push(c));return p},dateToCellOffset:function(t){var e=this.dayToCellOffsets,i=t.diff(this.start,"days");return i<0?e[0]-1:i>=e.length?e[e.length-1]+1:e[i]},renderDrag:function(t,e){if(this.renderHighlight(this.view.calendar.ensureVisibleEventRange(t)),e&&!e.el.closest(this.el).length)return this.renderRangeHelper(t,e),this.applyDragOpacity(this.helperEls),!0},destroyDrag:function(){this.destroyHighlight(),this.destroyHelper()},renderEventResize:function(t,e){this.renderHighlight(t),this.renderRangeHelper(t,e)},destroyEventResize:function(){this.destroyHighlight(),this.destroyHelper()},renderHelper:function(e,i){var n,s=[],o=this.eventsToSegs([e]);o=this.renderFgSegEls(o),n=this.renderSegRows(o),this.rowEls.each(function(e,o){var a,r=t(o),l=t('<div class="fc-helper-skeleton"><table/></div>');a=i&&i.row===e?i.el.position().top:r.find(".fc-content-skeleton tbody").position().top,l.css("top",a).find("table").append(n[e].tbodyEl),r.append(l),s.push(l[0])}),this.helperEls=t(s)},destroyHelper:function(){this.helperEls&&(this.helperEls.remove(),this.helperEls=null)},fillSegTag:"td",renderFill:function(e,i,n){var s,o,a,r=[];for(i=this.renderFillSegEls(e,i),s=0;s<i.length;s++)o=i[s],a=this.renderFillRow(e,o,n),this.rowEls.eq(o.row).append(a),r.push(a[0]);return this.elsByFill[e]=t(r),i},renderFillRow:function(e,i,n){var s,o,a=this.colCnt,r=i.leftCol,l=i.rightCol+1;return n=n||e.toLowerCase(),s=t('<div class="fc-'+n+'-skeleton"><table><tr/></table></div>'),o=s.find("tr"),r>0&&o.append('<td colspan="'+r+'"/>'),o.append(i.el.attr("colspan",l-r)),l<a&&o.append('<td colspan="'+(a-l)+'"/>'),this.bookendCells(o,e),s}});oe.mixin({rowStructs:null,destroyEvents:function(){this.destroySegPopover(),se.prototype.destroyEvents.apply(this,arguments)},getEventSegs:function(){return se.prototype.getEventSegs.call(this).concat(this.popoverSegs||[])},renderBgSegs:function(e){var i=t.grep(e,function(t){return t.event.allDay});return se.prototype.renderBgSegs.call(this,i)},renderFgSegs:function(e){var i;return e=this.renderFgSegEls(e),i=this.rowStructs=this.renderSegRows(e),this.rowEls.each(function(e,n){t(n).find(".fc-content-skeleton > table").append(i[e].tbodyEl)}),e},destroyFgSegs:function(){for(var t,e=this.rowStructs||[];t=e.pop();)t.tbodyEl.remove();this.rowStructs=null},renderSegRows:function(t){var e,i,n=[];for(e=this.groupSegRows(t),i=0;i<e.length;i++)n.push(this.renderSegRow(i,e[i]));return n},fgSegHtml:function(t,e){var i,n,s=this.view,o=t.event,a=s.isEventDraggable(o),r=!e&&o.allDay&&t.isStart&&s.isEventResizableFromStart(o),l=!e&&o.allDay&&t.isEnd&&s.isEventResizableFromEnd(o),h=this.getSegClasses(t,a,r||l),c=B(this.getEventSkinCss(o)),u="";return h.unshift("fc-day-grid-event","fc-h-event"),t.isStart&&(i=this.getEventTimeText(o),i&&(u='<span class="fc-time">'+j(i)+"</span>")),n='<span class="fc-title">'+(j(o.title||"")||"&nbsp;")+"</span>",'<a class="'+h.join(" ")+'"'+(o.url?' href="'+j(o.url)+'"':"")+(c?' style="'+c+'"':"")+'><div class="fc-content">'+(this.isRTL?n+" "+u:u+" "+n)+"</div>"+(r?'<div class="fc-resizer fc-start-resizer" />':"")+(l?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},renderSegRow:function(e,i){function n(e){for(;a<e;)c=(v[s-1]||[])[a],c?c.attr("rowspan",parseInt(c.attr("rowspan")||1,10)+1):(c=t("<td/>"),r.append(c)),g[s][a]=c,v[s][a]=c,a++}var s,o,a,r,l,h,c,u=this.colCnt,d=this.buildSegLevels(i),f=Math.max(1,d.length),p=t("<tbody/>"),m=[],g=[],v=[];for(s=0;s<f;s++){if(o=d[s],a=0,r=t("<tr/>"),m.push([]),g.push([]),v.push([]),o)for(l=0;l<o.length;l++){for(h=o[l],n(h.leftCol),c=t('<td class="fc-event-container"/>').append(h.el),h.leftCol!=h.rightCol?c.attr("colspan",h.rightCol-h.leftCol+1):v[s][a]=c;a<=h.rightCol;)g[s][a]=c,m[s][a]=h,a++;r.append(c)}n(u),this.bookendCells(r,"eventSkeleton"),p.append(r)}return{row:e,tbodyEl:p,cellMatrix:g,segMatrix:m,segLevels:d,segs:i}},buildSegLevels:function(t){var e,i,n,s=[];for(t.sort(gt),e=0;e<t.length;e++){for(i=t[e],n=0;n<s.length&&bt(i,s[n]);n++);i.level=n,(s[n]||(s[n]=[])).push(i)}for(n=0;n<s.length;n++)s[n].sort(yt);return s},groupSegRows:function(t){var e,i=[];for(e=0;e<this.rowCnt;e++)i.push([]);for(e=0;e<t.length;e++)i[t[e].row].push(t[e]);return i}}),oe.mixin({segPopover:null,popoverSegs:null,destroySegPopover:function(){this.segPopover&&this.segPopover.hide()},limitRows:function(t){var e,i,n=this.rowStructs||[];for(e=0;e<n.length;e++)this.unlimitRow(e),
i=!!t&&("number"==typeof t?t:this.computeRowLevelLimit(e)),i!==!1&&this.limitRow(e,i)},computeRowLevelLimit:function(e){function i(e,i){o=Math.max(o,t(i).outerHeight())}var n,s,o,a=this.rowEls.eq(e),r=a.height(),l=this.rowStructs[e].tbodyEl.children();for(n=0;n<l.length;n++)if(s=l.eq(n).removeClass("fc-limited"),o=0,s.find("> td > :first-child").each(i),s.position().top+o>r)return n;return!1},limitRow:function(e,i){function n(n){for(;D<n;)s=_.getCell(e,D),c=_.getCellSegs(s,i),c.length&&(f=a[i-1][D],y=_.renderMoreLink(s,c),b=t("<div/>").append(y),f.append(b),x.push(b[0])),D++}var s,o,a,r,l,h,c,u,d,f,p,m,g,v,b,y,_=this,w=this.rowStructs[e],x=[],D=0;if(i&&i<w.segLevels.length){for(o=w.segLevels[i-1],a=w.cellMatrix,r=w.tbodyEl.children().slice(i).addClass("fc-limited").get(),l=0;l<o.length;l++){for(h=o[l],n(h.leftCol),d=[],u=0;D<=h.rightCol;)s=this.getCell(e,D),c=this.getCellSegs(s,i),d.push(c),u+=c.length,D++;if(u){for(f=a[i-1][h.leftCol],p=f.attr("rowspan")||1,m=[],g=0;g<d.length;g++)v=t('<td class="fc-more-cell"/>').attr("rowspan",p),c=d[g],s=this.getCell(e,h.leftCol+g),y=this.renderMoreLink(s,[h].concat(c)),b=t("<div/>").append(y),v.append(b),m.push(v[0]),x.push(v[0]);f.addClass("fc-limited").after(t(m)),r.push(f[0])}}n(this.colCnt),w.moreEls=t(x),w.limitedEls=t(r)}},unlimitRow:function(t){var e=this.rowStructs[t];e.moreEls&&(e.moreEls.remove(),e.moreEls=null),e.limitedEls&&(e.limitedEls.removeClass("fc-limited"),e.limitedEls=null)},renderMoreLink:function(e,i){var n=this,s=this.view;return t('<a class="fc-more"/>').text(this.getMoreLinkText(i.length)).on("click",function(o){var a=s.opt("eventLimitClick"),r=e.start,l=t(this),h=n.getCellDayEl(e),c=n.getCellSegs(e),u=n.resliceDaySegs(c,r),d=n.resliceDaySegs(i,r);"function"==typeof a&&(a=s.trigger("eventLimitClick",null,{date:r,dayEl:h,moreEl:l,segs:u,hiddenSegs:d},o)),"popover"===a?n.showSegPopover(e,l,u):"string"==typeof a&&s.calendar.zoomTo(r,a)})},showSegPopover:function(t,e,i){var n,s,o=this,a=this.view,r=e.parent();n=1==this.rowCnt?a.el:this.rowEls.eq(t.row),s={className:"fc-more-popover",content:this.renderSegPopoverContent(t,i),parentEl:this.el,top:n.offset().top,autoHide:!0,viewportConstrain:a.opt("popoverViewportConstrain"),hide:function(){o.segPopover.destroy(),o.segPopover=null,o.popoverSegs=null}},this.isRTL?s.right=r.offset().left+r.outerWidth()+1:s.left=r.offset().left-1,this.segPopover=new Kt(s),this.segPopover.show()},renderSegPopoverContent:function(e,i){var n,s=this.view,o=s.opt("theme"),a=e.start.format(s.opt("dayPopoverFormat")),r=t('<div class="fc-header '+s.widgetHeaderClass+'"><span class="fc-close '+(o?"ui-icon ui-icon-closethick":"fc-icon fc-icon-x")+'"></span><span class="fc-title">'+j(a)+'</span><div class="fc-clear"/></div><div class="fc-body '+s.widgetContentClass+'"><div class="fc-event-container"></div></div>'),l=r.find(".fc-event-container");for(i=this.renderFgSegEls(i,!0),this.popoverSegs=i,n=0;n<i.length;n++)i[n].cell=e,l.append(i[n].el);return r},resliceDaySegs:function(e,i){var n=t.map(e,function(t){return t.event}),s=i.clone().stripTime(),o=s.clone().add(1,"days"),a={start:s,end:o};return e=this.eventsToSegs(n,function(t){var e=T(t,a);return e?[e]:[]}),e.sort(gt),e},getMoreLinkText:function(t){var e=this.view.opt("eventLimitText");return"function"==typeof e?e(t):"+"+t+" "+e},getCellSegs:function(t,e){for(var i,n=this.rowStructs[t.row].segMatrix,s=e||0,o=[];s<n.length;)i=n[s][t.col],i&&o.push(i),s++;return o}});var ae=se.extend({slotDuration:null,snapDuration:null,minTime:null,maxTime:null,axisFormat:null,dayEls:null,slatEls:null,slatTops:null,helperEl:null,businessHourSegs:null,constructor:function(){se.apply(this,arguments),this.processOptions()},renderDates:function(){this.el.html(this.renderHtml()),this.dayEls=this.el.find(".fc-day"),this.slatEls=this.el.find(".fc-slats tr")},renderBusinessHours:function(){var t=this.view.calendar.getBusinessHoursEvents();this.businessHourSegs=this.renderFill("businessHours",this.eventsToSegs(t),"bgevent")},renderHtml:function(){return'<div class="fc-bg"><table>'+this.rowHtml("slotBg")+'</table></div><div class="fc-slats"><table>'+this.slatRowHtml()+"</table></div>"},slotBgCellHtml:function(t){return this.bgCellHtml(t)},slatRowHtml:function(){for(var t,i,n,s=this.view,o=this.isRTL,a="",r=this.slotDuration.asMinutes()%15===0,l=e.duration(+this.minTime);l<this.maxTime;)t=this.start.clone().time(l),i=t.minutes(),n='<td class="fc-axis fc-time '+s.widgetContentClass+'" '+s.axisStyleAttr()+">"+(r&&i?"":"<span>"+j(t.format(this.axisFormat))+"</span>")+"</td>",a+="<tr "+(i?'class="fc-minor"':"")+">"+(o?"":n)+'<td class="'+s.widgetContentClass+'"/>'+(o?n:"")+"</tr>",l.add(this.slotDuration);return a},processOptions:function(){var t=this.view,i=t.opt("slotDuration"),n=t.opt("snapDuration");i=e.duration(i),n=n?e.duration(n):i,this.slotDuration=i,this.snapDuration=n,this.cellDuration=n,this.minTime=e.duration(t.opt("minTime")),this.maxTime=e.duration(t.opt("maxTime")),this.axisFormat=t.opt("axisFormat")||t.opt("smallTimeFormat")},computeColHeadFormat:function(){return this.colCnt>1?this.view.opt("dayOfMonthFormat"):"dddd"},computeEventTimeFormat:function(){return this.view.opt("noMeridiemTimeFormat")},computeDisplayEventEnd:function(){return!0},updateCells:function(){var t,e=this.view,i=[];for(t=this.start.clone();t.isBefore(this.end);)i.push({day:t.clone()}),t.add(1,"day"),t=e.skipHiddenDays(t);this.isRTL&&i.reverse(),this.colData=i,this.colCnt=i.length,this.rowCnt=Math.ceil((this.maxTime-this.minTime)/this.snapDuration)},computeCellDate:function(t){var e=this.computeSnapTime(t.row);return this.view.calendar.rezoneDate(t.day).time(e)},getColEl:function(t){return this.dayEls.eq(t)},computeSnapTime:function(t){return e.duration(this.minTime+this.snapDuration*t)},rangeToSegs:function(t){var e,i,n,s,o=this.colCnt,a=[];for(t={start:t.start.clone().stripZone(),end:t.end.clone().stripZone()},i=0;i<o;i++)n=this.colData[i].day,s={start:n.clone().time(this.minTime),end:n.clone().time(this.maxTime)},e=T(t,s),e&&(e.col=i,a.push(e));return a},updateSize:function(t){this.computeSlatTops(),t&&this.updateSegVerticals()},computeRowCoords:function(){var t,e,i=this.el.offset().top,n=[];for(t=0;t<this.rowCnt;t++)e={top:i+this.computeTimeTop(this.computeSnapTime(t))},t>0&&(n[t-1].bottom=e.top),n.push(e);return e.bottom=e.top+this.computeTimeTop(this.computeSnapTime(t)),n},computeDateTop:function(t,i){return this.computeTimeTop(e.duration(t.clone().stripZone()-i.clone().stripTime()))},computeTimeTop:function(t){var e,i,n,s,o=(t-this.minTime)/this.slotDuration;return o=Math.max(0,o),o=Math.min(this.slatEls.length,o),e=Math.floor(o),i=o-e,n=this.slatTops[e],i?(s=this.slatTops[e+1],n+(s-n)*i):n},computeSlatTops:function(){var e,i=[];this.slatEls.each(function(n,s){e=t(s).position().top,i.push(e)}),i.push(e+this.slatEls.last().outerHeight()),this.slatTops=i},renderDrag:function(t,e){return e?(this.renderRangeHelper(t,e),this.applyDragOpacity(this.helperEl),!0):void this.renderHighlight(this.view.calendar.ensureVisibleEventRange(t))},destroyDrag:function(){this.destroyHelper(),this.destroyHighlight()},renderEventResize:function(t,e){this.renderRangeHelper(t,e)},destroyEventResize:function(){this.destroyHelper()},renderHelper:function(e,i){var n,s,o,a,r=this.eventsToSegs([e]);for(r=this.renderFgSegEls(r),n=this.renderSegTable(r),s=0;s<r.length;s++)o=r[s],i&&i.col===o.col&&(a=i.el,o.el.css({left:a.css("left"),right:a.css("right"),"margin-left":a.css("margin-left"),"margin-right":a.css("margin-right")}));this.helperEl=t('<div class="fc-helper-skeleton"/>').append(n).appendTo(this.el)},destroyHelper:function(){this.helperEl&&(this.helperEl.remove(),this.helperEl=null)},renderSelection:function(t){this.view.opt("selectHelper")?this.renderRangeHelper(t):this.renderHighlight(t)},destroySelection:function(){this.destroyHelper(),this.destroyHighlight()},renderFill:function(e,i,n){var s,o,a,r,l,h,c,u,d,f;if(i.length){for(i=this.renderFillSegEls(e,i),s=this.groupSegCols(i),n=n||e.toLowerCase(),o=t('<div class="fc-'+n+'-skeleton"><table><tr/></table></div>'),a=o.find("tr"),r=0;r<s.length;r++)if(l=s[r],h=t("<td/>").appendTo(a),l.length)for(c=t('<div class="fc-'+n+'-container"/>').appendTo(h),u=this.colData[r].day,d=0;d<l.length;d++)f=l[d],c.append(f.el.css({top:this.computeDateTop(f.start,u),bottom:-this.computeDateTop(f.end,u)}));this.bookendCells(a,e),this.el.append(o),this.elsByFill[e]=o}return i}});ae.mixin({eventSkeletonEl:null,renderFgSegs:function(e){return e=this.renderFgSegEls(e),this.el.append(this.eventSkeletonEl=t('<div class="fc-content-skeleton"/>').append(this.renderSegTable(e))),e},destroyFgSegs:function(t){this.eventSkeletonEl&&(this.eventSkeletonEl.remove(),this.eventSkeletonEl=null)},renderSegTable:function(e){var i,n,s,o,a,r,l=t("<table><tr/></table>"),h=l.find("tr");for(i=this.groupSegCols(e),this.computeSegVerticals(e),o=0;o<i.length;o++){for(a=i[o],_t(a),r=t('<div class="fc-event-container"/>'),n=0;n<a.length;n++)s=a[n],s.el.css(this.generateSegPositionCss(s)),s.bottom-s.top<30&&s.el.addClass("fc-short"),r.append(s.el);h.append(t("<td/>").append(r))}return this.bookendCells(h,"eventSkeleton"),l},updateSegVerticals:function(){var t,e=(this.segs||[]).concat(this.businessHourSegs||[]);for(this.computeSegVerticals(e),t=0;t<e.length;t++)e[t].el.css(this.generateSegVerticalCss(e[t]))},computeSegVerticals:function(t){var e,i;for(e=0;e<t.length;e++)i=t[e],i.top=this.computeDateTop(i.start,i.start),i.bottom=this.computeDateTop(i.end,i.start)},fgSegHtml:function(t,e){var i,n,s,o=this.view,a=t.event,r=o.isEventDraggable(a),l=!e&&t.isStart&&o.isEventResizableFromStart(a),h=!e&&t.isEnd&&o.isEventResizableFromEnd(a),c=this.getSegClasses(t,r,l||h),u=B(this.getEventSkinCss(a));return c.unshift("fc-time-grid-event","fc-v-event"),o.isMultiDayEvent(a)?(t.isStart||t.isEnd)&&(i=this.getEventTimeText(t),n=this.getEventTimeText(t,"LT"),s=this.getEventTimeText(t,null,!1)):(i=this.getEventTimeText(a),n=this.getEventTimeText(a,"LT"),s=this.getEventTimeText(a,null,!1)),'<a class="'+c.join(" ")+'"'+(a.url?' href="'+j(a.url)+'"':"")+(u?' style="'+u+'"':"")+'><div class="fc-content">'+(i?'<div class="fc-time" data-start="'+j(s)+'" data-full="'+j(n)+'"><span>'+j(i)+"</span></div>":"")+(a.title?'<div class="fc-title">'+j(a.title)+"</div>":"")+'</div><div class="fc-bg"/>'+(h?'<div class="fc-resizer fc-end-resizer" />':"")+"</a>"},generateSegPositionCss:function(t){var e,i,n=this.view.opt("slotEventOverlap"),s=t.backwardCoord,o=t.forwardCoord,a=this.generateSegVerticalCss(t);return n&&(o=Math.min(1,s+2*(o-s))),this.isRTL?(e=1-o,i=s):(e=s,i=1-o),a.zIndex=t.level+1,a.left=100*e+"%",a.right=100*i+"%",n&&t.forwardPressure&&(a[this.isRTL?"marginLeft":"marginRight"]=20),a},generateSegVerticalCss:function(t){return{top:t.top,bottom:-t.bottom}},groupSegCols:function(t){var e,i=[];for(e=0;e<this.colCnt;e++)i.push([]);for(e=0;e<t.length;e++)i[t[e].col].push(t[e]);return i}});var re=Ot.View=ht.extend({type:null,name:null,title:null,calendar:null,options:null,coordMap:null,el:null,isDisplayed:!1,isSkeletonRendered:!1,isEventsRendered:!1,start:null,end:null,intervalStart:null,intervalEnd:null,intervalDuration:null,intervalUnit:null,isSelected:!1,scrollerEl:null,scrollTop:null,widgetHeaderClass:null,widgetContentClass:null,highlightStateClass:null,nextDayThreshold:null,isHiddenDayHash:null,documentMousedownProxy:null,constructor:function(t,i,n,s){this.calendar=t,this.type=this.name=i,this.options=n,this.intervalDuration=s||e.duration(1,"day"),this.nextDayThreshold=e.duration(this.opt("nextDayThreshold")),this.initThemingProps(),this.initHiddenDays(),this.documentMousedownProxy=G(this,"documentMousedown"),this.initialize()},initialize:function(){},opt:function(t){return this.options[t]},trigger:function(t,e){var i=this.calendar;return i.trigger.apply(i,[t,e||this].concat(Array.prototype.slice.call(arguments,2),[this]))},setDate:function(t){this.setRange(this.computeRange(t))},setRange:function(e){t.extend(this,e),this.updateTitle()},computeRange:function(t){var e,i,n=I(this.intervalDuration),s=t.clone().startOf(n),o=s.clone().add(this.intervalDuration);return/year|month|week|day/.test(n)?(s.stripTime(),o.stripTime()):(s.hasTime()||(s=this.calendar.rezoneDate(s)),o.hasTime()||(o=this.calendar.rezoneDate(o))),e=s.clone(),e=this.skipHiddenDays(e),i=o.clone(),i=this.skipHiddenDays(i,-1,!0),{intervalUnit:n,intervalStart:s,intervalEnd:o,start:e,end:i}},computePrevDate:function(t){return this.massageCurrentDate(t.clone().startOf(this.intervalUnit).subtract(this.intervalDuration),-1)},computeNextDate:function(t){return this.massageCurrentDate(t.clone().startOf(this.intervalUnit).add(this.intervalDuration))},massageCurrentDate:function(t,e){return this.intervalDuration.as("days")<=1&&this.isHiddenDay(t)&&(t=this.skipHiddenDays(t,e),t.startOf("day")),t},updateTitle:function(){this.title=this.computeTitle()},computeTitle:function(){return this.formatRange({start:this.intervalStart,end:this.intervalEnd},this.opt("titleFormat")||this.computeTitleFormat(),this.opt("titleRangeSeparator"))},computeTitleFormat:function(){return"year"==this.intervalUnit?"YYYY":"month"==this.intervalUnit?this.opt("monthYearFormat"):this.intervalDuration.as("days")>1?"ll":"LL"},formatRange:function(t,e,i){var n=t.end;return n.hasTime()||(n=n.clone().subtract(1)),st(t.start,n,e,i,this.opt("isRTL"))},setElement:function(t){this.el=t,this.bindGlobalHandlers()},removeElement:function(){this.clear(),this.isSkeletonRendered&&(this.destroySkeleton(),this.isSkeletonRendered=!1),this.unbindGlobalHandlers(),this.el.remove()},display:function(t){var e=null;this.isDisplayed&&(e=this.queryScroll()),this.clear(),this.setDate(t),this.render(),this.updateSize(),this.renderBusinessHours(),this.isDisplayed=!0,e=this.computeInitialScroll(e),this.forceScroll(e),this.triggerRender()},clear:function(){this.isDisplayed&&(this.unselect(),this.clearEvents(),this.triggerDestroy(),this.destroyBusinessHours(),this.destroy(),this.isDisplayed=!1)},render:function(){this.isSkeletonRendered||(this.renderSkeleton(),this.isSkeletonRendered=!0),this.renderDates()},destroy:function(){this.destroyDates()},renderSkeleton:function(){},destroySkeleton:function(){},renderDates:function(){},destroyDates:function(){},renderBusinessHours:function(){},destroyBusinessHours:function(){},triggerRender:function(){this.trigger("viewRender",this,this,this.el)},triggerDestroy:function(){this.trigger("viewDestroy",this,this,this.el)},bindGlobalHandlers:function(){t(document).on("mousedown",this.documentMousedownProxy)},unbindGlobalHandlers:function(){t(document).off("mousedown",this.documentMousedownProxy)},initThemingProps:function(){var t=this.opt("theme")?"ui":"fc";this.widgetHeaderClass=t+"-widget-header",this.widgetContentClass=t+"-widget-content",this.highlightStateClass=t+"-state-highlight"},updateSize:function(t){var e;t&&(e=this.queryScroll()),this.updateHeight(),this.updateWidth(),t&&this.setScroll(e)},updateWidth:function(){},updateHeight:function(){var t=this.calendar;this.setHeight(t.getSuggestedViewHeight(),t.isHeightAuto())},setHeight:function(t,e){},computeScrollerHeight:function(t){var e,i,n=this.scrollerEl;return e=this.el.add(n),e.css({position:"relative",left:-1}),i=this.el.outerHeight()-n.height(),e.css({position:"",left:""}),t-i},computeInitialScroll:function(t){return 0},queryScroll:function(){if(this.scrollerEl)return this.scrollerEl.scrollTop()},setScroll:function(t){if(this.scrollerEl)return this.scrollerEl.scrollTop(t)},forceScroll:function(t){var e=this;this.setScroll(t),setTimeout(function(){e.setScroll(t)},0)},displayEvents:function(t){var e=this.queryScroll();this.clearEvents(),this.renderEvents(t),this.isEventsRendered=!0,this.setScroll(e),this.triggerEventRender()},clearEvents:function(){this.isEventsRendered&&(this.triggerEventDestroy(),this.destroyEvents(),this.isEventsRendered=!1)},renderEvents:function(t){},destroyEvents:function(){},triggerEventRender:function(){this.renderedEventSegEach(function(t){this.trigger("eventAfterRender",t.event,t.event,t.el)}),this.trigger("eventAfterAllRender")},triggerEventDestroy:function(){this.renderedEventSegEach(function(t){this.trigger("eventDestroy",t.event,t.event,t.el)})},resolveEventEl:function(e,i){var n=this.trigger("eventRender",e,e,i);return n===!1?i=null:n&&n!==!0&&(i=t(n)),i},showEvent:function(t){this.renderedEventSegEach(function(t){t.el.css("visibility","")},t)},hideEvent:function(t){this.renderedEventSegEach(function(t){t.el.css("visibility","hidden")},t)},renderedEventSegEach:function(t,e){var i,n=this.getEventSegs();for(i=0;i<n.length;i++)e&&n[i].event._id!==e._id||n[i].el&&t.call(this,n[i])},getEventSegs:function(){return[]},isEventDraggable:function(t){var e=t.source||{};return W(t.startEditable,e.startEditable,this.opt("eventStartEditable"),t.editable,e.editable,this.opt("editable"))},reportEventDrop:function(t,e,i,n,s){var o=this.calendar,a=o.mutateEvent(t,e,i),r=function(){a.undo(),o.reportEventChange()};this.triggerEventDrop(t,a.dateDelta,r,n,s),o.reportEventChange()},triggerEventDrop:function(t,e,i,n,s){this.trigger("eventDrop",n[0],t,e,i,s,{})},reportExternalDrop:function(e,i,n,s,o){var a,r,l=e.eventProps;l&&(a=t.extend({},l,i),r=this.calendar.renderEvent(a,e.stick)[0]),this.triggerExternalDrop(r,i,n,s,o)},triggerExternalDrop:function(t,e,i,n,s){this.trigger("drop",i[0],e.start,n,s),t&&this.trigger("eventReceive",null,t)},renderDrag:function(t,e){},destroyDrag:function(){},isEventResizableFromStart:function(t){return this.opt("eventResizableFromStart")&&this.isEventResizable(t)},isEventResizableFromEnd:function(t){return this.isEventResizable(t)},isEventResizable:function(t){var e=t.source||{};return W(t.durationEditable,e.durationEditable,this.opt("eventDurationEditable"),t.editable,e.editable,this.opt("editable"))},reportEventResize:function(t,e,i,n,s){var o=this.calendar,a=o.mutateEvent(t,e,i),r=function(){a.undo(),o.reportEventChange()};this.triggerEventResize(t,a.durationDelta,r,n,s),o.reportEventChange()},triggerEventResize:function(t,e,i,n,s){this.trigger("eventResize",n[0],t,e,i,s,{})},select:function(t,e){this.unselect(e),this.renderSelection(t),this.reportSelection(t,e)},renderSelection:function(t){},reportSelection:function(t,e){this.isSelected=!0,this.trigger("select",null,t.start,t.end,e)},unselect:function(t){this.isSelected&&(this.isSelected=!1,this.destroySelection(),this.trigger("unselect",null,t))},destroySelection:function(){},documentMousedown:function(e){var i;this.isSelected&&this.opt("unselectAuto")&&w(e)&&(i=this.opt("unselectCancel"),i&&t(e.target).closest(i).length||this.unselect(e))},initHiddenDays:function(){var e,i=this.opt("hiddenDays")||[],n=[],s=0;for(this.opt("weekends")===!1&&i.push(0,6),e=0;e<7;e++)(n[e]=t.inArray(e,i)!==-1)||s++;if(!s)throw"invalid hiddenDays";this.isHiddenDayHash=n},isHiddenDay:function(t){return e.isMoment(t)&&(t=t.day()),this.isHiddenDayHash[t]},skipHiddenDays:function(t,e,i){var n=t.clone();for(e=e||1;this.isHiddenDayHash[(n.day()+(i?e:0)+7)%7];)n.add(e,"days");return n},computeDayRange:function(t){var e,i=t.start.clone().stripTime(),n=t.end,s=null;return n&&(s=n.clone().stripTime(),e=+n.time(),e&&e>=this.nextDayThreshold&&s.add(1,"days")),(!n||s<=i)&&(s=i.clone().add(1,"days")),{start:i,end:s}},isMultiDayEvent:function(t){var e=this.computeDayRange(t);return e.end.diff(e.start,"days")>1}}),le=Ot.Calendar=Ot.CalendarBase=ht.extend({dirDefaults:null,langDefaults:null,overrides:null,options:null,viewSpecCache:null,view:null,header:null,constructor:Et,initOptions:function(t){var e,s,o,a;t=n(t),e=t.lang,s=he[e],s||(e=le.defaults.lang,s=he[e]||{}),o=W(t.isRTL,s.isRTL,le.defaults.isRTL),a=o?le.rtlDefaults:{},this.dirDefaults=a,this.langDefaults=s,this.overrides=t,this.options=i(le.defaults,a,s,t),Mt(this.options),this.viewSpecCache={}},getViewSpec:function(t){var e=this.viewSpecCache;return e[t]||(e[t]=this.buildViewSpec(t))},getUnitViewSpec:function(e){var i,n,s;if(t.inArray(e,jt)!=-1)for(i=this.header.getViewsWithButtons(),t.each(Ot.views,function(t){i.push(t)}),n=0;n<i.length;n++)if(s=this.getViewSpec(i[n]),s&&s.singleUnit==e)return s},buildViewSpec:function(t){for(var n,s,o,a,r,l,h=this.overrides.views||{},c=[],u=[],d=t;d&&!n;)s=Nt[d]||{},o=h[d]||{},a=a||o.duration||s.duration,d=o.type||s.type,"function"==typeof s?(n=s,c.unshift(n.defaults||{})):c.unshift(s),u.unshift(o);if(n)return l={"class":n,type:t},a&&(a=e.duration(a),a.valueOf()||(a=null)),a&&(l.duration=a,r=I(a),1===a.as(r)&&(l.singleUnit=r,u.unshift(h[r]||{}))),l.defaults=i.apply(null,c),l.overrides=i.apply(null,u),this.buildViewSpecOptions(l),this.buildViewSpecButtonText(l,t),l},buildViewSpecOptions:function(t){t.options=i(le.defaults,t.defaults,this.dirDefaults,this.langDefaults,this.overrides,t.overrides),Mt(t.options)},buildViewSpecButtonText:function(t,e){function i(i){var n=i.buttonText||{};return n[e]||(t.singleUnit?n[t.singleUnit]:null)}t.buttonTextOverride=i(this.overrides)||t.overrides.buttonText,t.buttonTextDefault=i(this.langDefaults)||i(this.dirDefaults)||t.defaults.buttonText||i(le.defaults)||(t.duration?this.humanizeDuration(t.duration):null)||e},instantiateView:function(t){var e=this.getViewSpec(t);return new e["class"](this,t,e.options,e.duration)},isValidViewType:function(t){return Boolean(this.getViewSpec(t))}});le.defaults={titleRangeSeparator:" — ",monthYearFormat:"MMMM YYYY",defaultTimedEventDuration:"02:00:00",defaultAllDayEventDuration:{days:1},forceEventDuration:!1,nextDayThreshold:"09:00:00",defaultView:"month",aspectRatio:1.35,header:{left:"title",center:"",right:"today prev,next"},weekends:!0,weekNumbers:!1,weekNumberTitle:"W",weekNumberCalculation:"local",lazyFetching:!0,startParam:"start",endParam:"end",timezoneParam:"timezone",timezone:!1,isRTL:!1,buttonText:{prev:"prev",next:"next",prevYear:"prev year",nextYear:"next year",year:"year",today:"today",month:"month",week:"week",day:"day"},buttonIcons:{prev:"left-single-arrow",next:"right-single-arrow",prevYear:"left-double-arrow",nextYear:"right-double-arrow"},theme:!1,themeButtonIcons:{prev:"circle-triangle-w",next:"circle-triangle-e",prevYear:"seek-prev",nextYear:"seek-next"},dragOpacity:.75,dragRevertDuration:500,dragScroll:!0,unselectAuto:!0,dropAccept:"*",eventLimit:!1,eventLimitText:"more",eventLimitClick:"popover",dayPopoverFormat:"LL",handleWindowResize:!0,windowResizeDelay:200},le.englishDefaults={dayPopoverFormat:"dddd, MMMM D"},le.rtlDefaults={header:{left:"next,prev today",center:"",right:"title"},buttonIcons:{prev:"right-single-arrow",next:"left-single-arrow",prevYear:"right-double-arrow",nextYear:"left-double-arrow"},themeButtonIcons:{prev:"circle-triangle-e",next:"circle-triangle-w",nextYear:"seek-prev",prevYear:"seek-next"}};var he=Ot.langs={};Ot.datepickerLang=function(e,i,n){var s=he[e]||(he[e]={});s.isRTL=n.isRTL,s.weekNumberTitle=n.weekHeader,t.each(ce,function(t,e){s[t]=e(n)}),t.datepicker&&(t.datepicker.regional[i]=t.datepicker.regional[e]=n,t.datepicker.regional.en=t.datepicker.regional[""],t.datepicker.setDefaults(n))},Ot.lang=function(e,n){var s,o;s=he[e]||(he[e]={}),n&&(s=he[e]=i(s,n)),o=It(e),t.each(ue,function(t,e){null==s[t]&&(s[t]=e(o,s))}),le.defaults.lang=e};var ce={buttonText:function(t){return{prev:Y(t.prevText),next:Y(t.nextText),today:Y(t.currentText)}},monthYearFormat:function(t){return t.showMonthAfterYear?"YYYY["+t.yearSuffix+"] MMMM":"MMMM YYYY["+t.yearSuffix+"]"}},ue={dayOfMonthFormat:function(t,e){var i=t.longDateFormat("l");return i=i.replace(/^Y+[^\w\s]*|[^\w\s]*Y+$/g,""),e.isRTL?i+=" ddd":i="ddd "+i,i},mediumTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"a")},smallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"a")},extraSmallTimeFormat:function(t){return t.longDateFormat("LT").replace(":mm","(:mm)").replace(/(\Wmm)$/,"($1)").replace(/\s*a$/i,"t")},hourFormat:function(t){return t.longDateFormat("LT").replace(":mm","").replace(/(\Wmm)$/,"").replace(/\s*a$/i,"a")},noMeridiemTimeFormat:function(t){return t.longDateFormat("LT").replace(/\s*a$/i,"")}},de={smallDayDateFormat:function(t){return t.isRTL?"D dd":"dd D"},weekFormat:function(t){return t.isRTL?"w[ "+t.weekNumberTitle+"]":"["+t.weekNumberTitle+" ]w"},smallWeekFormat:function(t){return t.isRTL?"w["+t.weekNumberTitle+"]":"["+t.weekNumberTitle+"]w"}};Ot.lang("en",le.englishDefaults),Ot.sourceNormalizers=[],Ot.sourceFetchers=[];var fe={dataType:"json",cache:!1},pe=1;le.prototype.getPeerEvents=function(t,e){var i,n,s=this.getEventCache(),o=[];for(i=0;i<s.length;i++)n=s[i],t&&t._id===n._id||o.push(n);return o};var me=Nt.basic=re.extend({dayGrid:null,dayNumbersVisible:!1,weekNumbersVisible:!1,weekNumberWidth:null,headRowEl:null,initialize:function(){this.dayGrid=new oe(this),this.coordMap=this.dayGrid.coordMap},setRange:function(t){re.prototype.setRange.call(this,t),this.dayGrid.breakOnWeeks=/year|month|week/.test(this.intervalUnit),this.dayGrid.setRange(t)},computeRange:function(t){var e=re.prototype.computeRange.call(this,t);return/year|month/.test(e.intervalUnit)&&(e.start.startOf("week"),e.start=this.skipHiddenDays(e.start),e.end.weekday()&&(e.end.add(1,"week").startOf("week"),e.end=this.skipHiddenDays(e.end,-1,!0))),e},render:function(){this.dayNumbersVisible=this.dayGrid.rowCnt>1,this.weekNumbersVisible=this.opt("weekNumbers"),this.dayGrid.numbersVisible=this.dayNumbersVisible||this.weekNumbersVisible,this.el.addClass("fc-basic-view").html(this.renderHtml()),this.headRowEl=this.el.find("thead .fc-row"),this.scrollerEl=this.el.find(".fc-day-grid-container"),this.dayGrid.coordMap.containerEl=this.scrollerEl,this.dayGrid.setElement(this.el.find(".fc-day-grid")),this.dayGrid.renderDates(this.hasRigidRows())},destroy:function(){this.dayGrid.destroyDates(),this.dayGrid.removeElement()},renderBusinessHours:function(){this.dayGrid.renderBusinessHours()},renderHtml:function(){return'<table><thead class="fc-head"><tr><td class="'+this.widgetHeaderClass+'">'+this.dayGrid.headHtml()+'</td></tr></thead><tbody class="fc-body"><tr><td class="'+this.widgetContentClass+'"><div class="fc-day-grid-container"><div class="fc-day-grid"/></div></td></tr></tbody></table>'},headIntroHtml:function(){if(this.weekNumbersVisible)return'<th class="fc-week-number '+this.widgetHeaderClass+'" '+this.weekNumberStyleAttr()+"><span>"+j(this.opt("weekNumberTitle"))+"</span></th>"},numberIntroHtml:function(t){if(this.weekNumbersVisible)return'<td class="fc-week-number" '+this.weekNumberStyleAttr()+"><span>"+this.dayGrid.getCell(t,0).start.format("w")+"</span></td>"},dayIntroHtml:function(){if(this.weekNumbersVisible)return'<td class="fc-week-number '+this.widgetContentClass+'" '+this.weekNumberStyleAttr()+"></td>"},introHtml:function(){if(this.weekNumbersVisible)return'<td class="fc-week-number" '+this.weekNumberStyleAttr()+"></td>"},numberCellHtml:function(t){var e,i=t.start;return this.dayNumbersVisible?(e=this.dayGrid.getDayClasses(i),e.unshift("fc-day-number"),'<td class="'+e.join(" ")+'" data-date="'+i.format()+'">'+i.date()+"</td>"):"<td/>"},weekNumberStyleAttr:function(){return null!==this.weekNumberWidth?'style="width:'+this.weekNumberWidth+'px"':""},hasRigidRows:function(){var t=this.opt("eventLimit");return t&&"number"!=typeof t},updateWidth:function(){this.weekNumbersVisible&&(this.weekNumberWidth=c(this.el.find(".fc-week-number")))},setHeight:function(t,e){var i,n=this.opt("eventLimit");d(this.scrollerEl),o(this.headRowEl),this.dayGrid.destroySegPopover(),n&&"number"==typeof n&&this.dayGrid.limitRows(n),i=this.computeScrollerHeight(t),this.setGridHeight(i,e),n&&"number"!=typeof n&&this.dayGrid.limitRows(n),!e&&u(this.scrollerEl,i)&&(s(this.headRowEl,v(this.scrollerEl)),i=this.computeScrollerHeight(t),this.scrollerEl.height(i))},setGridHeight:function(t,e){e?h(this.dayGrid.rowEls):l(this.dayGrid.rowEls,t,!0)},renderEvents:function(t){this.dayGrid.renderEvents(t),this.updateHeight()},getEventSegs:function(){return this.dayGrid.getEventSegs()},destroyEvents:function(){this.dayGrid.destroyEvents()},renderDrag:function(t,e){return this.dayGrid.renderDrag(t,e)},destroyDrag:function(){this.dayGrid.destroyDrag()},renderSelection:function(t){this.dayGrid.renderSelection(t)},destroySelection:function(){this.dayGrid.destroySelection()}}),ge=Nt.month=me.extend({computeRange:function(t){var e,i=me.prototype.computeRange.call(this,t);return this.isFixedWeeks()&&(e=Math.ceil(i.end.diff(i.start,"weeks",!0)),i.end.add(6-e,"weeks")),i},setGridHeight:function(t,e){e=e||"variable"===this.opt("weekMode"),e&&(t*=this.rowCnt/6),l(this.dayGrid.rowEls,t,!e)},isFixedWeeks:function(){var t=this.opt("weekMode");return t?"fixed"===t:this.opt("fixedWeekCount")}});ge.duration={months:1},ge.defaults={fixedWeekCount:!0},Nt.basicWeek={type:"basic",duration:{weeks:1}},Nt.basicDay={type:"basic",duration:{days:1}};var ve={allDaySlot:!0,allDayText:"all-day",scrollTime:"06:00:00",slotDuration:"00:30:00",minTime:"00:00:00",maxTime:"24:00:00",slotEventOverlap:!0},be=5,ye=Nt.agenda=re.extend({timeGrid:null,dayGrid:null,axisWidth:null,noScrollRowEls:null,bottomRuleEl:null,bottomRuleHeight:null,initialize:function(){this.timeGrid=new ae(this),this.opt("allDaySlot")?(this.dayGrid=new oe(this),this.coordMap=new Qt([this.dayGrid.coordMap,this.timeGrid.coordMap])):this.coordMap=this.timeGrid.coordMap},setRange:function(t){re.prototype.setRange.call(this,t),this.timeGrid.setRange(t),this.dayGrid&&this.dayGrid.setRange(t)},render:function(){this.el.addClass("fc-agenda-view").html(this.renderHtml()),this.scrollerEl=this.el.find(".fc-time-grid-container"),this.timeGrid.coordMap.containerEl=this.scrollerEl,this.timeGrid.setElement(this.el.find(".fc-time-grid")),this.timeGrid.renderDates(),this.bottomRuleEl=t('<hr class="fc-divider '+this.widgetHeaderClass+'"/>').appendTo(this.timeGrid.el),this.dayGrid&&(this.dayGrid.setElement(this.el.find(".fc-day-grid")),this.dayGrid.renderDates(),this.dayGrid.bottomCoordPadding=this.dayGrid.el.next("hr").outerHeight()),this.noScrollRowEls=this.el.find(".fc-row:not(.fc-scroller *)")},destroy:function(){this.timeGrid.destroyDates(),this.timeGrid.removeElement(),this.dayGrid&&(this.dayGrid.destroyDates(),this.dayGrid.removeElement())},renderBusinessHours:function(){this.timeGrid.renderBusinessHours(),this.dayGrid&&this.dayGrid.renderBusinessHours()},renderHtml:function(){return'<table><thead class="fc-head"><tr><td class="'+this.widgetHeaderClass+'">'+this.timeGrid.headHtml()+'</td></tr></thead><tbody class="fc-body"><tr><td class="'+this.widgetContentClass+'">'+(this.dayGrid?'<div class="fc-day-grid"/><hr class="fc-divider '+this.widgetHeaderClass+'"/>':"")+'<div class="fc-time-grid-container"><div class="fc-time-grid"/></div></td></tr></tbody></table>'},headIntroHtml:function(){var t,e;return this.opt("weekNumbers")?(t=this.timeGrid.getCell(0).start,e=t.format(this.opt("smallWeekFormat")),'<th class="fc-axis fc-week-number '+this.widgetHeaderClass+'" '+this.axisStyleAttr()+"><span>"+j(e)+"</span></th>"):'<th class="fc-axis '+this.widgetHeaderClass+'" '+this.axisStyleAttr()+"></th>"},dayIntroHtml:function(){return'<td class="fc-axis '+this.widgetContentClass+'" '+this.axisStyleAttr()+"><span>"+(this.opt("allDayHtml")||j(this.opt("allDayText")))+"</span></td>"},slotBgIntroHtml:function(){return'<td class="fc-axis '+this.widgetContentClass+'" '+this.axisStyleAttr()+"></td>"},introHtml:function(){return'<td class="fc-axis" '+this.axisStyleAttr()+"></td>"},axisStyleAttr:function(){return null!==this.axisWidth?'style="width:'+this.axisWidth+'px"':""},updateSize:function(t){this.timeGrid.updateSize(t),re.prototype.updateSize.call(this,t)},updateWidth:function(){this.axisWidth=c(this.el.find(".fc-axis"))},setHeight:function(t,e){var i,n;null===this.bottomRuleHeight&&(this.bottomRuleHeight=this.bottomRuleEl.outerHeight()),this.bottomRuleEl.hide(),this.scrollerEl.css("overflow",""),d(this.scrollerEl),o(this.noScrollRowEls),this.dayGrid&&(this.dayGrid.destroySegPopover(),i=this.opt("eventLimit"),i&&"number"!=typeof i&&(i=be),
i&&this.dayGrid.limitRows(i)),e||(n=this.computeScrollerHeight(t),u(this.scrollerEl,n)?(s(this.noScrollRowEls,v(this.scrollerEl)),n=this.computeScrollerHeight(t),this.scrollerEl.height(n)):(this.scrollerEl.height(n).css("overflow","hidden"),this.bottomRuleEl.show()))},computeInitialScroll:function(){var t=e.duration(this.opt("scrollTime")),i=this.timeGrid.computeTimeTop(t);return i=Math.ceil(i),i&&i++,i},renderEvents:function(t){var e,i,n=[],s=[],o=[];for(i=0;i<t.length;i++)t[i].allDay?n.push(t[i]):s.push(t[i]);e=this.timeGrid.renderEvents(s),this.dayGrid&&(o=this.dayGrid.renderEvents(n)),this.updateHeight()},getEventSegs:function(){return this.timeGrid.getEventSegs().concat(this.dayGrid?this.dayGrid.getEventSegs():[])},destroyEvents:function(){this.timeGrid.destroyEvents(),this.dayGrid&&this.dayGrid.destroyEvents()},renderDrag:function(t,e){return t.start.hasTime()?this.timeGrid.renderDrag(t,e):this.dayGrid?this.dayGrid.renderDrag(t,e):void 0},destroyDrag:function(){this.timeGrid.destroyDrag(),this.dayGrid&&this.dayGrid.destroyDrag()},renderSelection:function(t){t.start.hasTime()||t.end.hasTime()?this.timeGrid.renderSelection(t):this.dayGrid&&this.dayGrid.renderSelection(t)},destroySelection:function(){this.timeGrid.destroySelection(),this.dayGrid&&this.dayGrid.destroySelection()}});ye.defaults=ve,Nt.agendaWeek={type:"agenda",duration:{weeks:1}},Nt.agendaDay={type:"agenda",duration:{days:1}}}),$(document).ready(function(){$("#lead-search").on("click",function(t){return $(".ajax-modal").show(),$(".ajax-modal").load("lead-search.html #lead-search-container"),t.preventDefault(),!1}),$("#manual_dial").on("click",function(t){return $(".ajax-modal").show(),$(".ajax-modal").load("manual-dial.html #manual-dial-container"),t.preventDefault(),!1}),$(".ajax-modal").on("click","#lead-search-close",function(t){return t.preventDefault(),$(".ajax-modal").hide(),!1})}),$(document).ready(function(){$(".js_create_new_script").on("click",createNewScript),$(".input-without-style").on("change",this,saveInputValue),$(".js_add_rebuttals_btn_row").on("click",addRebuttalsBtnRow),$(".table").on("click",".js_delete_row",deleteRow)});
//# sourceMappingURL=data:application/json;base64,
